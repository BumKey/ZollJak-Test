//
// FX Version: fx_5_0
//
// 1 local buffer(s)
//
cbuffer cbPerFrame
{
    DirectionalLight gDirLights[3];     // Offset:    0, size:  192
    float3  gEyePosW;                   // Offset:  192, size:   12
    float   gFogStart;                  // Offset:  204, size:    4
    float   gFogRange;                  // Offset:  208, size:    4
    float4  gFogColor;                  // Offset:  224, size:   16
    float   gMinDist;                   // Offset:  240, size:    4
    float   gMaxDist;                   // Offset:  244, size:    4
    float   gMinTess;                   // Offset:  248, size:    4
    float   gMaxTess;                   // Offset:  252, size:    4
    float   gTexelCellSpaceU;           // Offset:  256, size:    4
    float   gTexelCellSpaceV;           // Offset:  260, size:    4
    float   gWorldCellSpace;            // Offset:  264, size:    4
    float2  gTexScale = { 50 };         // Offset:  272, size:    8
    float4x4 gViewProj;                 // Offset:  288, size:   64
    float4x4 gShadowTransform;          // Offset:  352, size:   64
    float4  gWorldFrustumPlanes[6];     // Offset:  416, size:   96
    Material gMaterial;                 // Offset:  512, size:   64
}

//
// 7 local object(s)
//
Texture2DArray gLayerMapArray;
Texture2D gBlendMap;
Texture2D gHeightMap;
Texture2D gShadowMap;
SamplerState samLinear
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerState samHeightmap
{
    Filter   = uint(MIN_MAG_LINEAR_MIP_POINT /* 20 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};
SamplerComparisonState samShadow
{
    Filter   = uint(COMPARISON_MIN_MAG_LINEAR_MIP_POINT /* 148 */);
    AddressU = uint(BORDER /* 4 */);
    AddressV = uint(BORDER /* 4 */);
    AddressW = uint(BORDER /* 4 */);
    BorderColor = float4(1, 1, 0, 0);
    ComparisonFunc = uint(LESS /* 2 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 6 technique(s)
    //
    technique11 Light1
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samHeightmap                      sampler      NA          NA    0        1
                // gHeightMap                        texture  float4          2d    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   x z 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                // TEXCOORD                 1   xy          2     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                // TEXCOORD                 1     zw        1     NONE   float     zw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input v0.xz
                dcl_input v1.xy
                dcl_input v2.xy
                dcl_output o0.xyz
                dcl_output o1.xy
                dcl_output o1.zw
                dcl_temps 2
                //
                // Initial variable locations:
                //   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
                //   v1.x <- vin.Tex.x; v1.y <- vin.Tex.y; 
                //   v2.x <- vin.BoundsY.x; v2.y <- vin.BoundsY.y; 
                //   o1.x <- <VS return value>.Tex.x; o1.y <- <VS return value>.Tex.y; o1.z <- <VS return value>.BoundsY.x; o1.w <- <VS return value>.BoundsY.y; 
                //   o0.x <- <VS return value>.PosW.x; o0.y <- <VS return value>.PosW.y; o0.z <- <VS return value>.PosW.z
                //
                #line 90 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r0.xy, v0.xzxx  // r0.x <- vout.PosW.x; r0.y <- vout.PosW.z
                
                #line 94
                itof r0.z, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r0.z, v1.xyxx, t0.yzxw, s0, r0.z
                mov r0.z, r0.z  // r0.z <- vout.PosW.y
                
                #line 97
                mov r1.xy, v1.xyxx  // r1.x <- vout.Tex.x; r1.y <- vout.Tex.y
                mov r1.zw, v2.xxxy  // r1.z <- vout.BoundsY.x; r1.w <- vout.BoundsY.y
                mov o1.xy, r1.xyxx
                mov o1.zw, r1.zzzw
                mov o0.xz, r0.xxyx
                mov o0.y, r0.z
                ret 
                // Approximately 11 instruction slots used
                            
            };
            HullShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //   float gMinDist;                    // Offset:  240 Size:     4
                //   float gMaxDist;                    // Offset:  244 Size:     4
                //   float gMinTess;                    // Offset:  248 Size:     4
                //   float gMaxTess;                    // Offset:  252 Size:     4
                //   float gTexelCellSpaceU;            // Offset:  256 Size:     4 [unused]
                //   float gTexelCellSpaceV;            // Offset:  260 Size:     4 [unused]
                //   float gWorldCellSpace;             // Offset:  264 Size:     4 [unused]
                //   float2 gTexScale;                  // Offset:  272 Size:     8 [unused]
                //      = 0x42480000 0x42480000 
                //   float4x4 gViewProj;                // Offset:  288 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  352 Size:    64 [unused]
                //   float4 gWorldFrustumPlanes[6];     // Offset:  416 Size:    96
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  512
                //       float4 Diffuse;                // Offset:  528
                //       float4 Specular;               // Offset:  544
                //       float4 Reflect;                // Offset:  560
                //
                //   } gMaterial;                       // Offset:  512 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Patch Constant signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_TessFactor            0   x           0 QUADEDGE   float   x   
                // SV_TessFactor            1   x           1 QUADEDGE   float   x   
                // SV_TessFactor            2   x           2 QUADEDGE   float   x   
                // SV_TessFactor            3   x           3 QUADEDGE   float   x   
                // SV_InsideTessFactor      0   x           4  QUADINT   float   x   
                // SV_InsideTessFactor      1   x           5  QUADINT   float   x   
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                // TEXCOORD                 1     zw        1     NONE   float     zw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                // Tessellation Domain   # of control points
                // -------------------- --------------------
                // Quadrilateral                           4
                //
                // Tessellation Output Primitive  Partitioning Type 
                // ------------------------------ ------------------
                // Clockwise Triangles            Even Fractional   
                //
                hs_5_0
                hs_decls 
                dcl_input_control_point_count 4
                dcl_output_control_point_count 4
                dcl_tessellator_domain domain_quad
                dcl_tessellator_partitioning partitioning_fractional_even
                dcl_tessellator_output_primitive output_triangle_cw
                dcl_hs_max_tessfactor l(64.000000)
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[32], immediateIndexed
                hs_control_point_phase 
                dcl_input vOutputControlPointID
                dcl_input v[4][0].xyz
                dcl_input v[4][1].xy
                dcl_output o0.xyz
                dcl_output o1.xy
                dcl_temps 2
                //
                // Initial variable locations:
                //   vOutputControlPointID.x <- i; 
                //   vPrim.x <- patchId; 
                //   o1.x <- <HS return value>.Tex.x; o1.y <- <HS return value>.Tex.y; 
                //   o0.x <- <HS return value>.PosW.x; o0.y <- <HS return value>.PosW.y; o0.z <- <HS return value>.PosW.z; 
                //   v[0][0].x <- p[0].PosW.x; v[0][0].y <- p[0].PosW.y; v[0][0].z <- p[0].PosW.z; 
                //   v[0][1].x <- p[0].Tex.x; v[0][1].y <- p[0].Tex.y; v[0][1].z <- p[0].BoundsY.x; v[0][1].w <- p[0].BoundsY.y; 
                //   v[1][0].x <- p[1].PosW.x; v[1][0].y <- p[1].PosW.y; v[1][0].z <- p[1].PosW.z; 
                //   v[1][1].x <- p[1].Tex.x; v[1][1].y <- p[1].Tex.y; v[1][1].z <- p[1].BoundsY.x; v[1][1].w <- p[1].BoundsY.y; 
                //   v[2][0].x <- p[2].PosW.x; v[2][0].y <- p[2].PosW.y; v[2][0].z <- p[2].PosW.z; 
                //   v[2][1].x <- p[2].Tex.x; v[2][1].y <- p[2].Tex.y; v[2][1].z <- p[2].BoundsY.x; v[2][1].w <- p[2].BoundsY.y; 
                //   v[3][0].x <- p[3].PosW.x; v[3][0].y <- p[3].PosW.y; v[3][0].z <- p[3].PosW.z; 
                //   v[3][1].x <- p[3].Tex.x; v[3][1].y <- p[3].Tex.y; v[3][1].z <- p[3].BoundsY.x; v[3][1].w <- p[3].BoundsY.y
                //
                #line 232 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r0.x, vOutputControlPointID
                mov r0.yzw, v[r0.x + 0][0].xxyz  // r0.y <- hout.PosW.x; r0.z <- hout.PosW.y; r0.w <- hout.PosW.z
                mov r1.xy, v[r0.x + 0][1].xyxx  // r1.x <- hout.Tex.x; r1.y <- hout.Tex.y
                mov o0.xyz, r0.yzwy
                mov o1.xy, r1.xyxx
                ret 
                hs_join_phase 
                dcl_input vicp[4][0].xyz
                dcl_input vicp[4][1].zw
                dcl_output_siv o0.x, finalQuadUeq0EdgeTessFactor
                dcl_output_siv o1.x, finalQuadVeq0EdgeTessFactor
                dcl_output_siv o2.x, finalQuadUeq1EdgeTessFactor
                dcl_output_siv o3.x, finalQuadVeq1EdgeTessFactor
                dcl_output_siv o4.x, finalQuadUInsideTessFactor
                dcl_output_siv o5.x, finalQuadVInsideTessFactor
                dcl_temps 7
                dcl_indexableTemp x0[6], 4
                
                #line 163
                mov r0.y, vicp[0][1].z  // r0.y <- minY
                mov r1.y, vicp[0][1].w  // r1.y <- maxY
                
                #line 168
                mov r0.xz, vicp[2][0].xxzx  // r0.x <- vMin.x; r0.z <- vMin.z
                mov r0.y, r0.y  // r0.y <- vMin.y
                mov r1.xz, vicp[1][0].xxzx  // r1.x <- vMax.x; r1.z <- vMax.z
                mov r1.y, r1.y  // r1.y <- vMax.y
                add r2.xyz, r0.xyzx, r1.xyzx
                mul r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r2.x <- boxCenter.x; r2.y <- boxCenter.y; r2.z <- boxCenter.z
                mov r0.xyz, -r0.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx
                mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r0.x <- boxExtents.x; r0.y <- boxExtents.y; r0.z <- boxExtents.z
                nop 
                mov r2.xyz, r2.xyzx
                mov r0.xyz, r0.xyzx
                mov x0[0].xyzw, cb0[26].xyzw
                mov x0[1].xyzw, cb0[27].xyzw
                mov x0[2].xyzw, cb0[28].xyzw
                mov x0[3].xyzw, cb0[29].xyzw
                mov x0[4].xyzw, cb0[30].xyzw
                mov x0[5].xyzw, cb0[31].xyzw
                
                #line 135
                mov r0.w, l(0)  // r0.w <- i
                mov r1.y, l(0)  // r1.y <- <AabbOutsideFrustumTest return value>
                mov r1.x, r0.w  // r1.x <- i
                mov r1.z, l(0)
                loop 
                  ilt r1.w, r1.x, l(6)
                  mov r1.z, l(0)
                  breakc_z r1.w
                
                #line 139
                  nop 
                  mov r3.xyz, r2.xyzx
                  mov r4.xyz, r0.xyzx
                  mov r5.xyzw, x0[r1.x + 0].xyzw
                
                #line 118
                  mov r6.xyz, -r5.xyzx
                  max r6.xyz, r5.xyzx, r6.xyzx  // r6.x <- n.x; r6.y <- n.y; r6.z <- n.z
                
                #line 121
                  dp3 r1.w, r4.xyzx, r6.xyzx  // r1.w <- r
                
                #line 124
                  mov r3.w, l(1.000000)
                  dp4 r2.w, r3.xyzw, r5.xyzw  // r2.w <- s
                
                #line 129
                  add r1.w, r1.w, r2.w
                  lt r1.w, r1.w, l(0.000000)  // r1.w <- <AabbBehindPlaneTest return value>
                
                #line 139
                  if_nz r1.w
                    mov r1.y, l(-1)
                    mov r1.z, l(-1)
                    break 
                  endif 
                
                #line 135
                  iadd r1.x, r1.x, l(1)
                
                #line 143
                  mov r1.z, r1.w
                endloop 
                if_z r1.z
                  mov r1.y, l(0)
                endif 
                
                #line 173
                if_nz r1.y
                  mov r0.x, l(0)  // r0.x <- pt.EdgeTess[0]
                  mov r0.y, l(0)  // r0.y <- pt.EdgeTess[1]
                  mov r1.x, l(0)  // r1.x <- pt.EdgeTess[2]
                  mov r1.y, l(0)  // r1.y <- pt.EdgeTess[3]
                  mov r1.z, l(0)  // r1.z <- pt.InsideTess[0]
                  mov r1.w, l(0)  // r1.w <- pt.InsideTess[1]
                  mov r1.x, r1.x  // r1.x <- <ConstantHS return value>.EdgeTess[2]
                  mov r1.y, r1.y  // r1.y <- <ConstantHS return value>.EdgeTess[3]
                  mov r1.z, r1.z  // r1.z <- <ConstantHS return value>.InsideTess[0]
                  mov r1.w, r1.w  // r1.w <- <ConstantHS return value>.InsideTess[1]
                  mov r0.x, r0.x  // r0.x <- <ConstantHS return value>.EdgeTess[0]
                  mov r0.y, r0.y  // r0.y <- <ConstantHS return value>.EdgeTess[1]
                  min o0.x, r0.x, l(64.000000)
                  min o1.x, r0.y, l(64.000000)
                  min r0.xyzw, r1.xyzw, l(64.000000, 64.000000, 64.000000, 64.000000)  // r0.x <- <ConstantHS return value>.EdgeTess[2]; r0.y <- <ConstantHS return value>.EdgeTess[3]; r0.z <- <ConstantHS return value>.InsideTess[0]; r0.w <- <ConstantHS return value>.InsideTess[1]
                  mov o2.x, r0.x
                  mov o3.x, r0.y
                  mov o4.x, r0.z
                  mov o5.x, r0.w
                  ret 
                
                #line 184
                else   // Prior locations: r0.x <- boxExtents.x; r0.y <- boxExtents.y; r0.z <- boxExtents.z
                
                #line 195
                  add r0.xyz, vicp[2][0].xyzx, vicp[0][0].xyzx
                  mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r0.x <- e0.x; r0.y <- e0.y; r0.z <- e0.z
                  add r1.xyz, vicp[1][0].xyzx, vicp[0][0].xyzx
                  mul r1.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r1.x <- e1.x; r1.y <- e1.y; r1.z <- e1.z
                  add r2.xyz, vicp[3][0].xyzx, vicp[1][0].xyzx
                  mul r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r2.x <- e2.x; r2.y <- e2.y; r2.z <- e2.z
                  add r3.xyz, vicp[3][0].xyzx, vicp[2][0].xyzx
                  mul r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r3.x <- e3.x; r3.y <- e3.y; r3.z <- e3.z
                  add r4.xyz, vicp[1][0].xyzx, vicp[0][0].xyzx
                  add r4.xyz, r4.xyzx, vicp[2][0].xyzx
                  add r4.xyz, r4.xyzx, vicp[3][0].xyzx
                  mul r4.xyz, r4.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)  // r4.x <- c.x; r4.y <- c.y; r4.z <- c.z
                  nop 
                  mov r0.xyz, r0.xyzx
                
                #line 105
                  mov r5.xyz, -cb0[12].xyzx
                  add r0.xyz, r0.xyzx, r5.xyzx
                  dp3 r0.x, r0.xyzx, r0.xyzx
                  sqrt r0.x, r0.x  // r0.x <- d
                
                #line 110
                  mov r0.y, -cb0[15].x
                  add r0.x, r0.y, r0.x
                  mov r0.y, -cb0[15].x
                  add r0.y, r0.y, cb0[15].y
                  div r0.x, r0.x, r0.y
                  max r0.x, r0.x, l(0.000000)
                  min r0.x, r0.x, l(1.000000)  // r0.x <- s
                  itof r0.y, l(2)
                  mov r0.z, -cb0[15].w
                  add r0.z, r0.z, cb0[15].z
                  mul r0.x, r0.z, r0.x
                  add r0.x, r0.x, cb0[15].w
                  log r0.y, r0.y
                  mul r0.x, r0.y, r0.x
                  exp r0.x, r0.x  // r0.x <- <CalcTessFactor return value>
                
                #line 201
                  mov r0.x, r0.x  // r0.x <- pt.EdgeTess[0]
                  nop 
                  mov r1.xyz, r1.xyzx
                
                #line 105
                  mov r0.yzw, -cb0[12].xxyz
                  add r0.yzw, r0.yyzw, r1.xxyz
                  dp3 r0.y, r0.yzwy, r0.yzwy
                  sqrt r0.y, r0.y  // r0.y <- d
                
                #line 110
                  mov r0.z, -cb0[15].x
                  add r0.y, r0.z, r0.y
                  mov r0.z, -cb0[15].x
                  add r0.z, r0.z, cb0[15].y
                  div r0.y, r0.y, r0.z
                  max r0.y, r0.y, l(0.000000)
                  min r0.y, r0.y, l(1.000000)  // r0.y <- s
                  itof r0.z, l(2)
                  mov r0.w, -cb0[15].w
                  add r0.w, r0.w, cb0[15].z
                  mul r0.y, r0.w, r0.y
                  add r0.y, r0.y, cb0[15].w
                  log r0.z, r0.z
                  mul r0.y, r0.z, r0.y
                  exp r0.y, r0.y  // r0.y <- <CalcTessFactor return value>
                
                #line 202
                  mov r0.y, r0.y  // r0.y <- pt.EdgeTess[1]
                  nop 
                  mov r2.xyz, r2.xyzx
                
                #line 105
                  mov r1.xyz, -cb0[12].xyzx
                  add r1.xyz, r1.xyzx, r2.xyzx
                  dp3 r0.z, r1.xyzx, r1.xyzx
                  sqrt r0.z, r0.z  // r0.z <- d
                
                #line 110
                  mov r0.w, -cb0[15].x
                  add r0.z, r0.w, r0.z
                  mov r0.w, -cb0[15].x
                  add r0.w, r0.w, cb0[15].y
                  div r0.z, r0.z, r0.w
                  max r0.z, r0.z, l(0.000000)
                  min r0.z, r0.z, l(1.000000)  // r0.z <- s
                  itof r0.w, l(2)
                  mov r1.x, -cb0[15].w
                  add r1.x, r1.x, cb0[15].z
                  mul r0.z, r0.z, r1.x
                  add r0.z, r0.z, cb0[15].w
                  log r0.w, r0.w
                  mul r0.z, r0.w, r0.z
                  exp r1.x, r0.z  // r1.x <- <CalcTessFactor return value>
                
                #line 203
                  mov r1.x, r1.x  // r1.x <- pt.EdgeTess[2]
                  nop 
                  mov r3.xyz, r3.xyzx
                
                #line 105
                  mov r2.xyz, -cb0[12].xyzx
                  add r2.xyz, r2.xyzx, r3.xyzx
                  dp3 r0.z, r2.xyzx, r2.xyzx
                  sqrt r0.z, r0.z  // r0.z <- d
                
                #line 110
                  mov r0.w, -cb0[15].x
                  add r0.z, r0.w, r0.z
                  mov r0.w, -cb0[15].x
                  add r0.w, r0.w, cb0[15].y
                  div r0.z, r0.z, r0.w
                  max r0.z, r0.z, l(0.000000)
                  min r0.z, r0.z, l(1.000000)  // r0.z <- s
                  itof r0.w, l(2)
                  mov r2.x, -cb0[15].w
                  add r2.x, r2.x, cb0[15].z
                  mul r0.z, r0.z, r2.x
                  add r0.z, r0.z, cb0[15].w
                  log r0.w, r0.w
                  mul r0.z, r0.w, r0.z
                  exp r1.y, r0.z  // r1.y <- <CalcTessFactor return value>
                
                #line 204
                  mov r1.y, r1.y  // r1.y <- pt.EdgeTess[3]
                  nop 
                  mov r4.xyz, r4.xyzx
                
                #line 105
                  mov r2.xyz, -cb0[12].xyzx
                  add r2.xyz, r2.xyzx, r4.xyzx
                  dp3 r0.z, r2.xyzx, r2.xyzx
                  sqrt r0.z, r0.z  // r0.z <- d
                
                #line 110
                  mov r0.w, -cb0[15].x
                  add r0.z, r0.w, r0.z
                  mov r0.w, -cb0[15].x
                  add r0.w, r0.w, cb0[15].y
                  div r0.z, r0.z, r0.w
                  max r0.z, r0.z, l(0.000000)
                  min r0.z, r0.z, l(1.000000)  // r0.z <- s
                  itof r0.w, l(2)
                  mov r2.x, -cb0[15].w
                  add r2.x, r2.x, cb0[15].z
                  mul r0.z, r0.z, r2.x
                  add r0.z, r0.z, cb0[15].w
                  log r0.w, r0.w
                  mul r0.z, r0.w, r0.z
                  exp r1.w, r0.z  // r1.w <- <CalcTessFactor return value>
                  mov r1.z, r1.w  // r1.z <- <CalcTessFactor return value>
                
                #line 206
                  mov r1.z, r1.z  // r1.z <- pt.InsideTess[0]
                  mov r1.w, r1.w  // r1.w <- pt.InsideTess[1]
                  mov r1.x, r1.x  // r1.x <- <ConstantHS return value>.EdgeTess[2]
                  mov r1.y, r1.y  // r1.y <- <ConstantHS return value>.EdgeTess[3]
                  mov r1.z, r1.z  // r1.z <- <ConstantHS return value>.InsideTess[0]
                  mov r1.w, r1.w  // r1.w <- <ConstantHS return value>.InsideTess[1]
                  mov r0.x, r0.x  // r0.x <- <ConstantHS return value>.EdgeTess[0]
                  mov r0.y, r0.y  // r0.y <- <ConstantHS return value>.EdgeTess[1]
                  min o0.x, r0.x, l(64.000000)  // o0.x <- <ConstantHS return value>.EdgeTess[0]
                  min o1.x, r0.y, l(64.000000)  // o1.x <- <ConstantHS return value>.EdgeTess[1]
                  min r0.xyzw, r1.xyzw, l(64.000000, 64.000000, 64.000000, 64.000000)  // r0.x <- <ConstantHS return value>.EdgeTess[2]; r0.y <- <ConstantHS return value>.EdgeTess[3]; r0.z <- <ConstantHS return value>.InsideTess[0]; r0.w <- <ConstantHS return value>.InsideTess[1]
                  mov o2.x, r0.x  // o2.x <- <ConstantHS return value>.EdgeTess[2]
                  mov o3.x, r0.y  // o3.x <- <ConstantHS return value>.EdgeTess[3]
                  mov o4.x, r0.z  // o4.x <- <ConstantHS return value>.InsideTess[0]
                  mov o5.x, r0.w  // o5.x <- <ConstantHS return value>.InsideTess[1]
                  ret 
                endif 
                ret 
                // Approximately 218 instruction slots used
                            
            };
            DomainShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   float3 gEyePosW;                   // Offset:  192 Size:    12 [unused]
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //   float gMinDist;                    // Offset:  240 Size:     4 [unused]
                //   float gMaxDist;                    // Offset:  244 Size:     4 [unused]
                //   float gMinTess;                    // Offset:  248 Size:     4 [unused]
                //   float gMaxTess;                    // Offset:  252 Size:     4 [unused]
                //   float gTexelCellSpaceU;            // Offset:  256 Size:     4 [unused]
                //   float gTexelCellSpaceV;            // Offset:  260 Size:     4 [unused]
                //   float gWorldCellSpace;             // Offset:  264 Size:     4 [unused]
                //   float2 gTexScale;                  // Offset:  272 Size:     8
                //      = 0x42480000 0x42480000 
                //   float4x4 gViewProj;                // Offset:  288 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  352 Size:    64
                //   float4 gWorldFrustumPlanes[6];     // Offset:  416 Size:    96 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  512
                //       float4 Diffuse;                // Offset:  528
                //       float4 Specular;               // Offset:  544
                //       float4 Reflect;                // Offset:  560
                //
                //   } gMaterial;                       // Offset:  512 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samHeightmap                      sampler      NA          NA    0        1
                // gHeightMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Patch Constant signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_TessFactor            0   x           0 QUADEDGE   float       
                // SV_TessFactor            1   x           1 QUADEDGE   float       
                // SV_TessFactor            2   x           2 QUADEDGE   float       
                // SV_TessFactor            3   x           3 QUADEDGE   float       
                // SV_InsideTessFactor      0   x           4  QUADINT   float       
                // SV_InsideTessFactor      1   x           5  QUADINT   float       
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   x z 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                // TEXCOORD                 1     zw        2     NONE   float     zw
                // TEXCOORD                 2   xyzw        3     NONE   float   xyzw
                //
                // Tessellation Domain   # of control points
                // -------------------- --------------------
                // Quadrilateral                           4
                //
                ds_5_0
                dcl_input_control_point_count 4
                dcl_tessellator_domain domain_quad
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[26], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input vDomain.xy
                dcl_input vicp[4][0].xz
                dcl_input vicp[4][1].xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o2.zw
                dcl_output o3.xyzw
                dcl_temps 4
                //
                // Initial variable locations:
                //   vpc0.x <- patchTess.EdgeTess[0]; 
                //   vpc1.x <- patchTess.EdgeTess[1]; 
                //   vpc2.x <- patchTess.EdgeTess[2]; 
                //   vpc3.x <- patchTess.EdgeTess[3]; 
                //   vpc4.x <- patchTess.InsideTess[0]; 
                //   vpc5.x <- patchTess.InsideTess[1]; 
                //   vDomain.x <- uv.x; vDomain.y <- uv.y; 
                //   o3.x <- <DS return value>.ShadowPosH.x; o3.y <- <DS return value>.ShadowPosH.y; o3.z <- <DS return value>.ShadowPosH.z; o3.w <- <DS return value>.ShadowPosH.w; 
                //   o2.x <- <DS return value>.Tex.x; o2.y <- <DS return value>.Tex.y; o2.z <- <DS return value>.TiledTex.x; o2.w <- <DS return value>.TiledTex.y; 
                //   o1.x <- <DS return value>.PosW.x; o1.y <- <DS return value>.PosW.y; o1.z <- <DS return value>.PosW.z; 
                //   o0.x <- <DS return value>.PosH.x; o0.y <- <DS return value>.PosH.y; o0.z <- <DS return value>.PosH.z; o0.w <- <DS return value>.PosH.w; 
                //   vicp[0][0].x <- quad[0].PosW.x; vicp[0][0].y <- quad[0].PosW.y; vicp[0][0].z <- quad[0].PosW.z; 
                //   vicp[0][1].x <- quad[0].Tex.x; vicp[0][1].y <- quad[0].Tex.y; 
                //   vicp[1][0].x <- quad[1].PosW.x; vicp[1][0].y <- quad[1].PosW.y; vicp[1][0].z <- quad[1].PosW.z; 
                //   vicp[1][1].x <- quad[1].Tex.x; vicp[1][1].y <- quad[1].Tex.y; 
                //   vicp[2][0].x <- quad[2].PosW.x; vicp[2][0].y <- quad[2].PosW.y; vicp[2][0].z <- quad[2].PosW.z; 
                //   vicp[2][1].x <- quad[2].Tex.x; vicp[2][1].y <- quad[2].Tex.y; 
                //   vicp[3][0].x <- quad[3].PosW.x; vicp[3][0].y <- quad[3].PosW.y; vicp[3][0].z <- quad[3].PosW.z; 
                //   vicp[3][1].x <- quad[3].Tex.x; vicp[3][1].y <- quad[3].Tex.y
                //
                #line 257 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r0.xy, -vicp[0][0].xzxx
                add r0.xy, r0.xyxx, vicp[1][0].xzxx
                mul r0.xy, r0.xyxx, vDomain.xxxx
                add r0.xy, r0.xyxx, vicp[0][0].xzxx
                mov r0.zw, -vicp[2][0].xxxz
                add r0.zw, r0.zzzw, vicp[3][0].xxxz
                mul r0.zw, r0.zzzw, vDomain.xxxx
                add r0.zw, r0.zzzw, vicp[2][0].xxxz
                mov r1.xy, -r0.xyxx
                add r0.zw, r0.zzzw, r1.xxxy
                mul r0.zw, r0.zzzw, vDomain.yyyy
                add r0.xz, r0.zzwz, r0.xxyx  // r0.x <- dout.PosW.x; r0.z <- dout.PosW.z
                
                #line 262
                mov r1.xy, -vicp[0][1].xyxx
                add r1.xy, r1.xyxx, vicp[1][1].xyxx
                mul r1.xy, r1.xyxx, vDomain.xxxx
                add r1.xy, r1.xyxx, vicp[0][1].xyxx
                mov r1.zw, -vicp[2][1].xxxy
                add r1.zw, r1.zzzw, vicp[3][1].xxxy
                mul r1.zw, r1.zzzw, vDomain.xxxx
                add r1.zw, r1.zzzw, vicp[2][1].xxxy
                mov r2.xy, -r1.xyxx
                add r1.zw, r1.zzzw, r2.xxxy
                mul r1.zw, r1.zzzw, vDomain.yyyy
                add r1.xy, r1.zwzz, r1.xyxx  // r1.x <- dout.Tex.x; r1.y <- dout.Tex.y
                
                #line 268
                mul r1.zw, r1.xxxy, cb0[17].xxxy  // r1.z <- dout.TiledTex.x; r1.w <- dout.TiledTex.y
                
                #line 271
                itof r2.x, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r0.y, r1.xyxx, t0.yxzw, s0, r2.x
                mov r0.y, r0.y  // r0.y <- dout.PosW.y
                
                #line 279
                mov r0.w, l(1.000000)
                dp4 r2.x, r0.xyzw, cb0[18].xyzw  // r2.x <- dout.PosH.x
                dp4 r2.y, r0.xyzw, cb0[19].xyzw  // r2.y <- dout.PosH.y
                dp4 r2.z, r0.xyzw, cb0[20].xyzw  // r2.z <- dout.PosH.z
                dp4 r2.w, r0.xyzw, cb0[21].xyzw  // r2.w <- dout.PosH.w
                
                #line 282
                dp4 r3.x, r0.xyzw, cb0[22].xyzw  // r3.x <- dout.ShadowPosH.x
                dp4 r3.y, r0.xyzw, cb0[23].xyzw  // r3.y <- dout.ShadowPosH.y
                dp4 r3.z, r0.xyzw, cb0[24].xyzw  // r3.z <- dout.ShadowPosH.z
                dp4 r3.w, r0.xyzw, cb0[25].xyzw  // r3.w <- dout.ShadowPosH.w
                mov o0.xyzw, r2.xyzw
                mov o2.xy, r1.xyxx
                mov o2.zw, r1.zzzw
                mov o3.xyzw, r3.xyzw
                mov o1.xyz, r0.xyzx
                ret 
                // Approximately 43 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //   float gMinDist;                    // Offset:  240 Size:     4 [unused]
                //   float gMaxDist;                    // Offset:  244 Size:     4 [unused]
                //   float gMinTess;                    // Offset:  248 Size:     4 [unused]
                //   float gMaxTess;                    // Offset:  252 Size:     4 [unused]
                //   float gTexelCellSpaceU;            // Offset:  256 Size:     4
                //   float gTexelCellSpaceV;            // Offset:  260 Size:     4
                //   float gWorldCellSpace;             // Offset:  264 Size:     4
                //   float2 gTexScale;                  // Offset:  272 Size:     8 [unused]
                //      = 0x42480000 0x42480000 
                //   float4x4 gViewProj;                // Offset:  288 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  352 Size:    64 [unused]
                //   float4 gWorldFrustumPlanes[6];     // Offset:  416 Size:    96 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  512
                //       float4 Diffuse;                // Offset:  528
                //       float4 Specular;               // Offset:  544
                //       float4 Reflect;                // Offset:  560
                //
                //   } gMaterial;                       // Offset:  512 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samHeightmap                      sampler      NA          NA    1        1
                // samShadow                       sampler_c      NA          NA    2        1
                // gLayerMapArray                    texture  float4     2darray    0        1
                // gBlendMap                         texture  float4          2d    1        1
                // gHeightMap                        texture  float4          2d    2        1
                // gShadowMap                        texture  float4          2d    3        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                // TEXCOORD                 1     zw        2     NONE   float     zw
                // TEXCOORD                 2   xyzw        3     NONE   float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[35], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_default
                dcl_sampler s2, mode_comparison
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_resource_texture2d (float,float,float,float) t3
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xy
                dcl_input_ps linear v2.zw
                dcl_input_ps linear v3.xyzw
                dcl_output o0.xyzw
                dcl_temps 15
                dcl_indexableTemp x0[9], 4
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
                //   v2.x <- pin.Tex.x; v2.y <- pin.Tex.y; v2.z <- pin.TiledTex.x; v2.w <- pin.TiledTex.y; 
                //   v3.x <- pin.ShadowPosH.x; v3.y <- pin.ShadowPosH.y; v3.z <- pin.ShadowPosH.z; v3.w <- pin.ShadowPosH.w; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 226 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\LightHelper.fx"
                mov r0.x, l(0.000488)  // r0.x <- SMAP_DX
                
                #line 294 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r1.x, -cb0[16].x
                mov r1.y, l(0)
                add r1.xy, r1.xyxx, v2.xyxx  // r1.x <- leftTex.x; r1.y <- leftTex.y
                mov r2.x, cb0[16].x
                mov r2.y, l(0)
                add r1.zw, r2.xxxy, v2.xxxy  // r1.z <- rightTex.x; r1.w <- rightTex.y
                mov r2.x, l(0)
                mov r2.y, cb0[16].y
                add r2.xy, r2.xyxx, v2.xyxx  // r2.x <- bottomTex.x; r2.y <- bottomTex.y
                mov r3.y, -cb0[16].y
                mov r3.x, l(0)
                add r2.zw, r3.xxxy, v2.xxxy  // r2.z <- topTex.x; r2.w <- topTex.y
                itof r3.x, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t2.xyzw, s1, r3.x
                mov r1.x, r1.x  // r1.x <- leftY
                itof r1.y, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r1.y, r1.zwzz, t2.yxzw, s1, r1.y
                mov r1.y, r1.y  // r1.y <- rightY
                itof r1.z, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r1.z, r2.xyxx, t2.yzxw, s1, r1.z
                mov r1.z, r1.z  // r1.z <- bottomY
                itof r1.w, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r1.w, r2.zwzz, t2.yzwx, s1, r1.w
                mov r1.w, r1.w  // r1.w <- topY
                mul r2.y, cb0[16].z, l(2.000000)
                mov r1.x, -r1.x
                add r2.z, r1.x, r1.y
                mov r2.x, l(0)
                dp3 r1.x, r2.xyzx, r2.xyzx
                rsq r1.x, r1.x
                mul r2.xyz, r1.xxxx, r2.xyzx  // r2.x <- tangent.z; r2.y <- tangent.x; r2.z <- tangent.y
                
                #line 305
                mov r1.x, -r1.w
                add r1.x, r1.x, r1.z
                mul r1.y, cb0[16].z, l(-2.000000)
                mov r1.z, l(0)
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r1.w, r1.w
                mul r1.xyz, r1.wwww, r1.xyzx  // r1.x <- bitan.y; r1.y <- bitan.z; r1.z <- bitan.x
                mul r3.xyz, r1.yzxy, r2.zxyz
                mul r1.xyz, r1.xyzx, r2.xyzx
                mov r1.xyz, -r1.xyzx
                add r1.xyz, r1.xyzx, r3.xyzx  // r1.x <- normalW.x; r1.y <- normalW.y; r1.z <- normalW.z
                
                #line 310
                mov r2.xyz, -v1.xyzx
                add r2.xyz, r2.xyzx, cb0[12].xyzx  // r2.x <- toEye.x; r2.y <- toEye.y; r2.z <- toEye.z
                
                #line 313
                dp3 r1.w, r2.xyzx, r2.xyzx
                sqrt r1.w, r1.w  // r1.w <- distToEye
                
                #line 316
                div r2.xyz, r2.xyzx, r1.wwww
                
                #line 323
                mov r3.xy, v2.zwzz
                mov r3.z, l(0)
                sample_indexable(texture2darray)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0  // r3.x <- c0.x; r3.y <- c0.y; r3.z <- c0.z; r3.w <- c0.w
                mov r4.xy, v2.zwzz
                mov r4.z, l(1.000000)
                sample_indexable(texture2darray)(float,float,float,float) r4.xyzw, r4.xyzx, t0.xyzw, s0  // r4.x <- c1.x; r4.y <- c1.y; r4.z <- c1.z; r4.w <- c1.w
                mov r5.xy, v2.zwzz
                mov r5.z, l(2.000000)
                sample_indexable(texture2darray)(float,float,float,float) r5.xyzw, r5.xyzx, t0.xyzw, s0  // r5.x <- c2.x; r5.y <- c2.y; r5.z <- c2.z; r5.w <- c2.w
                mov r6.xy, v2.zwzz
                mov r6.z, l(3.000000)
                sample_indexable(texture2darray)(float,float,float,float) r6.xyzw, r6.xyzx, t0.xyzw, s0  // r6.x <- c3.x; r6.y <- c3.y; r6.z <- c3.z; r6.w <- c3.w
                mov r7.xy, v2.zwzz
                mov r7.z, l(4.000000)
                sample_indexable(texture2darray)(float,float,float,float) r7.xyzw, r7.xyzx, t0.xyzw, s0  // r7.x <- c4.x; r7.y <- c4.y; r7.z <- c4.z; r7.w <- c4.w
                
                #line 330
                sample_indexable(texture2d)(float,float,float,float) r8.xyzw, v2.xyxx, t1.xyzw, s0  // r8.x <- t.x; r8.y <- t.y; r8.z <- t.z; r8.w <- t.w
                
                #line 333
                mov r3.xyzw, r3.xyzw  // r3.x <- texColor.x; r3.y <- texColor.y; r3.z <- texColor.z; r3.w <- texColor.w
                mov r9.xyzw, -r3.xyzw
                add r4.xyzw, r4.xyzw, r9.xyzw
                mul r4.xyzw, r4.xyzw, r8.xxxx
                add r3.xyzw, r3.xyzw, r4.xyzw
                mov r4.xyzw, -r3.xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r4.xyzw, r4.xyzw, r8.yyyy
                add r3.xyzw, r3.xyzw, r4.xyzw
                mov r4.xyzw, -r3.xyzw
                add r4.xyzw, r4.xyzw, r6.xyzw
                mul r4.xyzw, r4.xyzw, r8.zzzz
                add r3.xyzw, r3.xyzw, r4.xyzw
                mov r4.xyzw, -r3.xyzw
                add r4.xyzw, r4.xyzw, r7.xyzw
                mul r4.xyzw, r4.xyzw, r8.wwww
                add r3.xyzw, r3.xyzw, r4.xyzw
                
                #line 347
                mov r4.xyzw, l(0,0,0,0)  // r4.x <- ambient.x; r4.y <- ambient.y; r4.z <- ambient.z; r4.w <- ambient.w
                mov r5.xyzw, l(0,0,0,0)  // r5.x <- diffuse.x; r5.y <- diffuse.y; r5.z <- diffuse.z; r5.w <- diffuse.w
                mov r6.xyzw, l(0,0,0,0)  // r6.x <- spec.x; r6.y <- spec.y; r6.z <- spec.z; r6.w <- spec.w
                
                #line 353
                nop 
                nop 
                nop 
                mov r7.xyzw, v3.xyzw
                
                #line 233 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\LightHelper.fx"
                div r7.xyz, r7.zxyz, r7.wwww  // r7.x <- shadowPosH.z; r7.y <- shadowPosH.x; r7.z <- shadowPosH.y
                
                #line 236
                mov r7.x, r7.x  // r7.x <- depth
                
                #line 239
                mov r0.x, r0.x  // r0.x <- dx
                mov r1.w, l(0)  // r1.w <- percentLit
                mov x0[0].xy, l(-0.000488,-0.000488,0,0)
                mov x0[1].xy, l(0,-0.000488,0,0)
                mov r0.y, l(-0.000488)
                mov x0[2].xy, r0.xyxx
                mov x0[3].xy, l(-0.000488,0,0,0)
                mov x0[4].xy, l(0,0,0,0)
                mov r0.z, l(0)
                mov x0[5].xy, r0.xzxx
                mov x0[6].xy, l(-0.000488,0.000488,0,0)
                mov x0[7].xy, l(0,0.000488,0,0)
                mov r0.w, l(0.000488)
                mov x0[8].xy, r0.xwxx
                
                #line 252
                mov r0.xy, x0[0].xyxx
                add r0.xy, r0.xyxx, r7.yzyy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t3.xxxx, s2, r7.x
                add r0.x, r0.x, r1.w  // r0.x <- percentLit
                mov r0.yz, x0[1].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[2].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[3].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[4].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[5].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[6].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[7].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[8].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                
                #line 256
                div r0.x, r0.x, l(9.000000)
                
                #line 360 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                nop 
                mov r7.xyzw, cb0[32].xyzw
                mov r8.xyzw, cb0[33].xyzw
                mov r9.xyzw, cb0[34].xyzw
                mov r10.xyzw, cb0[0].xyzw
                mov r11.xyzw, cb0[1].xyzw
                mov r12.xyzw, cb0[2].xyzw
                mov r0.yzw, cb0[3].xxyz
                mov r1.xyz, r1.xyzx
                mov r2.xyz, r2.xyzx
                
                #line 66 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\LightHelper.fx"
                mov r13.xyzw, l(0,0,0,0)  // r13.x <- diffuse.x; r13.y <- diffuse.y; r13.z <- diffuse.z; r13.w <- diffuse.w
                mov r14.xyzw, l(0,0,0,0)  // r14.x <- spec.x; r14.y <- spec.y; r14.z <- spec.z; r14.w <- spec.w
                
                #line 70
                mov r0.yzw, -r0.yyzw  // r0.y <- lightVec.x; r0.z <- lightVec.y; r0.w <- lightVec.z
                
                #line 73
                mul r7.xyzw, r7.xyzw, r10.xyzw  // r7.x <- ambient.x; r7.y <- ambient.y; r7.z <- ambient.z; r7.w <- ambient.w
                
                #line 78
                dp3 r1.w, r0.yzwy, r1.xyzx  // r1.w <- diffuseFactor
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r0.yzw, -r0.yyzw
                dp3 r10.x, r0.yzwy, r1.xyzx
                add r10.x, r10.x, r10.x
                mov r10.x, -r10.x
                mul r1.xyz, r1.xyzx, r10.xxxx
                add r0.yzw, r0.yyzw, r1.xxyz  // r0.y <- v.x; r0.z <- v.y; r0.w <- v.z
                dp3 r0.y, r0.yzwy, r2.xyzx
                max r0.y, r0.y, l(0.000000)
                log r0.y, r0.y
                mul r0.y, r0.y, r9.w
                exp r0.y, r0.y  // r0.y <- specFactor
                mul r1.xyzw, r8.xyzw, r1.wwww
                mul r1.xyzw, r11.xyzw, r1.xyzw  // r1.x <- diffuse.x; r1.y <- diffuse.y; r1.z <- diffuse.z; r1.w <- diffuse.w
                mul r8.xyzw, r9.xyzw, r0.yyyy
                mul r8.xyzw, r12.xyzw, r8.xyzw  // r8.x <- spec.x; r8.y <- spec.y; r8.z <- spec.z; r8.w <- spec.w
                movc r1.xyzw, r2.wwww, r1.xyzw, r13.xyzw
                movc r2.xyzw, r2.wwww, r8.xyzw, r14.xyzw  // r2.x <- spec.x; r2.y <- spec.y; r2.z <- spec.z; r2.w <- spec.w
                
                #line 360 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r7.xyzw, r7.xyzw  // r7.x <- A.x; r7.y <- A.y; r7.z <- A.z; r7.w <- A.w
                mov r1.xyzw, r1.xyzw  // r1.x <- D.x; r1.y <- D.y; r1.z <- D.z; r1.w <- D.w
                mov r2.xyzw, r2.xyzw  // r2.x <- S.x; r2.y <- S.y; r2.z <- S.z; r2.w <- S.w
                
                #line 363
                add r4.xyzw, r4.xyzw, r7.xyzw
                mul r1.xyzw, r0.xxxx, r1.xyzw
                add r1.xyzw, r1.xyzw, r5.xyzw  // r1.x <- diffuse.x; r1.y <- diffuse.y; r1.z <- diffuse.z; r1.w <- diffuse.w
                mul r0.xyzw, r0.xxxx, r2.xyzw
                add r0.xyzw, r0.xyzw, r6.xyzw  // r0.x <- spec.x; r0.y <- spec.y; r0.z <- spec.z; r0.w <- spec.w
                
                #line 368
                add r1.xyzw, r1.xyzw, r4.xyzw
                mul r1.xyzw, r1.xyzw, r3.xyzw
                add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- litColor.x; r0.y <- litColor.y; r0.z <- litColor.z; r0.w <- litColor.w
                
                #line 383
                mov o0.xyzw, r0.xyzw
                ret 
                // Approximately 187 instruction slots used
                            
            };
        }

    }

    technique11 Light2
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samHeightmap                      sampler      NA          NA    0        1
                // gHeightMap                        texture  float4          2d    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   x z 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                // TEXCOORD                 1   xy          2     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                // TEXCOORD                 1     zw        1     NONE   float     zw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input v0.xz
                dcl_input v1.xy
                dcl_input v2.xy
                dcl_output o0.xyz
                dcl_output o1.xy
                dcl_output o1.zw
                dcl_temps 2
                //
                // Initial variable locations:
                //   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
                //   v1.x <- vin.Tex.x; v1.y <- vin.Tex.y; 
                //   v2.x <- vin.BoundsY.x; v2.y <- vin.BoundsY.y; 
                //   o1.x <- <VS return value>.Tex.x; o1.y <- <VS return value>.Tex.y; o1.z <- <VS return value>.BoundsY.x; o1.w <- <VS return value>.BoundsY.y; 
                //   o0.x <- <VS return value>.PosW.x; o0.y <- <VS return value>.PosW.y; o0.z <- <VS return value>.PosW.z
                //
                #line 90 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r0.xy, v0.xzxx  // r0.x <- vout.PosW.x; r0.y <- vout.PosW.z
                
                #line 94
                itof r0.z, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r0.z, v1.xyxx, t0.yzxw, s0, r0.z
                mov r0.z, r0.z  // r0.z <- vout.PosW.y
                
                #line 97
                mov r1.xy, v1.xyxx  // r1.x <- vout.Tex.x; r1.y <- vout.Tex.y
                mov r1.zw, v2.xxxy  // r1.z <- vout.BoundsY.x; r1.w <- vout.BoundsY.y
                mov o1.xy, r1.xyxx
                mov o1.zw, r1.zzzw
                mov o0.xz, r0.xxyx
                mov o0.y, r0.z
                ret 
                // Approximately 11 instruction slots used
                            
            };
            HullShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //   float gMinDist;                    // Offset:  240 Size:     4
                //   float gMaxDist;                    // Offset:  244 Size:     4
                //   float gMinTess;                    // Offset:  248 Size:     4
                //   float gMaxTess;                    // Offset:  252 Size:     4
                //   float gTexelCellSpaceU;            // Offset:  256 Size:     4 [unused]
                //   float gTexelCellSpaceV;            // Offset:  260 Size:     4 [unused]
                //   float gWorldCellSpace;             // Offset:  264 Size:     4 [unused]
                //   float2 gTexScale;                  // Offset:  272 Size:     8 [unused]
                //      = 0x42480000 0x42480000 
                //   float4x4 gViewProj;                // Offset:  288 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  352 Size:    64 [unused]
                //   float4 gWorldFrustumPlanes[6];     // Offset:  416 Size:    96
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  512
                //       float4 Diffuse;                // Offset:  528
                //       float4 Specular;               // Offset:  544
                //       float4 Reflect;                // Offset:  560
                //
                //   } gMaterial;                       // Offset:  512 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Patch Constant signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_TessFactor            0   x           0 QUADEDGE   float   x   
                // SV_TessFactor            1   x           1 QUADEDGE   float   x   
                // SV_TessFactor            2   x           2 QUADEDGE   float   x   
                // SV_TessFactor            3   x           3 QUADEDGE   float   x   
                // SV_InsideTessFactor      0   x           4  QUADINT   float   x   
                // SV_InsideTessFactor      1   x           5  QUADINT   float   x   
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                // TEXCOORD                 1     zw        1     NONE   float     zw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                // Tessellation Domain   # of control points
                // -------------------- --------------------
                // Quadrilateral                           4
                //
                // Tessellation Output Primitive  Partitioning Type 
                // ------------------------------ ------------------
                // Clockwise Triangles            Even Fractional   
                //
                hs_5_0
                hs_decls 
                dcl_input_control_point_count 4
                dcl_output_control_point_count 4
                dcl_tessellator_domain domain_quad
                dcl_tessellator_partitioning partitioning_fractional_even
                dcl_tessellator_output_primitive output_triangle_cw
                dcl_hs_max_tessfactor l(64.000000)
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[32], immediateIndexed
                hs_control_point_phase 
                dcl_input vOutputControlPointID
                dcl_input v[4][0].xyz
                dcl_input v[4][1].xy
                dcl_output o0.xyz
                dcl_output o1.xy
                dcl_temps 2
                //
                // Initial variable locations:
                //   vOutputControlPointID.x <- i; 
                //   vPrim.x <- patchId; 
                //   o1.x <- <HS return value>.Tex.x; o1.y <- <HS return value>.Tex.y; 
                //   o0.x <- <HS return value>.PosW.x; o0.y <- <HS return value>.PosW.y; o0.z <- <HS return value>.PosW.z; 
                //   v[0][0].x <- p[0].PosW.x; v[0][0].y <- p[0].PosW.y; v[0][0].z <- p[0].PosW.z; 
                //   v[0][1].x <- p[0].Tex.x; v[0][1].y <- p[0].Tex.y; v[0][1].z <- p[0].BoundsY.x; v[0][1].w <- p[0].BoundsY.y; 
                //   v[1][0].x <- p[1].PosW.x; v[1][0].y <- p[1].PosW.y; v[1][0].z <- p[1].PosW.z; 
                //   v[1][1].x <- p[1].Tex.x; v[1][1].y <- p[1].Tex.y; v[1][1].z <- p[1].BoundsY.x; v[1][1].w <- p[1].BoundsY.y; 
                //   v[2][0].x <- p[2].PosW.x; v[2][0].y <- p[2].PosW.y; v[2][0].z <- p[2].PosW.z; 
                //   v[2][1].x <- p[2].Tex.x; v[2][1].y <- p[2].Tex.y; v[2][1].z <- p[2].BoundsY.x; v[2][1].w <- p[2].BoundsY.y; 
                //   v[3][0].x <- p[3].PosW.x; v[3][0].y <- p[3].PosW.y; v[3][0].z <- p[3].PosW.z; 
                //   v[3][1].x <- p[3].Tex.x; v[3][1].y <- p[3].Tex.y; v[3][1].z <- p[3].BoundsY.x; v[3][1].w <- p[3].BoundsY.y
                //
                #line 232 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r0.x, vOutputControlPointID
                mov r0.yzw, v[r0.x + 0][0].xxyz  // r0.y <- hout.PosW.x; r0.z <- hout.PosW.y; r0.w <- hout.PosW.z
                mov r1.xy, v[r0.x + 0][1].xyxx  // r1.x <- hout.Tex.x; r1.y <- hout.Tex.y
                mov o0.xyz, r0.yzwy
                mov o1.xy, r1.xyxx
                ret 
                hs_join_phase 
                dcl_input vicp[4][0].xyz
                dcl_input vicp[4][1].zw
                dcl_output_siv o0.x, finalQuadUeq0EdgeTessFactor
                dcl_output_siv o1.x, finalQuadVeq0EdgeTessFactor
                dcl_output_siv o2.x, finalQuadUeq1EdgeTessFactor
                dcl_output_siv o3.x, finalQuadVeq1EdgeTessFactor
                dcl_output_siv o4.x, finalQuadUInsideTessFactor
                dcl_output_siv o5.x, finalQuadVInsideTessFactor
                dcl_temps 7
                dcl_indexableTemp x0[6], 4
                
                #line 163
                mov r0.y, vicp[0][1].z  // r0.y <- minY
                mov r1.y, vicp[0][1].w  // r1.y <- maxY
                
                #line 168
                mov r0.xz, vicp[2][0].xxzx  // r0.x <- vMin.x; r0.z <- vMin.z
                mov r0.y, r0.y  // r0.y <- vMin.y
                mov r1.xz, vicp[1][0].xxzx  // r1.x <- vMax.x; r1.z <- vMax.z
                mov r1.y, r1.y  // r1.y <- vMax.y
                add r2.xyz, r0.xyzx, r1.xyzx
                mul r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r2.x <- boxCenter.x; r2.y <- boxCenter.y; r2.z <- boxCenter.z
                mov r0.xyz, -r0.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx
                mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r0.x <- boxExtents.x; r0.y <- boxExtents.y; r0.z <- boxExtents.z
                nop 
                mov r2.xyz, r2.xyzx
                mov r0.xyz, r0.xyzx
                mov x0[0].xyzw, cb0[26].xyzw
                mov x0[1].xyzw, cb0[27].xyzw
                mov x0[2].xyzw, cb0[28].xyzw
                mov x0[3].xyzw, cb0[29].xyzw
                mov x0[4].xyzw, cb0[30].xyzw
                mov x0[5].xyzw, cb0[31].xyzw
                
                #line 135
                mov r0.w, l(0)  // r0.w <- i
                mov r1.y, l(0)  // r1.y <- <AabbOutsideFrustumTest return value>
                mov r1.x, r0.w  // r1.x <- i
                mov r1.z, l(0)
                loop 
                  ilt r1.w, r1.x, l(6)
                  mov r1.z, l(0)
                  breakc_z r1.w
                
                #line 139
                  nop 
                  mov r3.xyz, r2.xyzx
                  mov r4.xyz, r0.xyzx
                  mov r5.xyzw, x0[r1.x + 0].xyzw
                
                #line 118
                  mov r6.xyz, -r5.xyzx
                  max r6.xyz, r5.xyzx, r6.xyzx  // r6.x <- n.x; r6.y <- n.y; r6.z <- n.z
                
                #line 121
                  dp3 r1.w, r4.xyzx, r6.xyzx  // r1.w <- r
                
                #line 124
                  mov r3.w, l(1.000000)
                  dp4 r2.w, r3.xyzw, r5.xyzw  // r2.w <- s
                
                #line 129
                  add r1.w, r1.w, r2.w
                  lt r1.w, r1.w, l(0.000000)  // r1.w <- <AabbBehindPlaneTest return value>
                
                #line 139
                  if_nz r1.w
                    mov r1.y, l(-1)
                    mov r1.z, l(-1)
                    break 
                  endif 
                
                #line 135
                  iadd r1.x, r1.x, l(1)
                
                #line 143
                  mov r1.z, r1.w
                endloop 
                if_z r1.z
                  mov r1.y, l(0)
                endif 
                
                #line 173
                if_nz r1.y
                  mov r0.x, l(0)  // r0.x <- pt.EdgeTess[0]
                  mov r0.y, l(0)  // r0.y <- pt.EdgeTess[1]
                  mov r1.x, l(0)  // r1.x <- pt.EdgeTess[2]
                  mov r1.y, l(0)  // r1.y <- pt.EdgeTess[3]
                  mov r1.z, l(0)  // r1.z <- pt.InsideTess[0]
                  mov r1.w, l(0)  // r1.w <- pt.InsideTess[1]
                  mov r1.x, r1.x  // r1.x <- <ConstantHS return value>.EdgeTess[2]
                  mov r1.y, r1.y  // r1.y <- <ConstantHS return value>.EdgeTess[3]
                  mov r1.z, r1.z  // r1.z <- <ConstantHS return value>.InsideTess[0]
                  mov r1.w, r1.w  // r1.w <- <ConstantHS return value>.InsideTess[1]
                  mov r0.x, r0.x  // r0.x <- <ConstantHS return value>.EdgeTess[0]
                  mov r0.y, r0.y  // r0.y <- <ConstantHS return value>.EdgeTess[1]
                  min o0.x, r0.x, l(64.000000)
                  min o1.x, r0.y, l(64.000000)
                  min r0.xyzw, r1.xyzw, l(64.000000, 64.000000, 64.000000, 64.000000)  // r0.x <- <ConstantHS return value>.EdgeTess[2]; r0.y <- <ConstantHS return value>.EdgeTess[3]; r0.z <- <ConstantHS return value>.InsideTess[0]; r0.w <- <ConstantHS return value>.InsideTess[1]
                  mov o2.x, r0.x
                  mov o3.x, r0.y
                  mov o4.x, r0.z
                  mov o5.x, r0.w
                  ret 
                
                #line 184
                else   // Prior locations: r0.x <- boxExtents.x; r0.y <- boxExtents.y; r0.z <- boxExtents.z
                
                #line 195
                  add r0.xyz, vicp[2][0].xyzx, vicp[0][0].xyzx
                  mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r0.x <- e0.x; r0.y <- e0.y; r0.z <- e0.z
                  add r1.xyz, vicp[1][0].xyzx, vicp[0][0].xyzx
                  mul r1.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r1.x <- e1.x; r1.y <- e1.y; r1.z <- e1.z
                  add r2.xyz, vicp[3][0].xyzx, vicp[1][0].xyzx
                  mul r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r2.x <- e2.x; r2.y <- e2.y; r2.z <- e2.z
                  add r3.xyz, vicp[3][0].xyzx, vicp[2][0].xyzx
                  mul r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r3.x <- e3.x; r3.y <- e3.y; r3.z <- e3.z
                  add r4.xyz, vicp[1][0].xyzx, vicp[0][0].xyzx
                  add r4.xyz, r4.xyzx, vicp[2][0].xyzx
                  add r4.xyz, r4.xyzx, vicp[3][0].xyzx
                  mul r4.xyz, r4.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)  // r4.x <- c.x; r4.y <- c.y; r4.z <- c.z
                  nop 
                  mov r0.xyz, r0.xyzx
                
                #line 105
                  mov r5.xyz, -cb0[12].xyzx
                  add r0.xyz, r0.xyzx, r5.xyzx
                  dp3 r0.x, r0.xyzx, r0.xyzx
                  sqrt r0.x, r0.x  // r0.x <- d
                
                #line 110
                  mov r0.y, -cb0[15].x
                  add r0.x, r0.y, r0.x
                  mov r0.y, -cb0[15].x
                  add r0.y, r0.y, cb0[15].y
                  div r0.x, r0.x, r0.y
                  max r0.x, r0.x, l(0.000000)
                  min r0.x, r0.x, l(1.000000)  // r0.x <- s
                  itof r0.y, l(2)
                  mov r0.z, -cb0[15].w
                  add r0.z, r0.z, cb0[15].z
                  mul r0.x, r0.z, r0.x
                  add r0.x, r0.x, cb0[15].w
                  log r0.y, r0.y
                  mul r0.x, r0.y, r0.x
                  exp r0.x, r0.x  // r0.x <- <CalcTessFactor return value>
                
                #line 201
                  mov r0.x, r0.x  // r0.x <- pt.EdgeTess[0]
                  nop 
                  mov r1.xyz, r1.xyzx
                
                #line 105
                  mov r0.yzw, -cb0[12].xxyz
                  add r0.yzw, r0.yyzw, r1.xxyz
                  dp3 r0.y, r0.yzwy, r0.yzwy
                  sqrt r0.y, r0.y  // r0.y <- d
                
                #line 110
                  mov r0.z, -cb0[15].x
                  add r0.y, r0.z, r0.y
                  mov r0.z, -cb0[15].x
                  add r0.z, r0.z, cb0[15].y
                  div r0.y, r0.y, r0.z
                  max r0.y, r0.y, l(0.000000)
                  min r0.y, r0.y, l(1.000000)  // r0.y <- s
                  itof r0.z, l(2)
                  mov r0.w, -cb0[15].w
                  add r0.w, r0.w, cb0[15].z
                  mul r0.y, r0.w, r0.y
                  add r0.y, r0.y, cb0[15].w
                  log r0.z, r0.z
                  mul r0.y, r0.z, r0.y
                  exp r0.y, r0.y  // r0.y <- <CalcTessFactor return value>
                
                #line 202
                  mov r0.y, r0.y  // r0.y <- pt.EdgeTess[1]
                  nop 
                  mov r2.xyz, r2.xyzx
                
                #line 105
                  mov r1.xyz, -cb0[12].xyzx
                  add r1.xyz, r1.xyzx, r2.xyzx
                  dp3 r0.z, r1.xyzx, r1.xyzx
                  sqrt r0.z, r0.z  // r0.z <- d
                
                #line 110
                  mov r0.w, -cb0[15].x
                  add r0.z, r0.w, r0.z
                  mov r0.w, -cb0[15].x
                  add r0.w, r0.w, cb0[15].y
                  div r0.z, r0.z, r0.w
                  max r0.z, r0.z, l(0.000000)
                  min r0.z, r0.z, l(1.000000)  // r0.z <- s
                  itof r0.w, l(2)
                  mov r1.x, -cb0[15].w
                  add r1.x, r1.x, cb0[15].z
                  mul r0.z, r0.z, r1.x
                  add r0.z, r0.z, cb0[15].w
                  log r0.w, r0.w
                  mul r0.z, r0.w, r0.z
                  exp r1.x, r0.z  // r1.x <- <CalcTessFactor return value>
                
                #line 203
                  mov r1.x, r1.x  // r1.x <- pt.EdgeTess[2]
                  nop 
                  mov r3.xyz, r3.xyzx
                
                #line 105
                  mov r2.xyz, -cb0[12].xyzx
                  add r2.xyz, r2.xyzx, r3.xyzx
                  dp3 r0.z, r2.xyzx, r2.xyzx
                  sqrt r0.z, r0.z  // r0.z <- d
                
                #line 110
                  mov r0.w, -cb0[15].x
                  add r0.z, r0.w, r0.z
                  mov r0.w, -cb0[15].x
                  add r0.w, r0.w, cb0[15].y
                  div r0.z, r0.z, r0.w
                  max r0.z, r0.z, l(0.000000)
                  min r0.z, r0.z, l(1.000000)  // r0.z <- s
                  itof r0.w, l(2)
                  mov r2.x, -cb0[15].w
                  add r2.x, r2.x, cb0[15].z
                  mul r0.z, r0.z, r2.x
                  add r0.z, r0.z, cb0[15].w
                  log r0.w, r0.w
                  mul r0.z, r0.w, r0.z
                  exp r1.y, r0.z  // r1.y <- <CalcTessFactor return value>
                
                #line 204
                  mov r1.y, r1.y  // r1.y <- pt.EdgeTess[3]
                  nop 
                  mov r4.xyz, r4.xyzx
                
                #line 105
                  mov r2.xyz, -cb0[12].xyzx
                  add r2.xyz, r2.xyzx, r4.xyzx
                  dp3 r0.z, r2.xyzx, r2.xyzx
                  sqrt r0.z, r0.z  // r0.z <- d
                
                #line 110
                  mov r0.w, -cb0[15].x
                  add r0.z, r0.w, r0.z
                  mov r0.w, -cb0[15].x
                  add r0.w, r0.w, cb0[15].y
                  div r0.z, r0.z, r0.w
                  max r0.z, r0.z, l(0.000000)
                  min r0.z, r0.z, l(1.000000)  // r0.z <- s
                  itof r0.w, l(2)
                  mov r2.x, -cb0[15].w
                  add r2.x, r2.x, cb0[15].z
                  mul r0.z, r0.z, r2.x
                  add r0.z, r0.z, cb0[15].w
                  log r0.w, r0.w
                  mul r0.z, r0.w, r0.z
                  exp r1.w, r0.z  // r1.w <- <CalcTessFactor return value>
                  mov r1.z, r1.w  // r1.z <- <CalcTessFactor return value>
                
                #line 206
                  mov r1.z, r1.z  // r1.z <- pt.InsideTess[0]
                  mov r1.w, r1.w  // r1.w <- pt.InsideTess[1]
                  mov r1.x, r1.x  // r1.x <- <ConstantHS return value>.EdgeTess[2]
                  mov r1.y, r1.y  // r1.y <- <ConstantHS return value>.EdgeTess[3]
                  mov r1.z, r1.z  // r1.z <- <ConstantHS return value>.InsideTess[0]
                  mov r1.w, r1.w  // r1.w <- <ConstantHS return value>.InsideTess[1]
                  mov r0.x, r0.x  // r0.x <- <ConstantHS return value>.EdgeTess[0]
                  mov r0.y, r0.y  // r0.y <- <ConstantHS return value>.EdgeTess[1]
                  min o0.x, r0.x, l(64.000000)  // o0.x <- <ConstantHS return value>.EdgeTess[0]
                  min o1.x, r0.y, l(64.000000)  // o1.x <- <ConstantHS return value>.EdgeTess[1]
                  min r0.xyzw, r1.xyzw, l(64.000000, 64.000000, 64.000000, 64.000000)  // r0.x <- <ConstantHS return value>.EdgeTess[2]; r0.y <- <ConstantHS return value>.EdgeTess[3]; r0.z <- <ConstantHS return value>.InsideTess[0]; r0.w <- <ConstantHS return value>.InsideTess[1]
                  mov o2.x, r0.x  // o2.x <- <ConstantHS return value>.EdgeTess[2]
                  mov o3.x, r0.y  // o3.x <- <ConstantHS return value>.EdgeTess[3]
                  mov o4.x, r0.z  // o4.x <- <ConstantHS return value>.InsideTess[0]
                  mov o5.x, r0.w  // o5.x <- <ConstantHS return value>.InsideTess[1]
                  ret 
                endif 
                ret 
                // Approximately 218 instruction slots used
                            
            };
            DomainShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   float3 gEyePosW;                   // Offset:  192 Size:    12 [unused]
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //   float gMinDist;                    // Offset:  240 Size:     4 [unused]
                //   float gMaxDist;                    // Offset:  244 Size:     4 [unused]
                //   float gMinTess;                    // Offset:  248 Size:     4 [unused]
                //   float gMaxTess;                    // Offset:  252 Size:     4 [unused]
                //   float gTexelCellSpaceU;            // Offset:  256 Size:     4 [unused]
                //   float gTexelCellSpaceV;            // Offset:  260 Size:     4 [unused]
                //   float gWorldCellSpace;             // Offset:  264 Size:     4 [unused]
                //   float2 gTexScale;                  // Offset:  272 Size:     8
                //      = 0x42480000 0x42480000 
                //   float4x4 gViewProj;                // Offset:  288 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  352 Size:    64
                //   float4 gWorldFrustumPlanes[6];     // Offset:  416 Size:    96 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  512
                //       float4 Diffuse;                // Offset:  528
                //       float4 Specular;               // Offset:  544
                //       float4 Reflect;                // Offset:  560
                //
                //   } gMaterial;                       // Offset:  512 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samHeightmap                      sampler      NA          NA    0        1
                // gHeightMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Patch Constant signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_TessFactor            0   x           0 QUADEDGE   float       
                // SV_TessFactor            1   x           1 QUADEDGE   float       
                // SV_TessFactor            2   x           2 QUADEDGE   float       
                // SV_TessFactor            3   x           3 QUADEDGE   float       
                // SV_InsideTessFactor      0   x           4  QUADINT   float       
                // SV_InsideTessFactor      1   x           5  QUADINT   float       
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   x z 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                // TEXCOORD                 1     zw        2     NONE   float     zw
                // TEXCOORD                 2   xyzw        3     NONE   float   xyzw
                //
                // Tessellation Domain   # of control points
                // -------------------- --------------------
                // Quadrilateral                           4
                //
                ds_5_0
                dcl_input_control_point_count 4
                dcl_tessellator_domain domain_quad
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[26], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input vDomain.xy
                dcl_input vicp[4][0].xz
                dcl_input vicp[4][1].xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o2.zw
                dcl_output o3.xyzw
                dcl_temps 4
                //
                // Initial variable locations:
                //   vpc0.x <- patchTess.EdgeTess[0]; 
                //   vpc1.x <- patchTess.EdgeTess[1]; 
                //   vpc2.x <- patchTess.EdgeTess[2]; 
                //   vpc3.x <- patchTess.EdgeTess[3]; 
                //   vpc4.x <- patchTess.InsideTess[0]; 
                //   vpc5.x <- patchTess.InsideTess[1]; 
                //   vDomain.x <- uv.x; vDomain.y <- uv.y; 
                //   o3.x <- <DS return value>.ShadowPosH.x; o3.y <- <DS return value>.ShadowPosH.y; o3.z <- <DS return value>.ShadowPosH.z; o3.w <- <DS return value>.ShadowPosH.w; 
                //   o2.x <- <DS return value>.Tex.x; o2.y <- <DS return value>.Tex.y; o2.z <- <DS return value>.TiledTex.x; o2.w <- <DS return value>.TiledTex.y; 
                //   o1.x <- <DS return value>.PosW.x; o1.y <- <DS return value>.PosW.y; o1.z <- <DS return value>.PosW.z; 
                //   o0.x <- <DS return value>.PosH.x; o0.y <- <DS return value>.PosH.y; o0.z <- <DS return value>.PosH.z; o0.w <- <DS return value>.PosH.w; 
                //   vicp[0][0].x <- quad[0].PosW.x; vicp[0][0].y <- quad[0].PosW.y; vicp[0][0].z <- quad[0].PosW.z; 
                //   vicp[0][1].x <- quad[0].Tex.x; vicp[0][1].y <- quad[0].Tex.y; 
                //   vicp[1][0].x <- quad[1].PosW.x; vicp[1][0].y <- quad[1].PosW.y; vicp[1][0].z <- quad[1].PosW.z; 
                //   vicp[1][1].x <- quad[1].Tex.x; vicp[1][1].y <- quad[1].Tex.y; 
                //   vicp[2][0].x <- quad[2].PosW.x; vicp[2][0].y <- quad[2].PosW.y; vicp[2][0].z <- quad[2].PosW.z; 
                //   vicp[2][1].x <- quad[2].Tex.x; vicp[2][1].y <- quad[2].Tex.y; 
                //   vicp[3][0].x <- quad[3].PosW.x; vicp[3][0].y <- quad[3].PosW.y; vicp[3][0].z <- quad[3].PosW.z; 
                //   vicp[3][1].x <- quad[3].Tex.x; vicp[3][1].y <- quad[3].Tex.y
                //
                #line 257 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r0.xy, -vicp[0][0].xzxx
                add r0.xy, r0.xyxx, vicp[1][0].xzxx
                mul r0.xy, r0.xyxx, vDomain.xxxx
                add r0.xy, r0.xyxx, vicp[0][0].xzxx
                mov r0.zw, -vicp[2][0].xxxz
                add r0.zw, r0.zzzw, vicp[3][0].xxxz
                mul r0.zw, r0.zzzw, vDomain.xxxx
                add r0.zw, r0.zzzw, vicp[2][0].xxxz
                mov r1.xy, -r0.xyxx
                add r0.zw, r0.zzzw, r1.xxxy
                mul r0.zw, r0.zzzw, vDomain.yyyy
                add r0.xz, r0.zzwz, r0.xxyx  // r0.x <- dout.PosW.x; r0.z <- dout.PosW.z
                
                #line 262
                mov r1.xy, -vicp[0][1].xyxx
                add r1.xy, r1.xyxx, vicp[1][1].xyxx
                mul r1.xy, r1.xyxx, vDomain.xxxx
                add r1.xy, r1.xyxx, vicp[0][1].xyxx
                mov r1.zw, -vicp[2][1].xxxy
                add r1.zw, r1.zzzw, vicp[3][1].xxxy
                mul r1.zw, r1.zzzw, vDomain.xxxx
                add r1.zw, r1.zzzw, vicp[2][1].xxxy
                mov r2.xy, -r1.xyxx
                add r1.zw, r1.zzzw, r2.xxxy
                mul r1.zw, r1.zzzw, vDomain.yyyy
                add r1.xy, r1.zwzz, r1.xyxx  // r1.x <- dout.Tex.x; r1.y <- dout.Tex.y
                
                #line 268
                mul r1.zw, r1.xxxy, cb0[17].xxxy  // r1.z <- dout.TiledTex.x; r1.w <- dout.TiledTex.y
                
                #line 271
                itof r2.x, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r0.y, r1.xyxx, t0.yxzw, s0, r2.x
                mov r0.y, r0.y  // r0.y <- dout.PosW.y
                
                #line 279
                mov r0.w, l(1.000000)
                dp4 r2.x, r0.xyzw, cb0[18].xyzw  // r2.x <- dout.PosH.x
                dp4 r2.y, r0.xyzw, cb0[19].xyzw  // r2.y <- dout.PosH.y
                dp4 r2.z, r0.xyzw, cb0[20].xyzw  // r2.z <- dout.PosH.z
                dp4 r2.w, r0.xyzw, cb0[21].xyzw  // r2.w <- dout.PosH.w
                
                #line 282
                dp4 r3.x, r0.xyzw, cb0[22].xyzw  // r3.x <- dout.ShadowPosH.x
                dp4 r3.y, r0.xyzw, cb0[23].xyzw  // r3.y <- dout.ShadowPosH.y
                dp4 r3.z, r0.xyzw, cb0[24].xyzw  // r3.z <- dout.ShadowPosH.z
                dp4 r3.w, r0.xyzw, cb0[25].xyzw  // r3.w <- dout.ShadowPosH.w
                mov o0.xyzw, r2.xyzw
                mov o2.xy, r1.xyxx
                mov o2.zw, r1.zzzw
                mov o3.xyzw, r3.xyzw
                mov o1.xyz, r0.xyzx
                ret 
                // Approximately 43 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //   float gMinDist;                    // Offset:  240 Size:     4 [unused]
                //   float gMaxDist;                    // Offset:  244 Size:     4 [unused]
                //   float gMinTess;                    // Offset:  248 Size:     4 [unused]
                //   float gMaxTess;                    // Offset:  252 Size:     4 [unused]
                //   float gTexelCellSpaceU;            // Offset:  256 Size:     4
                //   float gTexelCellSpaceV;            // Offset:  260 Size:     4
                //   float gWorldCellSpace;             // Offset:  264 Size:     4
                //   float2 gTexScale;                  // Offset:  272 Size:     8 [unused]
                //      = 0x42480000 0x42480000 
                //   float4x4 gViewProj;                // Offset:  288 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  352 Size:    64 [unused]
                //   float4 gWorldFrustumPlanes[6];     // Offset:  416 Size:    96 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  512
                //       float4 Diffuse;                // Offset:  528
                //       float4 Specular;               // Offset:  544
                //       float4 Reflect;                // Offset:  560
                //
                //   } gMaterial;                       // Offset:  512 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samHeightmap                      sampler      NA          NA    1        1
                // samShadow                       sampler_c      NA          NA    2        1
                // gLayerMapArray                    texture  float4     2darray    0        1
                // gBlendMap                         texture  float4          2d    1        1
                // gHeightMap                        texture  float4          2d    2        1
                // gShadowMap                        texture  float4          2d    3        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                // TEXCOORD                 1     zw        2     NONE   float     zw
                // TEXCOORD                 2   xyzw        3     NONE   float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[35], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_default
                dcl_sampler s2, mode_comparison
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_resource_texture2d (float,float,float,float) t3
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xy
                dcl_input_ps linear v2.zw
                dcl_input_ps linear v3.xyzw
                dcl_output o0.xyzw
                dcl_temps 15
                dcl_indexableTemp x0[9], 4
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
                //   v2.x <- pin.Tex.x; v2.y <- pin.Tex.y; v2.z <- pin.TiledTex.x; v2.w <- pin.TiledTex.y; 
                //   v3.x <- pin.ShadowPosH.x; v3.y <- pin.ShadowPosH.y; v3.z <- pin.ShadowPosH.z; v3.w <- pin.ShadowPosH.w; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 226 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\LightHelper.fx"
                mov r0.x, l(0.000488)  // r0.x <- SMAP_DX
                
                #line 294 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r1.x, -cb0[16].x
                mov r1.y, l(0)
                add r1.xy, r1.xyxx, v2.xyxx  // r1.x <- leftTex.x; r1.y <- leftTex.y
                mov r2.x, cb0[16].x
                mov r2.y, l(0)
                add r1.zw, r2.xxxy, v2.xxxy  // r1.z <- rightTex.x; r1.w <- rightTex.y
                mov r2.x, l(0)
                mov r2.y, cb0[16].y
                add r2.xy, r2.xyxx, v2.xyxx  // r2.x <- bottomTex.x; r2.y <- bottomTex.y
                mov r3.y, -cb0[16].y
                mov r3.x, l(0)
                add r2.zw, r3.xxxy, v2.xxxy  // r2.z <- topTex.x; r2.w <- topTex.y
                itof r3.x, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t2.xyzw, s1, r3.x
                mov r1.x, r1.x  // r1.x <- leftY
                itof r1.y, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r1.y, r1.zwzz, t2.yxzw, s1, r1.y
                mov r1.y, r1.y  // r1.y <- rightY
                itof r1.z, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r1.z, r2.xyxx, t2.yzxw, s1, r1.z
                mov r1.z, r1.z  // r1.z <- bottomY
                itof r1.w, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r1.w, r2.zwzz, t2.yzwx, s1, r1.w
                mov r1.w, r1.w  // r1.w <- topY
                mul r2.y, cb0[16].z, l(2.000000)
                mov r1.x, -r1.x
                add r2.z, r1.x, r1.y
                mov r2.x, l(0)
                dp3 r1.x, r2.xyzx, r2.xyzx
                rsq r1.x, r1.x
                mul r2.xyz, r1.xxxx, r2.xyzx  // r2.x <- tangent.z; r2.y <- tangent.x; r2.z <- tangent.y
                
                #line 305
                mov r1.x, -r1.w
                add r1.x, r1.x, r1.z
                mul r1.y, cb0[16].z, l(-2.000000)
                mov r1.z, l(0)
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r1.w, r1.w
                mul r1.xyz, r1.wwww, r1.xyzx  // r1.x <- bitan.y; r1.y <- bitan.z; r1.z <- bitan.x
                mul r3.xyz, r1.yzxy, r2.zxyz
                mul r1.xyz, r1.xyzx, r2.xyzx
                mov r1.xyz, -r1.xyzx
                add r1.xyz, r1.xyzx, r3.xyzx  // r1.x <- normalW.x; r1.y <- normalW.y; r1.z <- normalW.z
                
                #line 310
                mov r2.xyz, -v1.xyzx
                add r2.xyz, r2.xyzx, cb0[12].xyzx  // r2.x <- toEye.x; r2.y <- toEye.y; r2.z <- toEye.z
                
                #line 313
                dp3 r1.w, r2.xyzx, r2.xyzx
                sqrt r1.w, r1.w  // r1.w <- distToEye
                
                #line 316
                div r2.xyz, r2.xyzx, r1.wwww
                
                #line 323
                mov r3.xy, v2.zwzz
                mov r3.z, l(0)
                sample_indexable(texture2darray)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0  // r3.x <- c0.x; r3.y <- c0.y; r3.z <- c0.z; r3.w <- c0.w
                mov r4.xy, v2.zwzz
                mov r4.z, l(1.000000)
                sample_indexable(texture2darray)(float,float,float,float) r4.xyzw, r4.xyzx, t0.xyzw, s0  // r4.x <- c1.x; r4.y <- c1.y; r4.z <- c1.z; r4.w <- c1.w
                mov r5.xy, v2.zwzz
                mov r5.z, l(2.000000)
                sample_indexable(texture2darray)(float,float,float,float) r5.xyzw, r5.xyzx, t0.xyzw, s0  // r5.x <- c2.x; r5.y <- c2.y; r5.z <- c2.z; r5.w <- c2.w
                mov r6.xy, v2.zwzz
                mov r6.z, l(3.000000)
                sample_indexable(texture2darray)(float,float,float,float) r6.xyzw, r6.xyzx, t0.xyzw, s0  // r6.x <- c3.x; r6.y <- c3.y; r6.z <- c3.z; r6.w <- c3.w
                mov r7.xy, v2.zwzz
                mov r7.z, l(4.000000)
                sample_indexable(texture2darray)(float,float,float,float) r7.xyzw, r7.xyzx, t0.xyzw, s0  // r7.x <- c4.x; r7.y <- c4.y; r7.z <- c4.z; r7.w <- c4.w
                
                #line 330
                sample_indexable(texture2d)(float,float,float,float) r8.xyzw, v2.xyxx, t1.xyzw, s0  // r8.x <- t.x; r8.y <- t.y; r8.z <- t.z; r8.w <- t.w
                
                #line 333
                mov r3.xyzw, r3.xyzw  // r3.x <- texColor.x; r3.y <- texColor.y; r3.z <- texColor.z; r3.w <- texColor.w
                mov r9.xyzw, -r3.xyzw
                add r4.xyzw, r4.xyzw, r9.xyzw
                mul r4.xyzw, r4.xyzw, r8.xxxx
                add r3.xyzw, r3.xyzw, r4.xyzw
                mov r4.xyzw, -r3.xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r4.xyzw, r4.xyzw, r8.yyyy
                add r3.xyzw, r3.xyzw, r4.xyzw
                mov r4.xyzw, -r3.xyzw
                add r4.xyzw, r4.xyzw, r6.xyzw
                mul r4.xyzw, r4.xyzw, r8.zzzz
                add r3.xyzw, r3.xyzw, r4.xyzw
                mov r4.xyzw, -r3.xyzw
                add r4.xyzw, r4.xyzw, r7.xyzw
                mul r4.xyzw, r4.xyzw, r8.wwww
                add r3.xyzw, r3.xyzw, r4.xyzw
                
                #line 347
                mov r4.xyzw, l(0,0,0,0)  // r4.x <- ambient.x; r4.y <- ambient.y; r4.z <- ambient.z; r4.w <- ambient.w
                mov r5.xyzw, l(0,0,0,0)  // r5.x <- diffuse.x; r5.y <- diffuse.y; r5.z <- diffuse.z; r5.w <- diffuse.w
                mov r6.xyzw, l(0,0,0,0)  // r6.x <- spec.x; r6.y <- spec.y; r6.z <- spec.z; r6.w <- spec.w
                
                #line 353
                nop 
                nop 
                nop 
                mov r7.xyzw, v3.xyzw
                
                #line 233 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\LightHelper.fx"
                div r7.xyz, r7.zxyz, r7.wwww  // r7.x <- shadowPosH.z; r7.y <- shadowPosH.x; r7.z <- shadowPosH.y
                
                #line 236
                mov r7.x, r7.x  // r7.x <- depth
                
                #line 239
                mov r0.x, r0.x  // r0.x <- dx
                mov r1.w, l(0)  // r1.w <- percentLit
                mov x0[0].xy, l(-0.000488,-0.000488,0,0)
                mov x0[1].xy, l(0,-0.000488,0,0)
                mov r0.y, l(-0.000488)
                mov x0[2].xy, r0.xyxx
                mov x0[3].xy, l(-0.000488,0,0,0)
                mov x0[4].xy, l(0,0,0,0)
                mov r0.z, l(0)
                mov x0[5].xy, r0.xzxx
                mov x0[6].xy, l(-0.000488,0.000488,0,0)
                mov x0[7].xy, l(0,0.000488,0,0)
                mov r0.w, l(0.000488)
                mov x0[8].xy, r0.xwxx
                
                #line 252
                mov r0.xy, x0[0].xyxx
                add r0.xy, r0.xyxx, r7.yzyy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t3.xxxx, s2, r7.x
                add r0.x, r0.x, r1.w  // r0.x <- percentLit
                mov r0.yz, x0[1].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[2].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[3].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[4].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[5].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[6].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[7].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[8].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                
                #line 256
                div r0.x, r0.x, l(9.000000)
                
                #line 360 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                nop 
                mov r7.xyzw, cb0[32].xyzw
                mov r8.xyzw, cb0[33].xyzw
                mov r9.xyzw, cb0[34].xyzw
                mov r10.xyzw, cb0[0].xyzw
                mov r11.xyzw, cb0[1].xyzw
                mov r12.xyzw, cb0[2].xyzw
                mov r0.yzw, cb0[3].xxyz
                mov r1.xyz, r1.xyzx
                mov r2.xyz, r2.xyzx
                
                #line 66 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\LightHelper.fx"
                mov r13.xyzw, l(0,0,0,0)  // r13.x <- diffuse.x; r13.y <- diffuse.y; r13.z <- diffuse.z; r13.w <- diffuse.w
                mov r14.xyzw, l(0,0,0,0)  // r14.x <- spec.x; r14.y <- spec.y; r14.z <- spec.z; r14.w <- spec.w
                
                #line 70
                mov r0.yzw, -r0.yyzw  // r0.y <- lightVec.x; r0.z <- lightVec.y; r0.w <- lightVec.z
                
                #line 73
                mul r7.xyzw, r7.xyzw, r10.xyzw  // r7.x <- ambient.x; r7.y <- ambient.y; r7.z <- ambient.z; r7.w <- ambient.w
                
                #line 78
                dp3 r1.w, r0.yzwy, r1.xyzx  // r1.w <- diffuseFactor
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r0.yzw, -r0.yyzw
                dp3 r10.x, r0.yzwy, r1.xyzx
                add r10.x, r10.x, r10.x
                mov r10.x, -r10.x
                mul r10.xyz, r1.xyzx, r10.xxxx
                add r0.yzw, r0.yyzw, r10.xxyz  // r0.y <- v.x; r0.z <- v.y; r0.w <- v.z
                dp3 r0.y, r0.yzwy, r2.xyzx
                max r0.y, r0.y, l(0.000000)
                log r0.y, r0.y
                mul r0.y, r0.y, r9.w
                exp r0.y, r0.y  // r0.y <- specFactor
                mul r8.xyzw, r8.xyzw, r1.wwww
                mul r8.xyzw, r11.xyzw, r8.xyzw  // r8.x <- diffuse.x; r8.y <- diffuse.y; r8.z <- diffuse.z; r8.w <- diffuse.w
                mul r9.xyzw, r9.xyzw, r0.yyyy
                mul r9.xyzw, r12.xyzw, r9.xyzw  // r9.x <- spec.x; r9.y <- spec.y; r9.z <- spec.z; r9.w <- spec.w
                movc r8.xyzw, r2.wwww, r8.xyzw, r13.xyzw
                movc r9.xyzw, r2.wwww, r9.xyzw, r14.xyzw
                
                #line 360 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r7.xyzw, r7.xyzw  // r7.x <- A.x; r7.y <- A.y; r7.z <- A.z; r7.w <- A.w
                mov r8.xyzw, r8.xyzw  // r8.x <- D.x; r8.y <- D.y; r8.z <- D.z; r8.w <- D.w
                mov r9.xyzw, r9.xyzw  // r9.x <- S.x; r9.y <- S.y; r9.z <- S.z; r9.w <- S.w
                
                #line 363
                add r4.xyzw, r4.xyzw, r7.xyzw
                mul r7.xyzw, r0.xxxx, r8.xyzw
                add r5.xyzw, r5.xyzw, r7.xyzw
                mul r0.xyzw, r0.xxxx, r9.xyzw
                add r0.xyzw, r0.xyzw, r6.xyzw  // r0.x <- spec.x; r0.y <- spec.y; r0.z <- spec.z; r0.w <- spec.w
                
                #line 360
                nop 
                mov r6.xyzw, cb0[32].xyzw  // r6.x <- mat.Ambient.x; r6.y <- mat.Ambient.y; r6.z <- mat.Ambient.z; r6.w <- mat.Ambient.w
                mov r7.xyzw, cb0[33].xyzw  // r7.x <- mat.Diffuse.x; r7.y <- mat.Diffuse.y; r7.z <- mat.Diffuse.z; r7.w <- mat.Diffuse.w
                mov r8.xyzw, cb0[34].xyzw  // r8.x <- mat.Specular.x; r8.y <- mat.Specular.y; r8.z <- mat.Specular.z; r8.w <- mat.Specular.w
                mov r9.xyzw, cb0[4].xyzw  // r9.x <- L.Ambient.x; r9.y <- L.Ambient.y; r9.z <- L.Ambient.z; r9.w <- L.Ambient.w
                mov r10.xyzw, cb0[5].xyzw  // r10.x <- L.Diffuse.x; r10.y <- L.Diffuse.y; r10.z <- L.Diffuse.z; r10.w <- L.Diffuse.w
                mov r11.xyzw, cb0[6].xyzw  // r11.x <- L.Specular.x; r11.y <- L.Specular.y; r11.z <- L.Specular.z; r11.w <- L.Specular.w
                mov r12.xyz, cb0[7].xyzx  // r12.x <- L.Direction.x; r12.y <- L.Direction.y; r12.z <- L.Direction.z
                
                #line 66 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\LightHelper.fx"
                mov r13.xyzw, l(0,0,0,0)  // r13.x <- diffuse.x; r13.y <- diffuse.y; r13.z <- diffuse.z; r13.w <- diffuse.w
                mov r14.xyzw, l(0,0,0,0)  // r14.x <- spec.x; r14.y <- spec.y; r14.z <- spec.z; r14.w <- spec.w
                
                #line 70
                mov r12.xyz, -r12.xyzx  // r12.x <- lightVec.x; r12.y <- lightVec.y; r12.z <- lightVec.z
                
                #line 73
                mul r6.xyzw, r6.xyzw, r9.xyzw  // r6.x <- ambient.x; r6.y <- ambient.y; r6.z <- ambient.z; r6.w <- ambient.w
                
                #line 78
                dp3 r1.w, r12.xyzx, r1.xyzx
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r9.xyz, -r12.xyzx
                dp3 r9.w, r9.xyzx, r1.xyzx
                add r9.w, r9.w, r9.w
                mov r9.w, -r9.w
                mul r1.xyz, r1.xyzx, r9.wwww
                add r1.xyz, r9.xyzx, r1.xyzx  // r1.x <- v.x; r1.y <- v.y; r1.z <- v.z
                dp3 r1.x, r1.xyzx, r2.xyzx
                max r1.x, r1.x, l(0.000000)
                log r1.x, r1.x
                mul r1.x, r1.x, r8.w
                exp r1.x, r1.x  // r1.x <- specFactor
                mul r7.xyzw, r7.xyzw, r1.wwww
                mul r7.xyzw, r10.xyzw, r7.xyzw  // r7.x <- diffuse.x; r7.y <- diffuse.y; r7.z <- diffuse.z; r7.w <- diffuse.w
                mul r1.xyzw, r8.xyzw, r1.xxxx
                mul r1.xyzw, r11.xyzw, r1.xyzw  // r1.x <- spec.x; r1.y <- spec.y; r1.z <- spec.z; r1.w <- spec.w
                movc r7.xyzw, r2.wwww, r7.xyzw, r13.xyzw
                movc r1.xyzw, r2.wwww, r1.xyzw, r14.xyzw
                
                #line 360 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r6.xyzw, r6.xyzw  // r6.x <- A.x; r6.y <- A.y; r6.z <- A.z; r6.w <- A.w
                mov r7.xyzw, r7.xyzw  // r7.x <- D.x; r7.y <- D.y; r7.z <- D.z; r7.w <- D.w
                mov r1.xyzw, r1.xyzw  // r1.x <- S.x; r1.y <- S.y; r1.z <- S.z; r1.w <- S.w
                
                #line 363
                add r2.xyzw, r4.xyzw, r6.xyzw  // r2.x <- ambient.x; r2.y <- ambient.y; r2.z <- ambient.z; r2.w <- ambient.w
                mul r4.xyzw, r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
                add r4.xyzw, r4.xyzw, r5.xyzw  // r4.x <- diffuse.x; r4.y <- diffuse.y; r4.z <- diffuse.z; r4.w <- diffuse.w
                mul r1.xyzw, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
                add r0.xyzw, r0.xyzw, r1.xyzw
                
                #line 368
                add r1.xyzw, r2.xyzw, r4.xyzw
                mul r1.xyzw, r1.xyzw, r3.xyzw
                add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- litColor.x; r0.y <- litColor.y; r0.z <- litColor.z; r0.w <- litColor.w
                
                #line 383
                mov o0.xyzw, r0.xyzw
                ret 
                // Approximately 226 instruction slots used
                            
            };
        }

    }

    technique11 Light3
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samHeightmap                      sampler      NA          NA    0        1
                // gHeightMap                        texture  float4          2d    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   x z 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                // TEXCOORD                 1   xy          2     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                // TEXCOORD                 1     zw        1     NONE   float     zw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input v0.xz
                dcl_input v1.xy
                dcl_input v2.xy
                dcl_output o0.xyz
                dcl_output o1.xy
                dcl_output o1.zw
                dcl_temps 2
                //
                // Initial variable locations:
                //   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
                //   v1.x <- vin.Tex.x; v1.y <- vin.Tex.y; 
                //   v2.x <- vin.BoundsY.x; v2.y <- vin.BoundsY.y; 
                //   o1.x <- <VS return value>.Tex.x; o1.y <- <VS return value>.Tex.y; o1.z <- <VS return value>.BoundsY.x; o1.w <- <VS return value>.BoundsY.y; 
                //   o0.x <- <VS return value>.PosW.x; o0.y <- <VS return value>.PosW.y; o0.z <- <VS return value>.PosW.z
                //
                #line 90 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r0.xy, v0.xzxx  // r0.x <- vout.PosW.x; r0.y <- vout.PosW.z
                
                #line 94
                itof r0.z, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r0.z, v1.xyxx, t0.yzxw, s0, r0.z
                mov r0.z, r0.z  // r0.z <- vout.PosW.y
                
                #line 97
                mov r1.xy, v1.xyxx  // r1.x <- vout.Tex.x; r1.y <- vout.Tex.y
                mov r1.zw, v2.xxxy  // r1.z <- vout.BoundsY.x; r1.w <- vout.BoundsY.y
                mov o1.xy, r1.xyxx
                mov o1.zw, r1.zzzw
                mov o0.xz, r0.xxyx
                mov o0.y, r0.z
                ret 
                // Approximately 11 instruction slots used
                            
            };
            HullShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //   float gMinDist;                    // Offset:  240 Size:     4
                //   float gMaxDist;                    // Offset:  244 Size:     4
                //   float gMinTess;                    // Offset:  248 Size:     4
                //   float gMaxTess;                    // Offset:  252 Size:     4
                //   float gTexelCellSpaceU;            // Offset:  256 Size:     4 [unused]
                //   float gTexelCellSpaceV;            // Offset:  260 Size:     4 [unused]
                //   float gWorldCellSpace;             // Offset:  264 Size:     4 [unused]
                //   float2 gTexScale;                  // Offset:  272 Size:     8 [unused]
                //      = 0x42480000 0x42480000 
                //   float4x4 gViewProj;                // Offset:  288 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  352 Size:    64 [unused]
                //   float4 gWorldFrustumPlanes[6];     // Offset:  416 Size:    96
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  512
                //       float4 Diffuse;                // Offset:  528
                //       float4 Specular;               // Offset:  544
                //       float4 Reflect;                // Offset:  560
                //
                //   } gMaterial;                       // Offset:  512 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Patch Constant signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_TessFactor            0   x           0 QUADEDGE   float   x   
                // SV_TessFactor            1   x           1 QUADEDGE   float   x   
                // SV_TessFactor            2   x           2 QUADEDGE   float   x   
                // SV_TessFactor            3   x           3 QUADEDGE   float   x   
                // SV_InsideTessFactor      0   x           4  QUADINT   float   x   
                // SV_InsideTessFactor      1   x           5  QUADINT   float   x   
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                // TEXCOORD                 1     zw        1     NONE   float     zw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                // Tessellation Domain   # of control points
                // -------------------- --------------------
                // Quadrilateral                           4
                //
                // Tessellation Output Primitive  Partitioning Type 
                // ------------------------------ ------------------
                // Clockwise Triangles            Even Fractional   
                //
                hs_5_0
                hs_decls 
                dcl_input_control_point_count 4
                dcl_output_control_point_count 4
                dcl_tessellator_domain domain_quad
                dcl_tessellator_partitioning partitioning_fractional_even
                dcl_tessellator_output_primitive output_triangle_cw
                dcl_hs_max_tessfactor l(64.000000)
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[32], immediateIndexed
                hs_control_point_phase 
                dcl_input vOutputControlPointID
                dcl_input v[4][0].xyz
                dcl_input v[4][1].xy
                dcl_output o0.xyz
                dcl_output o1.xy
                dcl_temps 2
                //
                // Initial variable locations:
                //   vOutputControlPointID.x <- i; 
                //   vPrim.x <- patchId; 
                //   o1.x <- <HS return value>.Tex.x; o1.y <- <HS return value>.Tex.y; 
                //   o0.x <- <HS return value>.PosW.x; o0.y <- <HS return value>.PosW.y; o0.z <- <HS return value>.PosW.z; 
                //   v[0][0].x <- p[0].PosW.x; v[0][0].y <- p[0].PosW.y; v[0][0].z <- p[0].PosW.z; 
                //   v[0][1].x <- p[0].Tex.x; v[0][1].y <- p[0].Tex.y; v[0][1].z <- p[0].BoundsY.x; v[0][1].w <- p[0].BoundsY.y; 
                //   v[1][0].x <- p[1].PosW.x; v[1][0].y <- p[1].PosW.y; v[1][0].z <- p[1].PosW.z; 
                //   v[1][1].x <- p[1].Tex.x; v[1][1].y <- p[1].Tex.y; v[1][1].z <- p[1].BoundsY.x; v[1][1].w <- p[1].BoundsY.y; 
                //   v[2][0].x <- p[2].PosW.x; v[2][0].y <- p[2].PosW.y; v[2][0].z <- p[2].PosW.z; 
                //   v[2][1].x <- p[2].Tex.x; v[2][1].y <- p[2].Tex.y; v[2][1].z <- p[2].BoundsY.x; v[2][1].w <- p[2].BoundsY.y; 
                //   v[3][0].x <- p[3].PosW.x; v[3][0].y <- p[3].PosW.y; v[3][0].z <- p[3].PosW.z; 
                //   v[3][1].x <- p[3].Tex.x; v[3][1].y <- p[3].Tex.y; v[3][1].z <- p[3].BoundsY.x; v[3][1].w <- p[3].BoundsY.y
                //
                #line 232 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r0.x, vOutputControlPointID
                mov r0.yzw, v[r0.x + 0][0].xxyz  // r0.y <- hout.PosW.x; r0.z <- hout.PosW.y; r0.w <- hout.PosW.z
                mov r1.xy, v[r0.x + 0][1].xyxx  // r1.x <- hout.Tex.x; r1.y <- hout.Tex.y
                mov o0.xyz, r0.yzwy
                mov o1.xy, r1.xyxx
                ret 
                hs_join_phase 
                dcl_input vicp[4][0].xyz
                dcl_input vicp[4][1].zw
                dcl_output_siv o0.x, finalQuadUeq0EdgeTessFactor
                dcl_output_siv o1.x, finalQuadVeq0EdgeTessFactor
                dcl_output_siv o2.x, finalQuadUeq1EdgeTessFactor
                dcl_output_siv o3.x, finalQuadVeq1EdgeTessFactor
                dcl_output_siv o4.x, finalQuadUInsideTessFactor
                dcl_output_siv o5.x, finalQuadVInsideTessFactor
                dcl_temps 7
                dcl_indexableTemp x0[6], 4
                
                #line 163
                mov r0.y, vicp[0][1].z  // r0.y <- minY
                mov r1.y, vicp[0][1].w  // r1.y <- maxY
                
                #line 168
                mov r0.xz, vicp[2][0].xxzx  // r0.x <- vMin.x; r0.z <- vMin.z
                mov r0.y, r0.y  // r0.y <- vMin.y
                mov r1.xz, vicp[1][0].xxzx  // r1.x <- vMax.x; r1.z <- vMax.z
                mov r1.y, r1.y  // r1.y <- vMax.y
                add r2.xyz, r0.xyzx, r1.xyzx
                mul r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r2.x <- boxCenter.x; r2.y <- boxCenter.y; r2.z <- boxCenter.z
                mov r0.xyz, -r0.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx
                mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r0.x <- boxExtents.x; r0.y <- boxExtents.y; r0.z <- boxExtents.z
                nop 
                mov r2.xyz, r2.xyzx
                mov r0.xyz, r0.xyzx
                mov x0[0].xyzw, cb0[26].xyzw
                mov x0[1].xyzw, cb0[27].xyzw
                mov x0[2].xyzw, cb0[28].xyzw
                mov x0[3].xyzw, cb0[29].xyzw
                mov x0[4].xyzw, cb0[30].xyzw
                mov x0[5].xyzw, cb0[31].xyzw
                
                #line 135
                mov r0.w, l(0)  // r0.w <- i
                mov r1.y, l(0)  // r1.y <- <AabbOutsideFrustumTest return value>
                mov r1.x, r0.w  // r1.x <- i
                mov r1.z, l(0)
                loop 
                  ilt r1.w, r1.x, l(6)
                  mov r1.z, l(0)
                  breakc_z r1.w
                
                #line 139
                  nop 
                  mov r3.xyz, r2.xyzx
                  mov r4.xyz, r0.xyzx
                  mov r5.xyzw, x0[r1.x + 0].xyzw
                
                #line 118
                  mov r6.xyz, -r5.xyzx
                  max r6.xyz, r5.xyzx, r6.xyzx  // r6.x <- n.x; r6.y <- n.y; r6.z <- n.z
                
                #line 121
                  dp3 r1.w, r4.xyzx, r6.xyzx  // r1.w <- r
                
                #line 124
                  mov r3.w, l(1.000000)
                  dp4 r2.w, r3.xyzw, r5.xyzw  // r2.w <- s
                
                #line 129
                  add r1.w, r1.w, r2.w
                  lt r1.w, r1.w, l(0.000000)  // r1.w <- <AabbBehindPlaneTest return value>
                
                #line 139
                  if_nz r1.w
                    mov r1.y, l(-1)
                    mov r1.z, l(-1)
                    break 
                  endif 
                
                #line 135
                  iadd r1.x, r1.x, l(1)
                
                #line 143
                  mov r1.z, r1.w
                endloop 
                if_z r1.z
                  mov r1.y, l(0)
                endif 
                
                #line 173
                if_nz r1.y
                  mov r0.x, l(0)  // r0.x <- pt.EdgeTess[0]
                  mov r0.y, l(0)  // r0.y <- pt.EdgeTess[1]
                  mov r1.x, l(0)  // r1.x <- pt.EdgeTess[2]
                  mov r1.y, l(0)  // r1.y <- pt.EdgeTess[3]
                  mov r1.z, l(0)  // r1.z <- pt.InsideTess[0]
                  mov r1.w, l(0)  // r1.w <- pt.InsideTess[1]
                  mov r1.x, r1.x  // r1.x <- <ConstantHS return value>.EdgeTess[2]
                  mov r1.y, r1.y  // r1.y <- <ConstantHS return value>.EdgeTess[3]
                  mov r1.z, r1.z  // r1.z <- <ConstantHS return value>.InsideTess[0]
                  mov r1.w, r1.w  // r1.w <- <ConstantHS return value>.InsideTess[1]
                  mov r0.x, r0.x  // r0.x <- <ConstantHS return value>.EdgeTess[0]
                  mov r0.y, r0.y  // r0.y <- <ConstantHS return value>.EdgeTess[1]
                  min o0.x, r0.x, l(64.000000)
                  min o1.x, r0.y, l(64.000000)
                  min r0.xyzw, r1.xyzw, l(64.000000, 64.000000, 64.000000, 64.000000)  // r0.x <- <ConstantHS return value>.EdgeTess[2]; r0.y <- <ConstantHS return value>.EdgeTess[3]; r0.z <- <ConstantHS return value>.InsideTess[0]; r0.w <- <ConstantHS return value>.InsideTess[1]
                  mov o2.x, r0.x
                  mov o3.x, r0.y
                  mov o4.x, r0.z
                  mov o5.x, r0.w
                  ret 
                
                #line 184
                else   // Prior locations: r0.x <- boxExtents.x; r0.y <- boxExtents.y; r0.z <- boxExtents.z
                
                #line 195
                  add r0.xyz, vicp[2][0].xyzx, vicp[0][0].xyzx
                  mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r0.x <- e0.x; r0.y <- e0.y; r0.z <- e0.z
                  add r1.xyz, vicp[1][0].xyzx, vicp[0][0].xyzx
                  mul r1.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r1.x <- e1.x; r1.y <- e1.y; r1.z <- e1.z
                  add r2.xyz, vicp[3][0].xyzx, vicp[1][0].xyzx
                  mul r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r2.x <- e2.x; r2.y <- e2.y; r2.z <- e2.z
                  add r3.xyz, vicp[3][0].xyzx, vicp[2][0].xyzx
                  mul r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r3.x <- e3.x; r3.y <- e3.y; r3.z <- e3.z
                  add r4.xyz, vicp[1][0].xyzx, vicp[0][0].xyzx
                  add r4.xyz, r4.xyzx, vicp[2][0].xyzx
                  add r4.xyz, r4.xyzx, vicp[3][0].xyzx
                  mul r4.xyz, r4.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)  // r4.x <- c.x; r4.y <- c.y; r4.z <- c.z
                  nop 
                  mov r0.xyz, r0.xyzx
                
                #line 105
                  mov r5.xyz, -cb0[12].xyzx
                  add r0.xyz, r0.xyzx, r5.xyzx
                  dp3 r0.x, r0.xyzx, r0.xyzx
                  sqrt r0.x, r0.x  // r0.x <- d
                
                #line 110
                  mov r0.y, -cb0[15].x
                  add r0.x, r0.y, r0.x
                  mov r0.y, -cb0[15].x
                  add r0.y, r0.y, cb0[15].y
                  div r0.x, r0.x, r0.y
                  max r0.x, r0.x, l(0.000000)
                  min r0.x, r0.x, l(1.000000)  // r0.x <- s
                  itof r0.y, l(2)
                  mov r0.z, -cb0[15].w
                  add r0.z, r0.z, cb0[15].z
                  mul r0.x, r0.z, r0.x
                  add r0.x, r0.x, cb0[15].w
                  log r0.y, r0.y
                  mul r0.x, r0.y, r0.x
                  exp r0.x, r0.x  // r0.x <- <CalcTessFactor return value>
                
                #line 201
                  mov r0.x, r0.x  // r0.x <- pt.EdgeTess[0]
                  nop 
                  mov r1.xyz, r1.xyzx
                
                #line 105
                  mov r0.yzw, -cb0[12].xxyz
                  add r0.yzw, r0.yyzw, r1.xxyz
                  dp3 r0.y, r0.yzwy, r0.yzwy
                  sqrt r0.y, r0.y  // r0.y <- d
                
                #line 110
                  mov r0.z, -cb0[15].x
                  add r0.y, r0.z, r0.y
                  mov r0.z, -cb0[15].x
                  add r0.z, r0.z, cb0[15].y
                  div r0.y, r0.y, r0.z
                  max r0.y, r0.y, l(0.000000)
                  min r0.y, r0.y, l(1.000000)  // r0.y <- s
                  itof r0.z, l(2)
                  mov r0.w, -cb0[15].w
                  add r0.w, r0.w, cb0[15].z
                  mul r0.y, r0.w, r0.y
                  add r0.y, r0.y, cb0[15].w
                  log r0.z, r0.z
                  mul r0.y, r0.z, r0.y
                  exp r0.y, r0.y  // r0.y <- <CalcTessFactor return value>
                
                #line 202
                  mov r0.y, r0.y  // r0.y <- pt.EdgeTess[1]
                  nop 
                  mov r2.xyz, r2.xyzx
                
                #line 105
                  mov r1.xyz, -cb0[12].xyzx
                  add r1.xyz, r1.xyzx, r2.xyzx
                  dp3 r0.z, r1.xyzx, r1.xyzx
                  sqrt r0.z, r0.z  // r0.z <- d
                
                #line 110
                  mov r0.w, -cb0[15].x
                  add r0.z, r0.w, r0.z
                  mov r0.w, -cb0[15].x
                  add r0.w, r0.w, cb0[15].y
                  div r0.z, r0.z, r0.w
                  max r0.z, r0.z, l(0.000000)
                  min r0.z, r0.z, l(1.000000)  // r0.z <- s
                  itof r0.w, l(2)
                  mov r1.x, -cb0[15].w
                  add r1.x, r1.x, cb0[15].z
                  mul r0.z, r0.z, r1.x
                  add r0.z, r0.z, cb0[15].w
                  log r0.w, r0.w
                  mul r0.z, r0.w, r0.z
                  exp r1.x, r0.z  // r1.x <- <CalcTessFactor return value>
                
                #line 203
                  mov r1.x, r1.x  // r1.x <- pt.EdgeTess[2]
                  nop 
                  mov r3.xyz, r3.xyzx
                
                #line 105
                  mov r2.xyz, -cb0[12].xyzx
                  add r2.xyz, r2.xyzx, r3.xyzx
                  dp3 r0.z, r2.xyzx, r2.xyzx
                  sqrt r0.z, r0.z  // r0.z <- d
                
                #line 110
                  mov r0.w, -cb0[15].x
                  add r0.z, r0.w, r0.z
                  mov r0.w, -cb0[15].x
                  add r0.w, r0.w, cb0[15].y
                  div r0.z, r0.z, r0.w
                  max r0.z, r0.z, l(0.000000)
                  min r0.z, r0.z, l(1.000000)  // r0.z <- s
                  itof r0.w, l(2)
                  mov r2.x, -cb0[15].w
                  add r2.x, r2.x, cb0[15].z
                  mul r0.z, r0.z, r2.x
                  add r0.z, r0.z, cb0[15].w
                  log r0.w, r0.w
                  mul r0.z, r0.w, r0.z
                  exp r1.y, r0.z  // r1.y <- <CalcTessFactor return value>
                
                #line 204
                  mov r1.y, r1.y  // r1.y <- pt.EdgeTess[3]
                  nop 
                  mov r4.xyz, r4.xyzx
                
                #line 105
                  mov r2.xyz, -cb0[12].xyzx
                  add r2.xyz, r2.xyzx, r4.xyzx
                  dp3 r0.z, r2.xyzx, r2.xyzx
                  sqrt r0.z, r0.z  // r0.z <- d
                
                #line 110
                  mov r0.w, -cb0[15].x
                  add r0.z, r0.w, r0.z
                  mov r0.w, -cb0[15].x
                  add r0.w, r0.w, cb0[15].y
                  div r0.z, r0.z, r0.w
                  max r0.z, r0.z, l(0.000000)
                  min r0.z, r0.z, l(1.000000)  // r0.z <- s
                  itof r0.w, l(2)
                  mov r2.x, -cb0[15].w
                  add r2.x, r2.x, cb0[15].z
                  mul r0.z, r0.z, r2.x
                  add r0.z, r0.z, cb0[15].w
                  log r0.w, r0.w
                  mul r0.z, r0.w, r0.z
                  exp r1.w, r0.z  // r1.w <- <CalcTessFactor return value>
                  mov r1.z, r1.w  // r1.z <- <CalcTessFactor return value>
                
                #line 206
                  mov r1.z, r1.z  // r1.z <- pt.InsideTess[0]
                  mov r1.w, r1.w  // r1.w <- pt.InsideTess[1]
                  mov r1.x, r1.x  // r1.x <- <ConstantHS return value>.EdgeTess[2]
                  mov r1.y, r1.y  // r1.y <- <ConstantHS return value>.EdgeTess[3]
                  mov r1.z, r1.z  // r1.z <- <ConstantHS return value>.InsideTess[0]
                  mov r1.w, r1.w  // r1.w <- <ConstantHS return value>.InsideTess[1]
                  mov r0.x, r0.x  // r0.x <- <ConstantHS return value>.EdgeTess[0]
                  mov r0.y, r0.y  // r0.y <- <ConstantHS return value>.EdgeTess[1]
                  min o0.x, r0.x, l(64.000000)  // o0.x <- <ConstantHS return value>.EdgeTess[0]
                  min o1.x, r0.y, l(64.000000)  // o1.x <- <ConstantHS return value>.EdgeTess[1]
                  min r0.xyzw, r1.xyzw, l(64.000000, 64.000000, 64.000000, 64.000000)  // r0.x <- <ConstantHS return value>.EdgeTess[2]; r0.y <- <ConstantHS return value>.EdgeTess[3]; r0.z <- <ConstantHS return value>.InsideTess[0]; r0.w <- <ConstantHS return value>.InsideTess[1]
                  mov o2.x, r0.x  // o2.x <- <ConstantHS return value>.EdgeTess[2]
                  mov o3.x, r0.y  // o3.x <- <ConstantHS return value>.EdgeTess[3]
                  mov o4.x, r0.z  // o4.x <- <ConstantHS return value>.InsideTess[0]
                  mov o5.x, r0.w  // o5.x <- <ConstantHS return value>.InsideTess[1]
                  ret 
                endif 
                ret 
                // Approximately 218 instruction slots used
                            
            };
            DomainShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   float3 gEyePosW;                   // Offset:  192 Size:    12 [unused]
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //   float gMinDist;                    // Offset:  240 Size:     4 [unused]
                //   float gMaxDist;                    // Offset:  244 Size:     4 [unused]
                //   float gMinTess;                    // Offset:  248 Size:     4 [unused]
                //   float gMaxTess;                    // Offset:  252 Size:     4 [unused]
                //   float gTexelCellSpaceU;            // Offset:  256 Size:     4 [unused]
                //   float gTexelCellSpaceV;            // Offset:  260 Size:     4 [unused]
                //   float gWorldCellSpace;             // Offset:  264 Size:     4 [unused]
                //   float2 gTexScale;                  // Offset:  272 Size:     8
                //      = 0x42480000 0x42480000 
                //   float4x4 gViewProj;                // Offset:  288 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  352 Size:    64
                //   float4 gWorldFrustumPlanes[6];     // Offset:  416 Size:    96 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  512
                //       float4 Diffuse;                // Offset:  528
                //       float4 Specular;               // Offset:  544
                //       float4 Reflect;                // Offset:  560
                //
                //   } gMaterial;                       // Offset:  512 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samHeightmap                      sampler      NA          NA    0        1
                // gHeightMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Patch Constant signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_TessFactor            0   x           0 QUADEDGE   float       
                // SV_TessFactor            1   x           1 QUADEDGE   float       
                // SV_TessFactor            2   x           2 QUADEDGE   float       
                // SV_TessFactor            3   x           3 QUADEDGE   float       
                // SV_InsideTessFactor      0   x           4  QUADINT   float       
                // SV_InsideTessFactor      1   x           5  QUADINT   float       
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   x z 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                // TEXCOORD                 1     zw        2     NONE   float     zw
                // TEXCOORD                 2   xyzw        3     NONE   float   xyzw
                //
                // Tessellation Domain   # of control points
                // -------------------- --------------------
                // Quadrilateral                           4
                //
                ds_5_0
                dcl_input_control_point_count 4
                dcl_tessellator_domain domain_quad
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[26], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input vDomain.xy
                dcl_input vicp[4][0].xz
                dcl_input vicp[4][1].xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o2.zw
                dcl_output o3.xyzw
                dcl_temps 4
                //
                // Initial variable locations:
                //   vpc0.x <- patchTess.EdgeTess[0]; 
                //   vpc1.x <- patchTess.EdgeTess[1]; 
                //   vpc2.x <- patchTess.EdgeTess[2]; 
                //   vpc3.x <- patchTess.EdgeTess[3]; 
                //   vpc4.x <- patchTess.InsideTess[0]; 
                //   vpc5.x <- patchTess.InsideTess[1]; 
                //   vDomain.x <- uv.x; vDomain.y <- uv.y; 
                //   o3.x <- <DS return value>.ShadowPosH.x; o3.y <- <DS return value>.ShadowPosH.y; o3.z <- <DS return value>.ShadowPosH.z; o3.w <- <DS return value>.ShadowPosH.w; 
                //   o2.x <- <DS return value>.Tex.x; o2.y <- <DS return value>.Tex.y; o2.z <- <DS return value>.TiledTex.x; o2.w <- <DS return value>.TiledTex.y; 
                //   o1.x <- <DS return value>.PosW.x; o1.y <- <DS return value>.PosW.y; o1.z <- <DS return value>.PosW.z; 
                //   o0.x <- <DS return value>.PosH.x; o0.y <- <DS return value>.PosH.y; o0.z <- <DS return value>.PosH.z; o0.w <- <DS return value>.PosH.w; 
                //   vicp[0][0].x <- quad[0].PosW.x; vicp[0][0].y <- quad[0].PosW.y; vicp[0][0].z <- quad[0].PosW.z; 
                //   vicp[0][1].x <- quad[0].Tex.x; vicp[0][1].y <- quad[0].Tex.y; 
                //   vicp[1][0].x <- quad[1].PosW.x; vicp[1][0].y <- quad[1].PosW.y; vicp[1][0].z <- quad[1].PosW.z; 
                //   vicp[1][1].x <- quad[1].Tex.x; vicp[1][1].y <- quad[1].Tex.y; 
                //   vicp[2][0].x <- quad[2].PosW.x; vicp[2][0].y <- quad[2].PosW.y; vicp[2][0].z <- quad[2].PosW.z; 
                //   vicp[2][1].x <- quad[2].Tex.x; vicp[2][1].y <- quad[2].Tex.y; 
                //   vicp[3][0].x <- quad[3].PosW.x; vicp[3][0].y <- quad[3].PosW.y; vicp[3][0].z <- quad[3].PosW.z; 
                //   vicp[3][1].x <- quad[3].Tex.x; vicp[3][1].y <- quad[3].Tex.y
                //
                #line 257 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r0.xy, -vicp[0][0].xzxx
                add r0.xy, r0.xyxx, vicp[1][0].xzxx
                mul r0.xy, r0.xyxx, vDomain.xxxx
                add r0.xy, r0.xyxx, vicp[0][0].xzxx
                mov r0.zw, -vicp[2][0].xxxz
                add r0.zw, r0.zzzw, vicp[3][0].xxxz
                mul r0.zw, r0.zzzw, vDomain.xxxx
                add r0.zw, r0.zzzw, vicp[2][0].xxxz
                mov r1.xy, -r0.xyxx
                add r0.zw, r0.zzzw, r1.xxxy
                mul r0.zw, r0.zzzw, vDomain.yyyy
                add r0.xz, r0.zzwz, r0.xxyx  // r0.x <- dout.PosW.x; r0.z <- dout.PosW.z
                
                #line 262
                mov r1.xy, -vicp[0][1].xyxx
                add r1.xy, r1.xyxx, vicp[1][1].xyxx
                mul r1.xy, r1.xyxx, vDomain.xxxx
                add r1.xy, r1.xyxx, vicp[0][1].xyxx
                mov r1.zw, -vicp[2][1].xxxy
                add r1.zw, r1.zzzw, vicp[3][1].xxxy
                mul r1.zw, r1.zzzw, vDomain.xxxx
                add r1.zw, r1.zzzw, vicp[2][1].xxxy
                mov r2.xy, -r1.xyxx
                add r1.zw, r1.zzzw, r2.xxxy
                mul r1.zw, r1.zzzw, vDomain.yyyy
                add r1.xy, r1.zwzz, r1.xyxx  // r1.x <- dout.Tex.x; r1.y <- dout.Tex.y
                
                #line 268
                mul r1.zw, r1.xxxy, cb0[17].xxxy  // r1.z <- dout.TiledTex.x; r1.w <- dout.TiledTex.y
                
                #line 271
                itof r2.x, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r0.y, r1.xyxx, t0.yxzw, s0, r2.x
                mov r0.y, r0.y  // r0.y <- dout.PosW.y
                
                #line 279
                mov r0.w, l(1.000000)
                dp4 r2.x, r0.xyzw, cb0[18].xyzw  // r2.x <- dout.PosH.x
                dp4 r2.y, r0.xyzw, cb0[19].xyzw  // r2.y <- dout.PosH.y
                dp4 r2.z, r0.xyzw, cb0[20].xyzw  // r2.z <- dout.PosH.z
                dp4 r2.w, r0.xyzw, cb0[21].xyzw  // r2.w <- dout.PosH.w
                
                #line 282
                dp4 r3.x, r0.xyzw, cb0[22].xyzw  // r3.x <- dout.ShadowPosH.x
                dp4 r3.y, r0.xyzw, cb0[23].xyzw  // r3.y <- dout.ShadowPosH.y
                dp4 r3.z, r0.xyzw, cb0[24].xyzw  // r3.z <- dout.ShadowPosH.z
                dp4 r3.w, r0.xyzw, cb0[25].xyzw  // r3.w <- dout.ShadowPosH.w
                mov o0.xyzw, r2.xyzw
                mov o2.xy, r1.xyxx
                mov o2.zw, r1.zzzw
                mov o3.xyzw, r3.xyzw
                mov o1.xyz, r0.xyzx
                ret 
                // Approximately 43 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //   float gMinDist;                    // Offset:  240 Size:     4 [unused]
                //   float gMaxDist;                    // Offset:  244 Size:     4 [unused]
                //   float gMinTess;                    // Offset:  248 Size:     4 [unused]
                //   float gMaxTess;                    // Offset:  252 Size:     4 [unused]
                //   float gTexelCellSpaceU;            // Offset:  256 Size:     4
                //   float gTexelCellSpaceV;            // Offset:  260 Size:     4
                //   float gWorldCellSpace;             // Offset:  264 Size:     4
                //   float2 gTexScale;                  // Offset:  272 Size:     8 [unused]
                //      = 0x42480000 0x42480000 
                //   float4x4 gViewProj;                // Offset:  288 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  352 Size:    64 [unused]
                //   float4 gWorldFrustumPlanes[6];     // Offset:  416 Size:    96 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  512
                //       float4 Diffuse;                // Offset:  528
                //       float4 Specular;               // Offset:  544
                //       float4 Reflect;                // Offset:  560
                //
                //   } gMaterial;                       // Offset:  512 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samHeightmap                      sampler      NA          NA    1        1
                // samShadow                       sampler_c      NA          NA    2        1
                // gLayerMapArray                    texture  float4     2darray    0        1
                // gBlendMap                         texture  float4          2d    1        1
                // gHeightMap                        texture  float4          2d    2        1
                // gShadowMap                        texture  float4          2d    3        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                // TEXCOORD                 1     zw        2     NONE   float     zw
                // TEXCOORD                 2   xyzw        3     NONE   float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[35], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_default
                dcl_sampler s2, mode_comparison
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_resource_texture2d (float,float,float,float) t3
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xy
                dcl_input_ps linear v2.zw
                dcl_input_ps linear v3.xyzw
                dcl_output o0.xyzw
                dcl_temps 15
                dcl_indexableTemp x0[9], 4
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
                //   v2.x <- pin.Tex.x; v2.y <- pin.Tex.y; v2.z <- pin.TiledTex.x; v2.w <- pin.TiledTex.y; 
                //   v3.x <- pin.ShadowPosH.x; v3.y <- pin.ShadowPosH.y; v3.z <- pin.ShadowPosH.z; v3.w <- pin.ShadowPosH.w; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 226 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\LightHelper.fx"
                mov r0.x, l(0.000488)  // r0.x <- SMAP_DX
                
                #line 294 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r1.x, -cb0[16].x
                mov r1.y, l(0)
                add r1.xy, r1.xyxx, v2.xyxx  // r1.x <- leftTex.x; r1.y <- leftTex.y
                mov r2.x, cb0[16].x
                mov r2.y, l(0)
                add r1.zw, r2.xxxy, v2.xxxy  // r1.z <- rightTex.x; r1.w <- rightTex.y
                mov r2.x, l(0)
                mov r2.y, cb0[16].y
                add r2.xy, r2.xyxx, v2.xyxx  // r2.x <- bottomTex.x; r2.y <- bottomTex.y
                mov r3.y, -cb0[16].y
                mov r3.x, l(0)
                add r2.zw, r3.xxxy, v2.xxxy  // r2.z <- topTex.x; r2.w <- topTex.y
                itof r3.x, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t2.xyzw, s1, r3.x
                mov r1.x, r1.x  // r1.x <- leftY
                itof r1.y, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r1.y, r1.zwzz, t2.yxzw, s1, r1.y
                mov r1.y, r1.y  // r1.y <- rightY
                itof r1.z, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r1.z, r2.xyxx, t2.yzxw, s1, r1.z
                mov r1.z, r1.z  // r1.z <- bottomY
                itof r1.w, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r1.w, r2.zwzz, t2.yzwx, s1, r1.w
                mov r1.w, r1.w  // r1.w <- topY
                mul r2.y, cb0[16].z, l(2.000000)
                mov r1.x, -r1.x
                add r2.z, r1.x, r1.y
                mov r2.x, l(0)
                dp3 r1.x, r2.xyzx, r2.xyzx
                rsq r1.x, r1.x
                mul r2.xyz, r1.xxxx, r2.xyzx  // r2.x <- tangent.z; r2.y <- tangent.x; r2.z <- tangent.y
                
                #line 305
                mov r1.x, -r1.w
                add r1.x, r1.x, r1.z
                mul r1.y, cb0[16].z, l(-2.000000)
                mov r1.z, l(0)
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r1.w, r1.w
                mul r1.xyz, r1.wwww, r1.xyzx  // r1.x <- bitan.y; r1.y <- bitan.z; r1.z <- bitan.x
                mul r3.xyz, r1.yzxy, r2.zxyz
                mul r1.xyz, r1.xyzx, r2.xyzx
                mov r1.xyz, -r1.xyzx
                add r1.xyz, r1.xyzx, r3.xyzx  // r1.x <- normalW.x; r1.y <- normalW.y; r1.z <- normalW.z
                
                #line 310
                mov r2.xyz, -v1.xyzx
                add r2.xyz, r2.xyzx, cb0[12].xyzx  // r2.x <- toEye.x; r2.y <- toEye.y; r2.z <- toEye.z
                
                #line 313
                dp3 r1.w, r2.xyzx, r2.xyzx
                sqrt r1.w, r1.w  // r1.w <- distToEye
                
                #line 316
                div r2.xyz, r2.xyzx, r1.wwww
                
                #line 323
                mov r3.xy, v2.zwzz
                mov r3.z, l(0)
                sample_indexable(texture2darray)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0  // r3.x <- c0.x; r3.y <- c0.y; r3.z <- c0.z; r3.w <- c0.w
                mov r4.xy, v2.zwzz
                mov r4.z, l(1.000000)
                sample_indexable(texture2darray)(float,float,float,float) r4.xyzw, r4.xyzx, t0.xyzw, s0  // r4.x <- c1.x; r4.y <- c1.y; r4.z <- c1.z; r4.w <- c1.w
                mov r5.xy, v2.zwzz
                mov r5.z, l(2.000000)
                sample_indexable(texture2darray)(float,float,float,float) r5.xyzw, r5.xyzx, t0.xyzw, s0  // r5.x <- c2.x; r5.y <- c2.y; r5.z <- c2.z; r5.w <- c2.w
                mov r6.xy, v2.zwzz
                mov r6.z, l(3.000000)
                sample_indexable(texture2darray)(float,float,float,float) r6.xyzw, r6.xyzx, t0.xyzw, s0  // r6.x <- c3.x; r6.y <- c3.y; r6.z <- c3.z; r6.w <- c3.w
                mov r7.xy, v2.zwzz
                mov r7.z, l(4.000000)
                sample_indexable(texture2darray)(float,float,float,float) r7.xyzw, r7.xyzx, t0.xyzw, s0  // r7.x <- c4.x; r7.y <- c4.y; r7.z <- c4.z; r7.w <- c4.w
                
                #line 330
                sample_indexable(texture2d)(float,float,float,float) r8.xyzw, v2.xyxx, t1.xyzw, s0  // r8.x <- t.x; r8.y <- t.y; r8.z <- t.z; r8.w <- t.w
                
                #line 333
                mov r3.xyzw, r3.xyzw  // r3.x <- texColor.x; r3.y <- texColor.y; r3.z <- texColor.z; r3.w <- texColor.w
                mov r9.xyzw, -r3.xyzw
                add r4.xyzw, r4.xyzw, r9.xyzw
                mul r4.xyzw, r4.xyzw, r8.xxxx
                add r3.xyzw, r3.xyzw, r4.xyzw
                mov r4.xyzw, -r3.xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r4.xyzw, r4.xyzw, r8.yyyy
                add r3.xyzw, r3.xyzw, r4.xyzw
                mov r4.xyzw, -r3.xyzw
                add r4.xyzw, r4.xyzw, r6.xyzw
                mul r4.xyzw, r4.xyzw, r8.zzzz
                add r3.xyzw, r3.xyzw, r4.xyzw
                mov r4.xyzw, -r3.xyzw
                add r4.xyzw, r4.xyzw, r7.xyzw
                mul r4.xyzw, r4.xyzw, r8.wwww
                add r3.xyzw, r3.xyzw, r4.xyzw
                
                #line 347
                mov r4.xyzw, l(0,0,0,0)  // r4.x <- ambient.x; r4.y <- ambient.y; r4.z <- ambient.z; r4.w <- ambient.w
                mov r5.xyzw, l(0,0,0,0)  // r5.x <- diffuse.x; r5.y <- diffuse.y; r5.z <- diffuse.z; r5.w <- diffuse.w
                mov r6.xyzw, l(0,0,0,0)  // r6.x <- spec.x; r6.y <- spec.y; r6.z <- spec.z; r6.w <- spec.w
                
                #line 353
                nop 
                nop 
                nop 
                mov r7.xyzw, v3.xyzw
                
                #line 233 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\LightHelper.fx"
                div r7.xyz, r7.zxyz, r7.wwww  // r7.x <- shadowPosH.z; r7.y <- shadowPosH.x; r7.z <- shadowPosH.y
                
                #line 236
                mov r7.x, r7.x  // r7.x <- depth
                
                #line 239
                mov r0.x, r0.x  // r0.x <- dx
                mov r1.w, l(0)  // r1.w <- percentLit
                mov x0[0].xy, l(-0.000488,-0.000488,0,0)
                mov x0[1].xy, l(0,-0.000488,0,0)
                mov r0.y, l(-0.000488)
                mov x0[2].xy, r0.xyxx
                mov x0[3].xy, l(-0.000488,0,0,0)
                mov x0[4].xy, l(0,0,0,0)
                mov r0.z, l(0)
                mov x0[5].xy, r0.xzxx
                mov x0[6].xy, l(-0.000488,0.000488,0,0)
                mov x0[7].xy, l(0,0.000488,0,0)
                mov r0.w, l(0.000488)
                mov x0[8].xy, r0.xwxx
                
                #line 252
                mov r0.xy, x0[0].xyxx
                add r0.xy, r0.xyxx, r7.yzyy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t3.xxxx, s2, r7.x
                add r0.x, r0.x, r1.w  // r0.x <- percentLit
                mov r0.yz, x0[1].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[2].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[3].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[4].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[5].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[6].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[7].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[8].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                
                #line 256
                div r0.x, r0.x, l(9.000000)
                
                #line 360 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                nop 
                mov r7.xyzw, cb0[32].xyzw
                mov r8.xyzw, cb0[33].xyzw
                mov r9.xyzw, cb0[34].xyzw
                mov r10.xyzw, cb0[0].xyzw
                mov r11.xyzw, cb0[1].xyzw
                mov r12.xyzw, cb0[2].xyzw
                mov r0.yzw, cb0[3].xxyz
                mov r1.xyz, r1.xyzx
                mov r2.xyz, r2.xyzx
                
                #line 66 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\LightHelper.fx"
                mov r13.xyzw, l(0,0,0,0)  // r13.x <- diffuse.x; r13.y <- diffuse.y; r13.z <- diffuse.z; r13.w <- diffuse.w
                mov r14.xyzw, l(0,0,0,0)  // r14.x <- spec.x; r14.y <- spec.y; r14.z <- spec.z; r14.w <- spec.w
                
                #line 70
                mov r0.yzw, -r0.yyzw  // r0.y <- lightVec.x; r0.z <- lightVec.y; r0.w <- lightVec.z
                
                #line 73
                mul r7.xyzw, r7.xyzw, r10.xyzw  // r7.x <- ambient.x; r7.y <- ambient.y; r7.z <- ambient.z; r7.w <- ambient.w
                
                #line 78
                dp3 r1.w, r0.yzwy, r1.xyzx  // r1.w <- diffuseFactor
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r0.yzw, -r0.yyzw
                dp3 r10.x, r0.yzwy, r1.xyzx
                add r10.x, r10.x, r10.x
                mov r10.x, -r10.x
                mul r10.xyz, r1.xyzx, r10.xxxx
                add r0.yzw, r0.yyzw, r10.xxyz  // r0.y <- v.x; r0.z <- v.y; r0.w <- v.z
                dp3 r0.y, r0.yzwy, r2.xyzx
                max r0.y, r0.y, l(0.000000)
                log r0.y, r0.y
                mul r0.y, r0.y, r9.w
                exp r0.y, r0.y  // r0.y <- specFactor
                mul r8.xyzw, r8.xyzw, r1.wwww
                mul r8.xyzw, r11.xyzw, r8.xyzw  // r8.x <- diffuse.x; r8.y <- diffuse.y; r8.z <- diffuse.z; r8.w <- diffuse.w
                mul r9.xyzw, r9.xyzw, r0.yyyy
                mul r9.xyzw, r12.xyzw, r9.xyzw  // r9.x <- spec.x; r9.y <- spec.y; r9.z <- spec.z; r9.w <- spec.w
                movc r8.xyzw, r2.wwww, r8.xyzw, r13.xyzw
                movc r9.xyzw, r2.wwww, r9.xyzw, r14.xyzw
                
                #line 360 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r7.xyzw, r7.xyzw  // r7.x <- A.x; r7.y <- A.y; r7.z <- A.z; r7.w <- A.w
                mov r8.xyzw, r8.xyzw  // r8.x <- D.x; r8.y <- D.y; r8.z <- D.z; r8.w <- D.w
                mov r9.xyzw, r9.xyzw  // r9.x <- S.x; r9.y <- S.y; r9.z <- S.z; r9.w <- S.w
                
                #line 363
                add r4.xyzw, r4.xyzw, r7.xyzw
                mul r7.xyzw, r0.xxxx, r8.xyzw
                add r5.xyzw, r5.xyzw, r7.xyzw
                mul r0.xyzw, r0.xxxx, r9.xyzw
                add r0.xyzw, r0.xyzw, r6.xyzw  // r0.x <- spec.x; r0.y <- spec.y; r0.z <- spec.z; r0.w <- spec.w
                
                #line 360
                nop 
                mov r6.xyzw, cb0[32].xyzw  // r6.x <- mat.Ambient.x; r6.y <- mat.Ambient.y; r6.z <- mat.Ambient.z; r6.w <- mat.Ambient.w
                mov r7.xyzw, cb0[33].xyzw  // r7.x <- mat.Diffuse.x; r7.y <- mat.Diffuse.y; r7.z <- mat.Diffuse.z; r7.w <- mat.Diffuse.w
                mov r8.xyzw, cb0[34].xyzw  // r8.x <- mat.Specular.x; r8.y <- mat.Specular.y; r8.z <- mat.Specular.z; r8.w <- mat.Specular.w
                mov r9.xyzw, cb0[4].xyzw  // r9.x <- L.Ambient.x; r9.y <- L.Ambient.y; r9.z <- L.Ambient.z; r9.w <- L.Ambient.w
                mov r10.xyzw, cb0[5].xyzw  // r10.x <- L.Diffuse.x; r10.y <- L.Diffuse.y; r10.z <- L.Diffuse.z; r10.w <- L.Diffuse.w
                mov r11.xyzw, cb0[6].xyzw  // r11.x <- L.Specular.x; r11.y <- L.Specular.y; r11.z <- L.Specular.z; r11.w <- L.Specular.w
                mov r12.xyz, cb0[7].xyzx  // r12.x <- L.Direction.x; r12.y <- L.Direction.y; r12.z <- L.Direction.z
                
                #line 66 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\LightHelper.fx"
                mov r13.xyzw, l(0,0,0,0)  // r13.x <- diffuse.x; r13.y <- diffuse.y; r13.z <- diffuse.z; r13.w <- diffuse.w
                mov r14.xyzw, l(0,0,0,0)  // r14.x <- spec.x; r14.y <- spec.y; r14.z <- spec.z; r14.w <- spec.w
                
                #line 70
                mov r12.xyz, -r12.xyzx  // r12.x <- lightVec.x; r12.y <- lightVec.y; r12.z <- lightVec.z
                
                #line 73
                mul r6.xyzw, r6.xyzw, r9.xyzw  // r6.x <- ambient.x; r6.y <- ambient.y; r6.z <- ambient.z; r6.w <- ambient.w
                
                #line 78
                dp3 r1.w, r12.xyzx, r1.xyzx
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r9.xyz, -r12.xyzx
                dp3 r9.w, r9.xyzx, r1.xyzx
                add r9.w, r9.w, r9.w
                mov r9.w, -r9.w
                mul r12.xyz, r1.xyzx, r9.wwww
                add r9.xyz, r9.xyzx, r12.xyzx  // r9.x <- v.x; r9.y <- v.y; r9.z <- v.z
                dp3 r9.x, r9.xyzx, r2.xyzx
                max r9.x, r9.x, l(0.000000)
                log r9.x, r9.x
                mul r9.x, r8.w, r9.x
                exp r9.x, r9.x  // r9.x <- specFactor
                mul r7.xyzw, r7.xyzw, r1.wwww
                mul r7.xyzw, r10.xyzw, r7.xyzw  // r7.x <- diffuse.x; r7.y <- diffuse.y; r7.z <- diffuse.z; r7.w <- diffuse.w
                mul r8.xyzw, r8.xyzw, r9.xxxx
                mul r8.xyzw, r11.xyzw, r8.xyzw  // r8.x <- spec.x; r8.y <- spec.y; r8.z <- spec.z; r8.w <- spec.w
                movc r7.xyzw, r2.wwww, r7.xyzw, r13.xyzw
                movc r8.xyzw, r2.wwww, r8.xyzw, r14.xyzw
                
                #line 360 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r6.xyzw, r6.xyzw  // r6.x <- A.x; r6.y <- A.y; r6.z <- A.z; r6.w <- A.w
                mov r7.xyzw, r7.xyzw  // r7.x <- D.x; r7.y <- D.y; r7.z <- D.z; r7.w <- D.w
                mov r8.xyzw, r8.xyzw  // r8.x <- S.x; r8.y <- S.y; r8.z <- S.z; r8.w <- S.w
                
                #line 363
                add r4.xyzw, r4.xyzw, r6.xyzw
                mul r6.xyzw, r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
                add r5.xyzw, r5.xyzw, r6.xyzw
                mul r6.xyzw, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
                add r0.xyzw, r0.xyzw, r6.xyzw
                
                #line 360
                nop 
                mov r6.xyzw, cb0[32].xyzw  // r6.x <- mat.Ambient.x; r6.y <- mat.Ambient.y; r6.z <- mat.Ambient.z; r6.w <- mat.Ambient.w
                mov r7.xyzw, cb0[33].xyzw  // r7.x <- mat.Diffuse.x; r7.y <- mat.Diffuse.y; r7.z <- mat.Diffuse.z; r7.w <- mat.Diffuse.w
                mov r8.xyzw, cb0[34].xyzw  // r8.x <- mat.Specular.x; r8.y <- mat.Specular.y; r8.z <- mat.Specular.z; r8.w <- mat.Specular.w
                mov r9.xyzw, cb0[8].xyzw  // r9.x <- L.Ambient.x; r9.y <- L.Ambient.y; r9.z <- L.Ambient.z; r9.w <- L.Ambient.w
                mov r10.xyzw, cb0[9].xyzw
                mov r11.xyzw, cb0[10].xyzw
                mov r12.xyz, cb0[11].xyzx  // r12.x <- L.Direction.x; r12.y <- L.Direction.y; r12.z <- L.Direction.z
                
                #line 66 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\LightHelper.fx"
                mov r13.xyzw, l(0,0,0,0)  // r13.x <- diffuse.x; r13.y <- diffuse.y; r13.z <- diffuse.z; r13.w <- diffuse.w
                mov r14.xyzw, l(0,0,0,0)  // r14.x <- spec.x; r14.y <- spec.y; r14.z <- spec.z; r14.w <- spec.w
                
                #line 70
                mov r12.xyz, -r12.xyzx  // r12.x <- lightVec.x; r12.y <- lightVec.y; r12.z <- lightVec.z
                
                #line 73
                mul r6.xyzw, r6.xyzw, r9.xyzw  // r6.x <- ambient.x; r6.y <- ambient.y; r6.z <- ambient.z; r6.w <- ambient.w
                
                #line 78
                dp3 r1.w, r12.xyzx, r1.xyzx
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r9.xyz, -r12.xyzx
                dp3 r9.w, r9.xyzx, r1.xyzx
                add r9.w, r9.w, r9.w
                mov r9.w, -r9.w
                mul r1.xyz, r1.xyzx, r9.wwww
                add r1.xyz, r9.xyzx, r1.xyzx  // r1.x <- v.x; r1.y <- v.y; r1.z <- v.z
                dp3 r1.x, r1.xyzx, r2.xyzx
                max r1.x, r1.x, l(0.000000)
                log r1.x, r1.x
                mul r1.x, r1.x, r8.w
                exp r1.x, r1.x  // r1.x <- specFactor
                mul r7.xyzw, r7.xyzw, r1.wwww
                mul r7.xyzw, r10.xyzw, r7.xyzw  // r7.x <- diffuse.x; r7.y <- diffuse.y; r7.z <- diffuse.z; r7.w <- diffuse.w
                mul r1.xyzw, r8.xyzw, r1.xxxx
                mul r1.xyzw, r11.xyzw, r1.xyzw  // r1.x <- spec.x; r1.y <- spec.y; r1.z <- spec.z; r1.w <- spec.w
                movc r7.xyzw, r2.wwww, r7.xyzw, r13.xyzw
                movc r1.xyzw, r2.wwww, r1.xyzw, r14.xyzw
                
                #line 360 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r6.xyzw, r6.xyzw  // r6.x <- A.x; r6.y <- A.y; r6.z <- A.z; r6.w <- A.w
                mov r7.xyzw, r7.xyzw  // r7.x <- D.x; r7.y <- D.y; r7.z <- D.z; r7.w <- D.w
                mov r1.xyzw, r1.xyzw  // r1.x <- S.x; r1.y <- S.y; r1.z <- S.z; r1.w <- S.w
                
                #line 363
                add r2.xyzw, r4.xyzw, r6.xyzw  // r2.x <- ambient.x; r2.y <- ambient.y; r2.z <- ambient.z; r2.w <- ambient.w
                mul r4.xyzw, r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
                add r4.xyzw, r4.xyzw, r5.xyzw  // r4.x <- diffuse.x; r4.y <- diffuse.y; r4.z <- diffuse.z; r4.w <- diffuse.w
                mul r1.xyzw, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
                add r0.xyzw, r0.xyzw, r1.xyzw
                
                #line 368
                add r1.xyzw, r2.xyzw, r4.xyzw
                mul r1.xyzw, r1.xyzw, r3.xyzw
                add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- litColor.x; r0.y <- litColor.y; r0.z <- litColor.z; r0.w <- litColor.w
                
                #line 383
                mov o0.xyzw, r0.xyzw
                ret 
                // Approximately 265 instruction slots used
                            
            };
        }

    }

    technique11 Light1Fog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samHeightmap                      sampler      NA          NA    0        1
                // gHeightMap                        texture  float4          2d    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   x z 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                // TEXCOORD                 1   xy          2     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                // TEXCOORD                 1     zw        1     NONE   float     zw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input v0.xz
                dcl_input v1.xy
                dcl_input v2.xy
                dcl_output o0.xyz
                dcl_output o1.xy
                dcl_output o1.zw
                dcl_temps 2
                //
                // Initial variable locations:
                //   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
                //   v1.x <- vin.Tex.x; v1.y <- vin.Tex.y; 
                //   v2.x <- vin.BoundsY.x; v2.y <- vin.BoundsY.y; 
                //   o1.x <- <VS return value>.Tex.x; o1.y <- <VS return value>.Tex.y; o1.z <- <VS return value>.BoundsY.x; o1.w <- <VS return value>.BoundsY.y; 
                //   o0.x <- <VS return value>.PosW.x; o0.y <- <VS return value>.PosW.y; o0.z <- <VS return value>.PosW.z
                //
                #line 90 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r0.xy, v0.xzxx  // r0.x <- vout.PosW.x; r0.y <- vout.PosW.z
                
                #line 94
                itof r0.z, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r0.z, v1.xyxx, t0.yzxw, s0, r0.z
                mov r0.z, r0.z  // r0.z <- vout.PosW.y
                
                #line 97
                mov r1.xy, v1.xyxx  // r1.x <- vout.Tex.x; r1.y <- vout.Tex.y
                mov r1.zw, v2.xxxy  // r1.z <- vout.BoundsY.x; r1.w <- vout.BoundsY.y
                mov o1.xy, r1.xyxx
                mov o1.zw, r1.zzzw
                mov o0.xz, r0.xxyx
                mov o0.y, r0.z
                ret 
                // Approximately 11 instruction slots used
                            
            };
            HullShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //   float gMinDist;                    // Offset:  240 Size:     4
                //   float gMaxDist;                    // Offset:  244 Size:     4
                //   float gMinTess;                    // Offset:  248 Size:     4
                //   float gMaxTess;                    // Offset:  252 Size:     4
                //   float gTexelCellSpaceU;            // Offset:  256 Size:     4 [unused]
                //   float gTexelCellSpaceV;            // Offset:  260 Size:     4 [unused]
                //   float gWorldCellSpace;             // Offset:  264 Size:     4 [unused]
                //   float2 gTexScale;                  // Offset:  272 Size:     8 [unused]
                //      = 0x42480000 0x42480000 
                //   float4x4 gViewProj;                // Offset:  288 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  352 Size:    64 [unused]
                //   float4 gWorldFrustumPlanes[6];     // Offset:  416 Size:    96
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  512
                //       float4 Diffuse;                // Offset:  528
                //       float4 Specular;               // Offset:  544
                //       float4 Reflect;                // Offset:  560
                //
                //   } gMaterial;                       // Offset:  512 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Patch Constant signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_TessFactor            0   x           0 QUADEDGE   float   x   
                // SV_TessFactor            1   x           1 QUADEDGE   float   x   
                // SV_TessFactor            2   x           2 QUADEDGE   float   x   
                // SV_TessFactor            3   x           3 QUADEDGE   float   x   
                // SV_InsideTessFactor      0   x           4  QUADINT   float   x   
                // SV_InsideTessFactor      1   x           5  QUADINT   float   x   
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                // TEXCOORD                 1     zw        1     NONE   float     zw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                // Tessellation Domain   # of control points
                // -------------------- --------------------
                // Quadrilateral                           4
                //
                // Tessellation Output Primitive  Partitioning Type 
                // ------------------------------ ------------------
                // Clockwise Triangles            Even Fractional   
                //
                hs_5_0
                hs_decls 
                dcl_input_control_point_count 4
                dcl_output_control_point_count 4
                dcl_tessellator_domain domain_quad
                dcl_tessellator_partitioning partitioning_fractional_even
                dcl_tessellator_output_primitive output_triangle_cw
                dcl_hs_max_tessfactor l(64.000000)
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[32], immediateIndexed
                hs_control_point_phase 
                dcl_input vOutputControlPointID
                dcl_input v[4][0].xyz
                dcl_input v[4][1].xy
                dcl_output o0.xyz
                dcl_output o1.xy
                dcl_temps 2
                //
                // Initial variable locations:
                //   vOutputControlPointID.x <- i; 
                //   vPrim.x <- patchId; 
                //   o1.x <- <HS return value>.Tex.x; o1.y <- <HS return value>.Tex.y; 
                //   o0.x <- <HS return value>.PosW.x; o0.y <- <HS return value>.PosW.y; o0.z <- <HS return value>.PosW.z; 
                //   v[0][0].x <- p[0].PosW.x; v[0][0].y <- p[0].PosW.y; v[0][0].z <- p[0].PosW.z; 
                //   v[0][1].x <- p[0].Tex.x; v[0][1].y <- p[0].Tex.y; v[0][1].z <- p[0].BoundsY.x; v[0][1].w <- p[0].BoundsY.y; 
                //   v[1][0].x <- p[1].PosW.x; v[1][0].y <- p[1].PosW.y; v[1][0].z <- p[1].PosW.z; 
                //   v[1][1].x <- p[1].Tex.x; v[1][1].y <- p[1].Tex.y; v[1][1].z <- p[1].BoundsY.x; v[1][1].w <- p[1].BoundsY.y; 
                //   v[2][0].x <- p[2].PosW.x; v[2][0].y <- p[2].PosW.y; v[2][0].z <- p[2].PosW.z; 
                //   v[2][1].x <- p[2].Tex.x; v[2][1].y <- p[2].Tex.y; v[2][1].z <- p[2].BoundsY.x; v[2][1].w <- p[2].BoundsY.y; 
                //   v[3][0].x <- p[3].PosW.x; v[3][0].y <- p[3].PosW.y; v[3][0].z <- p[3].PosW.z; 
                //   v[3][1].x <- p[3].Tex.x; v[3][1].y <- p[3].Tex.y; v[3][1].z <- p[3].BoundsY.x; v[3][1].w <- p[3].BoundsY.y
                //
                #line 232 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r0.x, vOutputControlPointID
                mov r0.yzw, v[r0.x + 0][0].xxyz  // r0.y <- hout.PosW.x; r0.z <- hout.PosW.y; r0.w <- hout.PosW.z
                mov r1.xy, v[r0.x + 0][1].xyxx  // r1.x <- hout.Tex.x; r1.y <- hout.Tex.y
                mov o0.xyz, r0.yzwy
                mov o1.xy, r1.xyxx
                ret 
                hs_join_phase 
                dcl_input vicp[4][0].xyz
                dcl_input vicp[4][1].zw
                dcl_output_siv o0.x, finalQuadUeq0EdgeTessFactor
                dcl_output_siv o1.x, finalQuadVeq0EdgeTessFactor
                dcl_output_siv o2.x, finalQuadUeq1EdgeTessFactor
                dcl_output_siv o3.x, finalQuadVeq1EdgeTessFactor
                dcl_output_siv o4.x, finalQuadUInsideTessFactor
                dcl_output_siv o5.x, finalQuadVInsideTessFactor
                dcl_temps 7
                dcl_indexableTemp x0[6], 4
                
                #line 163
                mov r0.y, vicp[0][1].z  // r0.y <- minY
                mov r1.y, vicp[0][1].w  // r1.y <- maxY
                
                #line 168
                mov r0.xz, vicp[2][0].xxzx  // r0.x <- vMin.x; r0.z <- vMin.z
                mov r0.y, r0.y  // r0.y <- vMin.y
                mov r1.xz, vicp[1][0].xxzx  // r1.x <- vMax.x; r1.z <- vMax.z
                mov r1.y, r1.y  // r1.y <- vMax.y
                add r2.xyz, r0.xyzx, r1.xyzx
                mul r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r2.x <- boxCenter.x; r2.y <- boxCenter.y; r2.z <- boxCenter.z
                mov r0.xyz, -r0.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx
                mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r0.x <- boxExtents.x; r0.y <- boxExtents.y; r0.z <- boxExtents.z
                nop 
                mov r2.xyz, r2.xyzx
                mov r0.xyz, r0.xyzx
                mov x0[0].xyzw, cb0[26].xyzw
                mov x0[1].xyzw, cb0[27].xyzw
                mov x0[2].xyzw, cb0[28].xyzw
                mov x0[3].xyzw, cb0[29].xyzw
                mov x0[4].xyzw, cb0[30].xyzw
                mov x0[5].xyzw, cb0[31].xyzw
                
                #line 135
                mov r0.w, l(0)  // r0.w <- i
                mov r1.y, l(0)  // r1.y <- <AabbOutsideFrustumTest return value>
                mov r1.x, r0.w  // r1.x <- i
                mov r1.z, l(0)
                loop 
                  ilt r1.w, r1.x, l(6)
                  mov r1.z, l(0)
                  breakc_z r1.w
                
                #line 139
                  nop 
                  mov r3.xyz, r2.xyzx
                  mov r4.xyz, r0.xyzx
                  mov r5.xyzw, x0[r1.x + 0].xyzw
                
                #line 118
                  mov r6.xyz, -r5.xyzx
                  max r6.xyz, r5.xyzx, r6.xyzx  // r6.x <- n.x; r6.y <- n.y; r6.z <- n.z
                
                #line 121
                  dp3 r1.w, r4.xyzx, r6.xyzx  // r1.w <- r
                
                #line 124
                  mov r3.w, l(1.000000)
                  dp4 r2.w, r3.xyzw, r5.xyzw  // r2.w <- s
                
                #line 129
                  add r1.w, r1.w, r2.w
                  lt r1.w, r1.w, l(0.000000)  // r1.w <- <AabbBehindPlaneTest return value>
                
                #line 139
                  if_nz r1.w
                    mov r1.y, l(-1)
                    mov r1.z, l(-1)
                    break 
                  endif 
                
                #line 135
                  iadd r1.x, r1.x, l(1)
                
                #line 143
                  mov r1.z, r1.w
                endloop 
                if_z r1.z
                  mov r1.y, l(0)
                endif 
                
                #line 173
                if_nz r1.y
                  mov r0.x, l(0)  // r0.x <- pt.EdgeTess[0]
                  mov r0.y, l(0)  // r0.y <- pt.EdgeTess[1]
                  mov r1.x, l(0)  // r1.x <- pt.EdgeTess[2]
                  mov r1.y, l(0)  // r1.y <- pt.EdgeTess[3]
                  mov r1.z, l(0)  // r1.z <- pt.InsideTess[0]
                  mov r1.w, l(0)  // r1.w <- pt.InsideTess[1]
                  mov r1.x, r1.x  // r1.x <- <ConstantHS return value>.EdgeTess[2]
                  mov r1.y, r1.y  // r1.y <- <ConstantHS return value>.EdgeTess[3]
                  mov r1.z, r1.z  // r1.z <- <ConstantHS return value>.InsideTess[0]
                  mov r1.w, r1.w  // r1.w <- <ConstantHS return value>.InsideTess[1]
                  mov r0.x, r0.x  // r0.x <- <ConstantHS return value>.EdgeTess[0]
                  mov r0.y, r0.y  // r0.y <- <ConstantHS return value>.EdgeTess[1]
                  min o0.x, r0.x, l(64.000000)
                  min o1.x, r0.y, l(64.000000)
                  min r0.xyzw, r1.xyzw, l(64.000000, 64.000000, 64.000000, 64.000000)  // r0.x <- <ConstantHS return value>.EdgeTess[2]; r0.y <- <ConstantHS return value>.EdgeTess[3]; r0.z <- <ConstantHS return value>.InsideTess[0]; r0.w <- <ConstantHS return value>.InsideTess[1]
                  mov o2.x, r0.x
                  mov o3.x, r0.y
                  mov o4.x, r0.z
                  mov o5.x, r0.w
                  ret 
                
                #line 184
                else   // Prior locations: r0.x <- boxExtents.x; r0.y <- boxExtents.y; r0.z <- boxExtents.z
                
                #line 195
                  add r0.xyz, vicp[2][0].xyzx, vicp[0][0].xyzx
                  mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r0.x <- e0.x; r0.y <- e0.y; r0.z <- e0.z
                  add r1.xyz, vicp[1][0].xyzx, vicp[0][0].xyzx
                  mul r1.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r1.x <- e1.x; r1.y <- e1.y; r1.z <- e1.z
                  add r2.xyz, vicp[3][0].xyzx, vicp[1][0].xyzx
                  mul r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r2.x <- e2.x; r2.y <- e2.y; r2.z <- e2.z
                  add r3.xyz, vicp[3][0].xyzx, vicp[2][0].xyzx
                  mul r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r3.x <- e3.x; r3.y <- e3.y; r3.z <- e3.z
                  add r4.xyz, vicp[1][0].xyzx, vicp[0][0].xyzx
                  add r4.xyz, r4.xyzx, vicp[2][0].xyzx
                  add r4.xyz, r4.xyzx, vicp[3][0].xyzx
                  mul r4.xyz, r4.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)  // r4.x <- c.x; r4.y <- c.y; r4.z <- c.z
                  nop 
                  mov r0.xyz, r0.xyzx
                
                #line 105
                  mov r5.xyz, -cb0[12].xyzx
                  add r0.xyz, r0.xyzx, r5.xyzx
                  dp3 r0.x, r0.xyzx, r0.xyzx
                  sqrt r0.x, r0.x  // r0.x <- d
                
                #line 110
                  mov r0.y, -cb0[15].x
                  add r0.x, r0.y, r0.x
                  mov r0.y, -cb0[15].x
                  add r0.y, r0.y, cb0[15].y
                  div r0.x, r0.x, r0.y
                  max r0.x, r0.x, l(0.000000)
                  min r0.x, r0.x, l(1.000000)  // r0.x <- s
                  itof r0.y, l(2)
                  mov r0.z, -cb0[15].w
                  add r0.z, r0.z, cb0[15].z
                  mul r0.x, r0.z, r0.x
                  add r0.x, r0.x, cb0[15].w
                  log r0.y, r0.y
                  mul r0.x, r0.y, r0.x
                  exp r0.x, r0.x  // r0.x <- <CalcTessFactor return value>
                
                #line 201
                  mov r0.x, r0.x  // r0.x <- pt.EdgeTess[0]
                  nop 
                  mov r1.xyz, r1.xyzx
                
                #line 105
                  mov r0.yzw, -cb0[12].xxyz
                  add r0.yzw, r0.yyzw, r1.xxyz
                  dp3 r0.y, r0.yzwy, r0.yzwy
                  sqrt r0.y, r0.y  // r0.y <- d
                
                #line 110
                  mov r0.z, -cb0[15].x
                  add r0.y, r0.z, r0.y
                  mov r0.z, -cb0[15].x
                  add r0.z, r0.z, cb0[15].y
                  div r0.y, r0.y, r0.z
                  max r0.y, r0.y, l(0.000000)
                  min r0.y, r0.y, l(1.000000)  // r0.y <- s
                  itof r0.z, l(2)
                  mov r0.w, -cb0[15].w
                  add r0.w, r0.w, cb0[15].z
                  mul r0.y, r0.w, r0.y
                  add r0.y, r0.y, cb0[15].w
                  log r0.z, r0.z
                  mul r0.y, r0.z, r0.y
                  exp r0.y, r0.y  // r0.y <- <CalcTessFactor return value>
                
                #line 202
                  mov r0.y, r0.y  // r0.y <- pt.EdgeTess[1]
                  nop 
                  mov r2.xyz, r2.xyzx
                
                #line 105
                  mov r1.xyz, -cb0[12].xyzx
                  add r1.xyz, r1.xyzx, r2.xyzx
                  dp3 r0.z, r1.xyzx, r1.xyzx
                  sqrt r0.z, r0.z  // r0.z <- d
                
                #line 110
                  mov r0.w, -cb0[15].x
                  add r0.z, r0.w, r0.z
                  mov r0.w, -cb0[15].x
                  add r0.w, r0.w, cb0[15].y
                  div r0.z, r0.z, r0.w
                  max r0.z, r0.z, l(0.000000)
                  min r0.z, r0.z, l(1.000000)  // r0.z <- s
                  itof r0.w, l(2)
                  mov r1.x, -cb0[15].w
                  add r1.x, r1.x, cb0[15].z
                  mul r0.z, r0.z, r1.x
                  add r0.z, r0.z, cb0[15].w
                  log r0.w, r0.w
                  mul r0.z, r0.w, r0.z
                  exp r1.x, r0.z  // r1.x <- <CalcTessFactor return value>
                
                #line 203
                  mov r1.x, r1.x  // r1.x <- pt.EdgeTess[2]
                  nop 
                  mov r3.xyz, r3.xyzx
                
                #line 105
                  mov r2.xyz, -cb0[12].xyzx
                  add r2.xyz, r2.xyzx, r3.xyzx
                  dp3 r0.z, r2.xyzx, r2.xyzx
                  sqrt r0.z, r0.z  // r0.z <- d
                
                #line 110
                  mov r0.w, -cb0[15].x
                  add r0.z, r0.w, r0.z
                  mov r0.w, -cb0[15].x
                  add r0.w, r0.w, cb0[15].y
                  div r0.z, r0.z, r0.w
                  max r0.z, r0.z, l(0.000000)
                  min r0.z, r0.z, l(1.000000)  // r0.z <- s
                  itof r0.w, l(2)
                  mov r2.x, -cb0[15].w
                  add r2.x, r2.x, cb0[15].z
                  mul r0.z, r0.z, r2.x
                  add r0.z, r0.z, cb0[15].w
                  log r0.w, r0.w
                  mul r0.z, r0.w, r0.z
                  exp r1.y, r0.z  // r1.y <- <CalcTessFactor return value>
                
                #line 204
                  mov r1.y, r1.y  // r1.y <- pt.EdgeTess[3]
                  nop 
                  mov r4.xyz, r4.xyzx
                
                #line 105
                  mov r2.xyz, -cb0[12].xyzx
                  add r2.xyz, r2.xyzx, r4.xyzx
                  dp3 r0.z, r2.xyzx, r2.xyzx
                  sqrt r0.z, r0.z  // r0.z <- d
                
                #line 110
                  mov r0.w, -cb0[15].x
                  add r0.z, r0.w, r0.z
                  mov r0.w, -cb0[15].x
                  add r0.w, r0.w, cb0[15].y
                  div r0.z, r0.z, r0.w
                  max r0.z, r0.z, l(0.000000)
                  min r0.z, r0.z, l(1.000000)  // r0.z <- s
                  itof r0.w, l(2)
                  mov r2.x, -cb0[15].w
                  add r2.x, r2.x, cb0[15].z
                  mul r0.z, r0.z, r2.x
                  add r0.z, r0.z, cb0[15].w
                  log r0.w, r0.w
                  mul r0.z, r0.w, r0.z
                  exp r1.w, r0.z  // r1.w <- <CalcTessFactor return value>
                  mov r1.z, r1.w  // r1.z <- <CalcTessFactor return value>
                
                #line 206
                  mov r1.z, r1.z  // r1.z <- pt.InsideTess[0]
                  mov r1.w, r1.w  // r1.w <- pt.InsideTess[1]
                  mov r1.x, r1.x  // r1.x <- <ConstantHS return value>.EdgeTess[2]
                  mov r1.y, r1.y  // r1.y <- <ConstantHS return value>.EdgeTess[3]
                  mov r1.z, r1.z  // r1.z <- <ConstantHS return value>.InsideTess[0]
                  mov r1.w, r1.w  // r1.w <- <ConstantHS return value>.InsideTess[1]
                  mov r0.x, r0.x  // r0.x <- <ConstantHS return value>.EdgeTess[0]
                  mov r0.y, r0.y  // r0.y <- <ConstantHS return value>.EdgeTess[1]
                  min o0.x, r0.x, l(64.000000)  // o0.x <- <ConstantHS return value>.EdgeTess[0]
                  min o1.x, r0.y, l(64.000000)  // o1.x <- <ConstantHS return value>.EdgeTess[1]
                  min r0.xyzw, r1.xyzw, l(64.000000, 64.000000, 64.000000, 64.000000)  // r0.x <- <ConstantHS return value>.EdgeTess[2]; r0.y <- <ConstantHS return value>.EdgeTess[3]; r0.z <- <ConstantHS return value>.InsideTess[0]; r0.w <- <ConstantHS return value>.InsideTess[1]
                  mov o2.x, r0.x  // o2.x <- <ConstantHS return value>.EdgeTess[2]
                  mov o3.x, r0.y  // o3.x <- <ConstantHS return value>.EdgeTess[3]
                  mov o4.x, r0.z  // o4.x <- <ConstantHS return value>.InsideTess[0]
                  mov o5.x, r0.w  // o5.x <- <ConstantHS return value>.InsideTess[1]
                  ret 
                endif 
                ret 
                // Approximately 218 instruction slots used
                            
            };
            DomainShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   float3 gEyePosW;                   // Offset:  192 Size:    12 [unused]
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //   float gMinDist;                    // Offset:  240 Size:     4 [unused]
                //   float gMaxDist;                    // Offset:  244 Size:     4 [unused]
                //   float gMinTess;                    // Offset:  248 Size:     4 [unused]
                //   float gMaxTess;                    // Offset:  252 Size:     4 [unused]
                //   float gTexelCellSpaceU;            // Offset:  256 Size:     4 [unused]
                //   float gTexelCellSpaceV;            // Offset:  260 Size:     4 [unused]
                //   float gWorldCellSpace;             // Offset:  264 Size:     4 [unused]
                //   float2 gTexScale;                  // Offset:  272 Size:     8
                //      = 0x42480000 0x42480000 
                //   float4x4 gViewProj;                // Offset:  288 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  352 Size:    64
                //   float4 gWorldFrustumPlanes[6];     // Offset:  416 Size:    96 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  512
                //       float4 Diffuse;                // Offset:  528
                //       float4 Specular;               // Offset:  544
                //       float4 Reflect;                // Offset:  560
                //
                //   } gMaterial;                       // Offset:  512 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samHeightmap                      sampler      NA          NA    0        1
                // gHeightMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Patch Constant signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_TessFactor            0   x           0 QUADEDGE   float       
                // SV_TessFactor            1   x           1 QUADEDGE   float       
                // SV_TessFactor            2   x           2 QUADEDGE   float       
                // SV_TessFactor            3   x           3 QUADEDGE   float       
                // SV_InsideTessFactor      0   x           4  QUADINT   float       
                // SV_InsideTessFactor      1   x           5  QUADINT   float       
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   x z 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                // TEXCOORD                 1     zw        2     NONE   float     zw
                // TEXCOORD                 2   xyzw        3     NONE   float   xyzw
                //
                // Tessellation Domain   # of control points
                // -------------------- --------------------
                // Quadrilateral                           4
                //
                ds_5_0
                dcl_input_control_point_count 4
                dcl_tessellator_domain domain_quad
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[26], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input vDomain.xy
                dcl_input vicp[4][0].xz
                dcl_input vicp[4][1].xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o2.zw
                dcl_output o3.xyzw
                dcl_temps 4
                //
                // Initial variable locations:
                //   vpc0.x <- patchTess.EdgeTess[0]; 
                //   vpc1.x <- patchTess.EdgeTess[1]; 
                //   vpc2.x <- patchTess.EdgeTess[2]; 
                //   vpc3.x <- patchTess.EdgeTess[3]; 
                //   vpc4.x <- patchTess.InsideTess[0]; 
                //   vpc5.x <- patchTess.InsideTess[1]; 
                //   vDomain.x <- uv.x; vDomain.y <- uv.y; 
                //   o3.x <- <DS return value>.ShadowPosH.x; o3.y <- <DS return value>.ShadowPosH.y; o3.z <- <DS return value>.ShadowPosH.z; o3.w <- <DS return value>.ShadowPosH.w; 
                //   o2.x <- <DS return value>.Tex.x; o2.y <- <DS return value>.Tex.y; o2.z <- <DS return value>.TiledTex.x; o2.w <- <DS return value>.TiledTex.y; 
                //   o1.x <- <DS return value>.PosW.x; o1.y <- <DS return value>.PosW.y; o1.z <- <DS return value>.PosW.z; 
                //   o0.x <- <DS return value>.PosH.x; o0.y <- <DS return value>.PosH.y; o0.z <- <DS return value>.PosH.z; o0.w <- <DS return value>.PosH.w; 
                //   vicp[0][0].x <- quad[0].PosW.x; vicp[0][0].y <- quad[0].PosW.y; vicp[0][0].z <- quad[0].PosW.z; 
                //   vicp[0][1].x <- quad[0].Tex.x; vicp[0][1].y <- quad[0].Tex.y; 
                //   vicp[1][0].x <- quad[1].PosW.x; vicp[1][0].y <- quad[1].PosW.y; vicp[1][0].z <- quad[1].PosW.z; 
                //   vicp[1][1].x <- quad[1].Tex.x; vicp[1][1].y <- quad[1].Tex.y; 
                //   vicp[2][0].x <- quad[2].PosW.x; vicp[2][0].y <- quad[2].PosW.y; vicp[2][0].z <- quad[2].PosW.z; 
                //   vicp[2][1].x <- quad[2].Tex.x; vicp[2][1].y <- quad[2].Tex.y; 
                //   vicp[3][0].x <- quad[3].PosW.x; vicp[3][0].y <- quad[3].PosW.y; vicp[3][0].z <- quad[3].PosW.z; 
                //   vicp[3][1].x <- quad[3].Tex.x; vicp[3][1].y <- quad[3].Tex.y
                //
                #line 257 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r0.xy, -vicp[0][0].xzxx
                add r0.xy, r0.xyxx, vicp[1][0].xzxx
                mul r0.xy, r0.xyxx, vDomain.xxxx
                add r0.xy, r0.xyxx, vicp[0][0].xzxx
                mov r0.zw, -vicp[2][0].xxxz
                add r0.zw, r0.zzzw, vicp[3][0].xxxz
                mul r0.zw, r0.zzzw, vDomain.xxxx
                add r0.zw, r0.zzzw, vicp[2][0].xxxz
                mov r1.xy, -r0.xyxx
                add r0.zw, r0.zzzw, r1.xxxy
                mul r0.zw, r0.zzzw, vDomain.yyyy
                add r0.xz, r0.zzwz, r0.xxyx  // r0.x <- dout.PosW.x; r0.z <- dout.PosW.z
                
                #line 262
                mov r1.xy, -vicp[0][1].xyxx
                add r1.xy, r1.xyxx, vicp[1][1].xyxx
                mul r1.xy, r1.xyxx, vDomain.xxxx
                add r1.xy, r1.xyxx, vicp[0][1].xyxx
                mov r1.zw, -vicp[2][1].xxxy
                add r1.zw, r1.zzzw, vicp[3][1].xxxy
                mul r1.zw, r1.zzzw, vDomain.xxxx
                add r1.zw, r1.zzzw, vicp[2][1].xxxy
                mov r2.xy, -r1.xyxx
                add r1.zw, r1.zzzw, r2.xxxy
                mul r1.zw, r1.zzzw, vDomain.yyyy
                add r1.xy, r1.zwzz, r1.xyxx  // r1.x <- dout.Tex.x; r1.y <- dout.Tex.y
                
                #line 268
                mul r1.zw, r1.xxxy, cb0[17].xxxy  // r1.z <- dout.TiledTex.x; r1.w <- dout.TiledTex.y
                
                #line 271
                itof r2.x, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r0.y, r1.xyxx, t0.yxzw, s0, r2.x
                mov r0.y, r0.y  // r0.y <- dout.PosW.y
                
                #line 279
                mov r0.w, l(1.000000)
                dp4 r2.x, r0.xyzw, cb0[18].xyzw  // r2.x <- dout.PosH.x
                dp4 r2.y, r0.xyzw, cb0[19].xyzw  // r2.y <- dout.PosH.y
                dp4 r2.z, r0.xyzw, cb0[20].xyzw  // r2.z <- dout.PosH.z
                dp4 r2.w, r0.xyzw, cb0[21].xyzw  // r2.w <- dout.PosH.w
                
                #line 282
                dp4 r3.x, r0.xyzw, cb0[22].xyzw  // r3.x <- dout.ShadowPosH.x
                dp4 r3.y, r0.xyzw, cb0[23].xyzw  // r3.y <- dout.ShadowPosH.y
                dp4 r3.z, r0.xyzw, cb0[24].xyzw  // r3.z <- dout.ShadowPosH.z
                dp4 r3.w, r0.xyzw, cb0[25].xyzw  // r3.w <- dout.ShadowPosH.w
                mov o0.xyzw, r2.xyzw
                mov o2.xy, r1.xyxx
                mov o2.zw, r1.zzzw
                mov o3.xyzw, r3.xyzw
                mov o1.xyz, r0.xyzx
                ret 
                // Approximately 43 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //   float gMinDist;                    // Offset:  240 Size:     4 [unused]
                //   float gMaxDist;                    // Offset:  244 Size:     4 [unused]
                //   float gMinTess;                    // Offset:  248 Size:     4 [unused]
                //   float gMaxTess;                    // Offset:  252 Size:     4 [unused]
                //   float gTexelCellSpaceU;            // Offset:  256 Size:     4
                //   float gTexelCellSpaceV;            // Offset:  260 Size:     4
                //   float gWorldCellSpace;             // Offset:  264 Size:     4
                //   float2 gTexScale;                  // Offset:  272 Size:     8 [unused]
                //      = 0x42480000 0x42480000 
                //   float4x4 gViewProj;                // Offset:  288 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  352 Size:    64 [unused]
                //   float4 gWorldFrustumPlanes[6];     // Offset:  416 Size:    96 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  512
                //       float4 Diffuse;                // Offset:  528
                //       float4 Specular;               // Offset:  544
                //       float4 Reflect;                // Offset:  560
                //
                //   } gMaterial;                       // Offset:  512 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samHeightmap                      sampler      NA          NA    1        1
                // samShadow                       sampler_c      NA          NA    2        1
                // gLayerMapArray                    texture  float4     2darray    0        1
                // gBlendMap                         texture  float4          2d    1        1
                // gHeightMap                        texture  float4          2d    2        1
                // gShadowMap                        texture  float4          2d    3        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                // TEXCOORD                 1     zw        2     NONE   float     zw
                // TEXCOORD                 2   xyzw        3     NONE   float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[35], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_default
                dcl_sampler s2, mode_comparison
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_resource_texture2d (float,float,float,float) t3
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xy
                dcl_input_ps linear v2.zw
                dcl_input_ps linear v3.xyzw
                dcl_output o0.xyzw
                dcl_temps 15
                dcl_indexableTemp x0[9], 4
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
                //   v2.x <- pin.Tex.x; v2.y <- pin.Tex.y; v2.z <- pin.TiledTex.x; v2.w <- pin.TiledTex.y; 
                //   v3.x <- pin.ShadowPosH.x; v3.y <- pin.ShadowPosH.y; v3.z <- pin.ShadowPosH.z; v3.w <- pin.ShadowPosH.w; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 226 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\LightHelper.fx"
                mov r0.x, l(0.000488)  // r0.x <- SMAP_DX
                
                #line 294 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r1.x, -cb0[16].x
                mov r1.y, l(0)
                add r1.xy, r1.xyxx, v2.xyxx  // r1.x <- leftTex.x; r1.y <- leftTex.y
                mov r2.x, cb0[16].x
                mov r2.y, l(0)
                add r1.zw, r2.xxxy, v2.xxxy  // r1.z <- rightTex.x; r1.w <- rightTex.y
                mov r2.x, l(0)
                mov r2.y, cb0[16].y
                add r2.xy, r2.xyxx, v2.xyxx  // r2.x <- bottomTex.x; r2.y <- bottomTex.y
                mov r3.y, -cb0[16].y
                mov r3.x, l(0)
                add r2.zw, r3.xxxy, v2.xxxy  // r2.z <- topTex.x; r2.w <- topTex.y
                itof r3.x, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t2.xyzw, s1, r3.x
                mov r1.x, r1.x  // r1.x <- leftY
                itof r1.y, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r1.y, r1.zwzz, t2.yxzw, s1, r1.y
                mov r1.y, r1.y  // r1.y <- rightY
                itof r1.z, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r1.z, r2.xyxx, t2.yzxw, s1, r1.z
                mov r1.z, r1.z  // r1.z <- bottomY
                itof r1.w, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r1.w, r2.zwzz, t2.yzwx, s1, r1.w
                mov r1.w, r1.w  // r1.w <- topY
                mul r2.y, cb0[16].z, l(2.000000)
                mov r1.x, -r1.x
                add r2.z, r1.x, r1.y
                mov r2.x, l(0)
                dp3 r1.x, r2.xyzx, r2.xyzx
                rsq r1.x, r1.x
                mul r2.xyz, r1.xxxx, r2.xyzx  // r2.x <- tangent.z; r2.y <- tangent.x; r2.z <- tangent.y
                
                #line 305
                mov r1.x, -r1.w
                add r1.x, r1.x, r1.z
                mul r1.y, cb0[16].z, l(-2.000000)
                mov r1.z, l(0)
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r1.w, r1.w
                mul r1.xyz, r1.wwww, r1.xyzx  // r1.x <- bitan.y; r1.y <- bitan.z; r1.z <- bitan.x
                mul r3.xyz, r1.yzxy, r2.zxyz
                mul r1.xyz, r1.xyzx, r2.xyzx
                mov r1.xyz, -r1.xyzx
                add r1.xyz, r1.xyzx, r3.xyzx  // r1.x <- normalW.x; r1.y <- normalW.y; r1.z <- normalW.z
                
                #line 310
                mov r2.xyz, -v1.xyzx
                add r2.xyz, r2.xyzx, cb0[12].xyzx  // r2.x <- toEye.x; r2.y <- toEye.y; r2.z <- toEye.z
                
                #line 313
                dp3 r1.w, r2.xyzx, r2.xyzx
                sqrt r1.w, r1.w  // r1.w <- distToEye
                
                #line 316
                div r2.xyz, r2.xyzx, r1.wwww
                
                #line 323
                mov r3.xy, v2.zwzz
                mov r3.z, l(0)
                sample_indexable(texture2darray)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0  // r3.x <- c0.x; r3.y <- c0.y; r3.z <- c0.z; r3.w <- c0.w
                mov r4.xy, v2.zwzz
                mov r4.z, l(1.000000)
                sample_indexable(texture2darray)(float,float,float,float) r4.xyzw, r4.xyzx, t0.xyzw, s0  // r4.x <- c1.x; r4.y <- c1.y; r4.z <- c1.z; r4.w <- c1.w
                mov r5.xy, v2.zwzz
                mov r5.z, l(2.000000)
                sample_indexable(texture2darray)(float,float,float,float) r5.xyzw, r5.xyzx, t0.xyzw, s0  // r5.x <- c2.x; r5.y <- c2.y; r5.z <- c2.z; r5.w <- c2.w
                mov r6.xy, v2.zwzz
                mov r6.z, l(3.000000)
                sample_indexable(texture2darray)(float,float,float,float) r6.xyzw, r6.xyzx, t0.xyzw, s0  // r6.x <- c3.x; r6.y <- c3.y; r6.z <- c3.z; r6.w <- c3.w
                mov r7.xy, v2.zwzz
                mov r7.z, l(4.000000)
                sample_indexable(texture2darray)(float,float,float,float) r7.xyzw, r7.xyzx, t0.xyzw, s0  // r7.x <- c4.x; r7.y <- c4.y; r7.z <- c4.z; r7.w <- c4.w
                
                #line 330
                sample_indexable(texture2d)(float,float,float,float) r8.xyzw, v2.xyxx, t1.xyzw, s0  // r8.x <- t.x; r8.y <- t.y; r8.z <- t.z; r8.w <- t.w
                
                #line 333
                mov r3.xyzw, r3.xyzw  // r3.x <- texColor.x; r3.y <- texColor.y; r3.z <- texColor.z; r3.w <- texColor.w
                mov r9.xyzw, -r3.xyzw
                add r4.xyzw, r4.xyzw, r9.xyzw
                mul r4.xyzw, r4.xyzw, r8.xxxx
                add r3.xyzw, r3.xyzw, r4.xyzw
                mov r4.xyzw, -r3.xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r4.xyzw, r4.xyzw, r8.yyyy
                add r3.xyzw, r3.xyzw, r4.xyzw
                mov r4.xyzw, -r3.xyzw
                add r4.xyzw, r4.xyzw, r6.xyzw
                mul r4.xyzw, r4.xyzw, r8.zzzz
                add r3.xyzw, r3.xyzw, r4.xyzw
                mov r4.xyzw, -r3.xyzw
                add r4.xyzw, r4.xyzw, r7.xyzw
                mul r4.xyzw, r4.xyzw, r8.wwww
                add r3.xyzw, r3.xyzw, r4.xyzw
                
                #line 347
                mov r4.xyzw, l(0,0,0,0)  // r4.x <- ambient.x; r4.y <- ambient.y; r4.z <- ambient.z; r4.w <- ambient.w
                mov r5.xyzw, l(0,0,0,0)  // r5.x <- diffuse.x; r5.y <- diffuse.y; r5.z <- diffuse.z; r5.w <- diffuse.w
                mov r6.xyzw, l(0,0,0,0)  // r6.x <- spec.x; r6.y <- spec.y; r6.z <- spec.z; r6.w <- spec.w
                
                #line 353
                nop 
                nop 
                nop 
                mov r7.xyzw, v3.xyzw
                
                #line 233 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\LightHelper.fx"
                div r7.xyz, r7.zxyz, r7.wwww  // r7.x <- shadowPosH.z; r7.y <- shadowPosH.x; r7.z <- shadowPosH.y
                
                #line 236
                mov r7.x, r7.x  // r7.x <- depth
                
                #line 239
                mov r0.x, r0.x  // r0.x <- dx
                mov r2.w, l(0)  // r2.w <- percentLit
                mov x0[0].xy, l(-0.000488,-0.000488,0,0)
                mov x0[1].xy, l(0,-0.000488,0,0)
                mov r0.y, l(-0.000488)
                mov x0[2].xy, r0.xyxx
                mov x0[3].xy, l(-0.000488,0,0,0)
                mov x0[4].xy, l(0,0,0,0)
                mov r0.z, l(0)
                mov x0[5].xy, r0.xzxx
                mov x0[6].xy, l(-0.000488,0.000488,0,0)
                mov x0[7].xy, l(0,0.000488,0,0)
                mov r0.w, l(0.000488)
                mov x0[8].xy, r0.xwxx
                
                #line 252
                mov r0.xy, x0[0].xyxx
                add r0.xy, r0.xyxx, r7.yzyy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t3.xxxx, s2, r7.x
                add r0.x, r0.x, r2.w  // r0.x <- percentLit
                mov r0.yz, x0[1].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[2].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[3].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[4].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[5].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[6].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[7].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[8].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                
                #line 256
                div r0.x, r0.x, l(9.000000)
                
                #line 360 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                nop 
                mov r7.xyzw, cb0[32].xyzw
                mov r8.xyzw, cb0[33].xyzw
                mov r9.xyzw, cb0[34].xyzw
                mov r10.xyzw, cb0[0].xyzw
                mov r11.xyzw, cb0[1].xyzw
                mov r12.xyzw, cb0[2].xyzw
                mov r0.yzw, cb0[3].xxyz
                mov r1.xyz, r1.xyzx
                mov r2.xyz, r2.xyzx
                
                #line 66 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\LightHelper.fx"
                mov r13.xyzw, l(0,0,0,0)  // r13.x <- diffuse.x; r13.y <- diffuse.y; r13.z <- diffuse.z; r13.w <- diffuse.w
                mov r14.xyzw, l(0,0,0,0)  // r14.x <- spec.x; r14.y <- spec.y; r14.z <- spec.z; r14.w <- spec.w
                
                #line 70
                mov r0.yzw, -r0.yyzw  // r0.y <- lightVec.x; r0.z <- lightVec.y; r0.w <- lightVec.z
                
                #line 73
                mul r7.xyzw, r7.xyzw, r10.xyzw  // r7.x <- ambient.x; r7.y <- ambient.y; r7.z <- ambient.z; r7.w <- ambient.w
                
                #line 78
                dp3 r2.w, r0.yzwy, r1.xyzx  // r2.w <- diffuseFactor
                
                #line 82
                lt r10.x, l(0.000000), r2.w
                mov r0.yzw, -r0.yyzw
                dp3 r10.y, r0.yzwy, r1.xyzx
                add r10.y, r10.y, r10.y
                mov r10.y, -r10.y
                mul r1.xyz, r1.xyzx, r10.yyyy
                add r0.yzw, r0.yyzw, r1.xxyz  // r0.y <- v.x; r0.z <- v.y; r0.w <- v.z
                dp3 r0.y, r0.yzwy, r2.xyzx
                max r0.y, r0.y, l(0.000000)
                log r0.y, r0.y
                mul r0.y, r0.y, r9.w
                exp r0.y, r0.y  // r0.y <- specFactor
                mul r2.xyzw, r8.xyzw, r2.wwww
                mul r2.xyzw, r11.xyzw, r2.xyzw  // r2.x <- diffuse.x; r2.y <- diffuse.y; r2.z <- diffuse.z; r2.w <- diffuse.w
                mul r8.xyzw, r9.xyzw, r0.yyyy
                mul r8.xyzw, r12.xyzw, r8.xyzw  // r8.x <- spec.x; r8.y <- spec.y; r8.z <- spec.z; r8.w <- spec.w
                movc r2.xyzw, r10.xxxx, r2.xyzw, r13.xyzw
                movc r8.xyzw, r10.xxxx, r8.xyzw, r14.xyzw
                
                #line 360 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r7.xyzw, r7.xyzw  // r7.x <- A.x; r7.y <- A.y; r7.z <- A.z; r7.w <- A.w
                mov r2.xyzw, r2.xyzw  // r2.x <- D.x; r2.y <- D.y; r2.z <- D.z; r2.w <- D.w
                mov r8.xyzw, r8.xyzw  // r8.x <- S.x; r8.y <- S.y; r8.z <- S.z; r8.w <- S.w
                
                #line 363
                add r4.xyzw, r4.xyzw, r7.xyzw
                mul r2.xyzw, r0.xxxx, r2.xyzw
                add r2.xyzw, r2.xyzw, r5.xyzw  // r2.x <- diffuse.x; r2.y <- diffuse.y; r2.z <- diffuse.z; r2.w <- diffuse.w
                mul r0.xyzw, r0.xxxx, r8.xyzw
                add r0.xyzw, r0.xyzw, r6.xyzw  // r0.x <- spec.x; r0.y <- spec.y; r0.z <- spec.z; r0.w <- spec.w
                
                #line 368
                add r2.xyzw, r2.xyzw, r4.xyzw
                mul r2.xyzw, r2.xyzw, r3.xyzw
                add r0.xyzw, r0.xyzw, r2.xyzw  // r0.x <- litColor.x; r0.y <- litColor.y; r0.z <- litColor.z; r0.w <- litColor.w
                
                #line 377
                mov r1.x, -cb0[12].w
                add r1.x, r1.x, r1.w
                div r1.x, r1.x, cb0[13].x
                max r1.x, r1.x, l(0.000000)
                min r1.x, r1.x, l(1.000000)  // r1.x <- fogLerp
                
                #line 380
                mov r2.xyzw, -r0.xyzw
                add r2.xyzw, r2.xyzw, cb0[14].xyzw
                mul r1.xyzw, r1.xxxx, r2.xyzw
                add r0.xyzw, r0.xyzw, r1.xyzw
                
                #line 383
                mov o0.xyzw, r0.xyzw
                ret 
                // Approximately 196 instruction slots used
                            
            };
        }

    }

    technique11 Light2Fog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samHeightmap                      sampler      NA          NA    0        1
                // gHeightMap                        texture  float4          2d    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   x z 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                // TEXCOORD                 1   xy          2     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                // TEXCOORD                 1     zw        1     NONE   float     zw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input v0.xz
                dcl_input v1.xy
                dcl_input v2.xy
                dcl_output o0.xyz
                dcl_output o1.xy
                dcl_output o1.zw
                dcl_temps 2
                //
                // Initial variable locations:
                //   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
                //   v1.x <- vin.Tex.x; v1.y <- vin.Tex.y; 
                //   v2.x <- vin.BoundsY.x; v2.y <- vin.BoundsY.y; 
                //   o1.x <- <VS return value>.Tex.x; o1.y <- <VS return value>.Tex.y; o1.z <- <VS return value>.BoundsY.x; o1.w <- <VS return value>.BoundsY.y; 
                //   o0.x <- <VS return value>.PosW.x; o0.y <- <VS return value>.PosW.y; o0.z <- <VS return value>.PosW.z
                //
                #line 90 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r0.xy, v0.xzxx  // r0.x <- vout.PosW.x; r0.y <- vout.PosW.z
                
                #line 94
                itof r0.z, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r0.z, v1.xyxx, t0.yzxw, s0, r0.z
                mov r0.z, r0.z  // r0.z <- vout.PosW.y
                
                #line 97
                mov r1.xy, v1.xyxx  // r1.x <- vout.Tex.x; r1.y <- vout.Tex.y
                mov r1.zw, v2.xxxy  // r1.z <- vout.BoundsY.x; r1.w <- vout.BoundsY.y
                mov o1.xy, r1.xyxx
                mov o1.zw, r1.zzzw
                mov o0.xz, r0.xxyx
                mov o0.y, r0.z
                ret 
                // Approximately 11 instruction slots used
                            
            };
            HullShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //   float gMinDist;                    // Offset:  240 Size:     4
                //   float gMaxDist;                    // Offset:  244 Size:     4
                //   float gMinTess;                    // Offset:  248 Size:     4
                //   float gMaxTess;                    // Offset:  252 Size:     4
                //   float gTexelCellSpaceU;            // Offset:  256 Size:     4 [unused]
                //   float gTexelCellSpaceV;            // Offset:  260 Size:     4 [unused]
                //   float gWorldCellSpace;             // Offset:  264 Size:     4 [unused]
                //   float2 gTexScale;                  // Offset:  272 Size:     8 [unused]
                //      = 0x42480000 0x42480000 
                //   float4x4 gViewProj;                // Offset:  288 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  352 Size:    64 [unused]
                //   float4 gWorldFrustumPlanes[6];     // Offset:  416 Size:    96
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  512
                //       float4 Diffuse;                // Offset:  528
                //       float4 Specular;               // Offset:  544
                //       float4 Reflect;                // Offset:  560
                //
                //   } gMaterial;                       // Offset:  512 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Patch Constant signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_TessFactor            0   x           0 QUADEDGE   float   x   
                // SV_TessFactor            1   x           1 QUADEDGE   float   x   
                // SV_TessFactor            2   x           2 QUADEDGE   float   x   
                // SV_TessFactor            3   x           3 QUADEDGE   float   x   
                // SV_InsideTessFactor      0   x           4  QUADINT   float   x   
                // SV_InsideTessFactor      1   x           5  QUADINT   float   x   
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                // TEXCOORD                 1     zw        1     NONE   float     zw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                // Tessellation Domain   # of control points
                // -------------------- --------------------
                // Quadrilateral                           4
                //
                // Tessellation Output Primitive  Partitioning Type 
                // ------------------------------ ------------------
                // Clockwise Triangles            Even Fractional   
                //
                hs_5_0
                hs_decls 
                dcl_input_control_point_count 4
                dcl_output_control_point_count 4
                dcl_tessellator_domain domain_quad
                dcl_tessellator_partitioning partitioning_fractional_even
                dcl_tessellator_output_primitive output_triangle_cw
                dcl_hs_max_tessfactor l(64.000000)
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[32], immediateIndexed
                hs_control_point_phase 
                dcl_input vOutputControlPointID
                dcl_input v[4][0].xyz
                dcl_input v[4][1].xy
                dcl_output o0.xyz
                dcl_output o1.xy
                dcl_temps 2
                //
                // Initial variable locations:
                //   vOutputControlPointID.x <- i; 
                //   vPrim.x <- patchId; 
                //   o1.x <- <HS return value>.Tex.x; o1.y <- <HS return value>.Tex.y; 
                //   o0.x <- <HS return value>.PosW.x; o0.y <- <HS return value>.PosW.y; o0.z <- <HS return value>.PosW.z; 
                //   v[0][0].x <- p[0].PosW.x; v[0][0].y <- p[0].PosW.y; v[0][0].z <- p[0].PosW.z; 
                //   v[0][1].x <- p[0].Tex.x; v[0][1].y <- p[0].Tex.y; v[0][1].z <- p[0].BoundsY.x; v[0][1].w <- p[0].BoundsY.y; 
                //   v[1][0].x <- p[1].PosW.x; v[1][0].y <- p[1].PosW.y; v[1][0].z <- p[1].PosW.z; 
                //   v[1][1].x <- p[1].Tex.x; v[1][1].y <- p[1].Tex.y; v[1][1].z <- p[1].BoundsY.x; v[1][1].w <- p[1].BoundsY.y; 
                //   v[2][0].x <- p[2].PosW.x; v[2][0].y <- p[2].PosW.y; v[2][0].z <- p[2].PosW.z; 
                //   v[2][1].x <- p[2].Tex.x; v[2][1].y <- p[2].Tex.y; v[2][1].z <- p[2].BoundsY.x; v[2][1].w <- p[2].BoundsY.y; 
                //   v[3][0].x <- p[3].PosW.x; v[3][0].y <- p[3].PosW.y; v[3][0].z <- p[3].PosW.z; 
                //   v[3][1].x <- p[3].Tex.x; v[3][1].y <- p[3].Tex.y; v[3][1].z <- p[3].BoundsY.x; v[3][1].w <- p[3].BoundsY.y
                //
                #line 232 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r0.x, vOutputControlPointID
                mov r0.yzw, v[r0.x + 0][0].xxyz  // r0.y <- hout.PosW.x; r0.z <- hout.PosW.y; r0.w <- hout.PosW.z
                mov r1.xy, v[r0.x + 0][1].xyxx  // r1.x <- hout.Tex.x; r1.y <- hout.Tex.y
                mov o0.xyz, r0.yzwy
                mov o1.xy, r1.xyxx
                ret 
                hs_join_phase 
                dcl_input vicp[4][0].xyz
                dcl_input vicp[4][1].zw
                dcl_output_siv o0.x, finalQuadUeq0EdgeTessFactor
                dcl_output_siv o1.x, finalQuadVeq0EdgeTessFactor
                dcl_output_siv o2.x, finalQuadUeq1EdgeTessFactor
                dcl_output_siv o3.x, finalQuadVeq1EdgeTessFactor
                dcl_output_siv o4.x, finalQuadUInsideTessFactor
                dcl_output_siv o5.x, finalQuadVInsideTessFactor
                dcl_temps 7
                dcl_indexableTemp x0[6], 4
                
                #line 163
                mov r0.y, vicp[0][1].z  // r0.y <- minY
                mov r1.y, vicp[0][1].w  // r1.y <- maxY
                
                #line 168
                mov r0.xz, vicp[2][0].xxzx  // r0.x <- vMin.x; r0.z <- vMin.z
                mov r0.y, r0.y  // r0.y <- vMin.y
                mov r1.xz, vicp[1][0].xxzx  // r1.x <- vMax.x; r1.z <- vMax.z
                mov r1.y, r1.y  // r1.y <- vMax.y
                add r2.xyz, r0.xyzx, r1.xyzx
                mul r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r2.x <- boxCenter.x; r2.y <- boxCenter.y; r2.z <- boxCenter.z
                mov r0.xyz, -r0.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx
                mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r0.x <- boxExtents.x; r0.y <- boxExtents.y; r0.z <- boxExtents.z
                nop 
                mov r2.xyz, r2.xyzx
                mov r0.xyz, r0.xyzx
                mov x0[0].xyzw, cb0[26].xyzw
                mov x0[1].xyzw, cb0[27].xyzw
                mov x0[2].xyzw, cb0[28].xyzw
                mov x0[3].xyzw, cb0[29].xyzw
                mov x0[4].xyzw, cb0[30].xyzw
                mov x0[5].xyzw, cb0[31].xyzw
                
                #line 135
                mov r0.w, l(0)  // r0.w <- i
                mov r1.y, l(0)  // r1.y <- <AabbOutsideFrustumTest return value>
                mov r1.x, r0.w  // r1.x <- i
                mov r1.z, l(0)
                loop 
                  ilt r1.w, r1.x, l(6)
                  mov r1.z, l(0)
                  breakc_z r1.w
                
                #line 139
                  nop 
                  mov r3.xyz, r2.xyzx
                  mov r4.xyz, r0.xyzx
                  mov r5.xyzw, x0[r1.x + 0].xyzw
                
                #line 118
                  mov r6.xyz, -r5.xyzx
                  max r6.xyz, r5.xyzx, r6.xyzx  // r6.x <- n.x; r6.y <- n.y; r6.z <- n.z
                
                #line 121
                  dp3 r1.w, r4.xyzx, r6.xyzx  // r1.w <- r
                
                #line 124
                  mov r3.w, l(1.000000)
                  dp4 r2.w, r3.xyzw, r5.xyzw  // r2.w <- s
                
                #line 129
                  add r1.w, r1.w, r2.w
                  lt r1.w, r1.w, l(0.000000)  // r1.w <- <AabbBehindPlaneTest return value>
                
                #line 139
                  if_nz r1.w
                    mov r1.y, l(-1)
                    mov r1.z, l(-1)
                    break 
                  endif 
                
                #line 135
                  iadd r1.x, r1.x, l(1)
                
                #line 143
                  mov r1.z, r1.w
                endloop 
                if_z r1.z
                  mov r1.y, l(0)
                endif 
                
                #line 173
                if_nz r1.y
                  mov r0.x, l(0)  // r0.x <- pt.EdgeTess[0]
                  mov r0.y, l(0)  // r0.y <- pt.EdgeTess[1]
                  mov r1.x, l(0)  // r1.x <- pt.EdgeTess[2]
                  mov r1.y, l(0)  // r1.y <- pt.EdgeTess[3]
                  mov r1.z, l(0)  // r1.z <- pt.InsideTess[0]
                  mov r1.w, l(0)  // r1.w <- pt.InsideTess[1]
                  mov r1.x, r1.x  // r1.x <- <ConstantHS return value>.EdgeTess[2]
                  mov r1.y, r1.y  // r1.y <- <ConstantHS return value>.EdgeTess[3]
                  mov r1.z, r1.z  // r1.z <- <ConstantHS return value>.InsideTess[0]
                  mov r1.w, r1.w  // r1.w <- <ConstantHS return value>.InsideTess[1]
                  mov r0.x, r0.x  // r0.x <- <ConstantHS return value>.EdgeTess[0]
                  mov r0.y, r0.y  // r0.y <- <ConstantHS return value>.EdgeTess[1]
                  min o0.x, r0.x, l(64.000000)
                  min o1.x, r0.y, l(64.000000)
                  min r0.xyzw, r1.xyzw, l(64.000000, 64.000000, 64.000000, 64.000000)  // r0.x <- <ConstantHS return value>.EdgeTess[2]; r0.y <- <ConstantHS return value>.EdgeTess[3]; r0.z <- <ConstantHS return value>.InsideTess[0]; r0.w <- <ConstantHS return value>.InsideTess[1]
                  mov o2.x, r0.x
                  mov o3.x, r0.y
                  mov o4.x, r0.z
                  mov o5.x, r0.w
                  ret 
                
                #line 184
                else   // Prior locations: r0.x <- boxExtents.x; r0.y <- boxExtents.y; r0.z <- boxExtents.z
                
                #line 195
                  add r0.xyz, vicp[2][0].xyzx, vicp[0][0].xyzx
                  mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r0.x <- e0.x; r0.y <- e0.y; r0.z <- e0.z
                  add r1.xyz, vicp[1][0].xyzx, vicp[0][0].xyzx
                  mul r1.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r1.x <- e1.x; r1.y <- e1.y; r1.z <- e1.z
                  add r2.xyz, vicp[3][0].xyzx, vicp[1][0].xyzx
                  mul r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r2.x <- e2.x; r2.y <- e2.y; r2.z <- e2.z
                  add r3.xyz, vicp[3][0].xyzx, vicp[2][0].xyzx
                  mul r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r3.x <- e3.x; r3.y <- e3.y; r3.z <- e3.z
                  add r4.xyz, vicp[1][0].xyzx, vicp[0][0].xyzx
                  add r4.xyz, r4.xyzx, vicp[2][0].xyzx
                  add r4.xyz, r4.xyzx, vicp[3][0].xyzx
                  mul r4.xyz, r4.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)  // r4.x <- c.x; r4.y <- c.y; r4.z <- c.z
                  nop 
                  mov r0.xyz, r0.xyzx
                
                #line 105
                  mov r5.xyz, -cb0[12].xyzx
                  add r0.xyz, r0.xyzx, r5.xyzx
                  dp3 r0.x, r0.xyzx, r0.xyzx
                  sqrt r0.x, r0.x  // r0.x <- d
                
                #line 110
                  mov r0.y, -cb0[15].x
                  add r0.x, r0.y, r0.x
                  mov r0.y, -cb0[15].x
                  add r0.y, r0.y, cb0[15].y
                  div r0.x, r0.x, r0.y
                  max r0.x, r0.x, l(0.000000)
                  min r0.x, r0.x, l(1.000000)  // r0.x <- s
                  itof r0.y, l(2)
                  mov r0.z, -cb0[15].w
                  add r0.z, r0.z, cb0[15].z
                  mul r0.x, r0.z, r0.x
                  add r0.x, r0.x, cb0[15].w
                  log r0.y, r0.y
                  mul r0.x, r0.y, r0.x
                  exp r0.x, r0.x  // r0.x <- <CalcTessFactor return value>
                
                #line 201
                  mov r0.x, r0.x  // r0.x <- pt.EdgeTess[0]
                  nop 
                  mov r1.xyz, r1.xyzx
                
                #line 105
                  mov r0.yzw, -cb0[12].xxyz
                  add r0.yzw, r0.yyzw, r1.xxyz
                  dp3 r0.y, r0.yzwy, r0.yzwy
                  sqrt r0.y, r0.y  // r0.y <- d
                
                #line 110
                  mov r0.z, -cb0[15].x
                  add r0.y, r0.z, r0.y
                  mov r0.z, -cb0[15].x
                  add r0.z, r0.z, cb0[15].y
                  div r0.y, r0.y, r0.z
                  max r0.y, r0.y, l(0.000000)
                  min r0.y, r0.y, l(1.000000)  // r0.y <- s
                  itof r0.z, l(2)
                  mov r0.w, -cb0[15].w
                  add r0.w, r0.w, cb0[15].z
                  mul r0.y, r0.w, r0.y
                  add r0.y, r0.y, cb0[15].w
                  log r0.z, r0.z
                  mul r0.y, r0.z, r0.y
                  exp r0.y, r0.y  // r0.y <- <CalcTessFactor return value>
                
                #line 202
                  mov r0.y, r0.y  // r0.y <- pt.EdgeTess[1]
                  nop 
                  mov r2.xyz, r2.xyzx
                
                #line 105
                  mov r1.xyz, -cb0[12].xyzx
                  add r1.xyz, r1.xyzx, r2.xyzx
                  dp3 r0.z, r1.xyzx, r1.xyzx
                  sqrt r0.z, r0.z  // r0.z <- d
                
                #line 110
                  mov r0.w, -cb0[15].x
                  add r0.z, r0.w, r0.z
                  mov r0.w, -cb0[15].x
                  add r0.w, r0.w, cb0[15].y
                  div r0.z, r0.z, r0.w
                  max r0.z, r0.z, l(0.000000)
                  min r0.z, r0.z, l(1.000000)  // r0.z <- s
                  itof r0.w, l(2)
                  mov r1.x, -cb0[15].w
                  add r1.x, r1.x, cb0[15].z
                  mul r0.z, r0.z, r1.x
                  add r0.z, r0.z, cb0[15].w
                  log r0.w, r0.w
                  mul r0.z, r0.w, r0.z
                  exp r1.x, r0.z  // r1.x <- <CalcTessFactor return value>
                
                #line 203
                  mov r1.x, r1.x  // r1.x <- pt.EdgeTess[2]
                  nop 
                  mov r3.xyz, r3.xyzx
                
                #line 105
                  mov r2.xyz, -cb0[12].xyzx
                  add r2.xyz, r2.xyzx, r3.xyzx
                  dp3 r0.z, r2.xyzx, r2.xyzx
                  sqrt r0.z, r0.z  // r0.z <- d
                
                #line 110
                  mov r0.w, -cb0[15].x
                  add r0.z, r0.w, r0.z
                  mov r0.w, -cb0[15].x
                  add r0.w, r0.w, cb0[15].y
                  div r0.z, r0.z, r0.w
                  max r0.z, r0.z, l(0.000000)
                  min r0.z, r0.z, l(1.000000)  // r0.z <- s
                  itof r0.w, l(2)
                  mov r2.x, -cb0[15].w
                  add r2.x, r2.x, cb0[15].z
                  mul r0.z, r0.z, r2.x
                  add r0.z, r0.z, cb0[15].w
                  log r0.w, r0.w
                  mul r0.z, r0.w, r0.z
                  exp r1.y, r0.z  // r1.y <- <CalcTessFactor return value>
                
                #line 204
                  mov r1.y, r1.y  // r1.y <- pt.EdgeTess[3]
                  nop 
                  mov r4.xyz, r4.xyzx
                
                #line 105
                  mov r2.xyz, -cb0[12].xyzx
                  add r2.xyz, r2.xyzx, r4.xyzx
                  dp3 r0.z, r2.xyzx, r2.xyzx
                  sqrt r0.z, r0.z  // r0.z <- d
                
                #line 110
                  mov r0.w, -cb0[15].x
                  add r0.z, r0.w, r0.z
                  mov r0.w, -cb0[15].x
                  add r0.w, r0.w, cb0[15].y
                  div r0.z, r0.z, r0.w
                  max r0.z, r0.z, l(0.000000)
                  min r0.z, r0.z, l(1.000000)  // r0.z <- s
                  itof r0.w, l(2)
                  mov r2.x, -cb0[15].w
                  add r2.x, r2.x, cb0[15].z
                  mul r0.z, r0.z, r2.x
                  add r0.z, r0.z, cb0[15].w
                  log r0.w, r0.w
                  mul r0.z, r0.w, r0.z
                  exp r1.w, r0.z  // r1.w <- <CalcTessFactor return value>
                  mov r1.z, r1.w  // r1.z <- <CalcTessFactor return value>
                
                #line 206
                  mov r1.z, r1.z  // r1.z <- pt.InsideTess[0]
                  mov r1.w, r1.w  // r1.w <- pt.InsideTess[1]
                  mov r1.x, r1.x  // r1.x <- <ConstantHS return value>.EdgeTess[2]
                  mov r1.y, r1.y  // r1.y <- <ConstantHS return value>.EdgeTess[3]
                  mov r1.z, r1.z  // r1.z <- <ConstantHS return value>.InsideTess[0]
                  mov r1.w, r1.w  // r1.w <- <ConstantHS return value>.InsideTess[1]
                  mov r0.x, r0.x  // r0.x <- <ConstantHS return value>.EdgeTess[0]
                  mov r0.y, r0.y  // r0.y <- <ConstantHS return value>.EdgeTess[1]
                  min o0.x, r0.x, l(64.000000)  // o0.x <- <ConstantHS return value>.EdgeTess[0]
                  min o1.x, r0.y, l(64.000000)  // o1.x <- <ConstantHS return value>.EdgeTess[1]
                  min r0.xyzw, r1.xyzw, l(64.000000, 64.000000, 64.000000, 64.000000)  // r0.x <- <ConstantHS return value>.EdgeTess[2]; r0.y <- <ConstantHS return value>.EdgeTess[3]; r0.z <- <ConstantHS return value>.InsideTess[0]; r0.w <- <ConstantHS return value>.InsideTess[1]
                  mov o2.x, r0.x  // o2.x <- <ConstantHS return value>.EdgeTess[2]
                  mov o3.x, r0.y  // o3.x <- <ConstantHS return value>.EdgeTess[3]
                  mov o4.x, r0.z  // o4.x <- <ConstantHS return value>.InsideTess[0]
                  mov o5.x, r0.w  // o5.x <- <ConstantHS return value>.InsideTess[1]
                  ret 
                endif 
                ret 
                // Approximately 218 instruction slots used
                            
            };
            DomainShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   float3 gEyePosW;                   // Offset:  192 Size:    12 [unused]
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //   float gMinDist;                    // Offset:  240 Size:     4 [unused]
                //   float gMaxDist;                    // Offset:  244 Size:     4 [unused]
                //   float gMinTess;                    // Offset:  248 Size:     4 [unused]
                //   float gMaxTess;                    // Offset:  252 Size:     4 [unused]
                //   float gTexelCellSpaceU;            // Offset:  256 Size:     4 [unused]
                //   float gTexelCellSpaceV;            // Offset:  260 Size:     4 [unused]
                //   float gWorldCellSpace;             // Offset:  264 Size:     4 [unused]
                //   float2 gTexScale;                  // Offset:  272 Size:     8
                //      = 0x42480000 0x42480000 
                //   float4x4 gViewProj;                // Offset:  288 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  352 Size:    64
                //   float4 gWorldFrustumPlanes[6];     // Offset:  416 Size:    96 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  512
                //       float4 Diffuse;                // Offset:  528
                //       float4 Specular;               // Offset:  544
                //       float4 Reflect;                // Offset:  560
                //
                //   } gMaterial;                       // Offset:  512 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samHeightmap                      sampler      NA          NA    0        1
                // gHeightMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Patch Constant signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_TessFactor            0   x           0 QUADEDGE   float       
                // SV_TessFactor            1   x           1 QUADEDGE   float       
                // SV_TessFactor            2   x           2 QUADEDGE   float       
                // SV_TessFactor            3   x           3 QUADEDGE   float       
                // SV_InsideTessFactor      0   x           4  QUADINT   float       
                // SV_InsideTessFactor      1   x           5  QUADINT   float       
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   x z 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                // TEXCOORD                 1     zw        2     NONE   float     zw
                // TEXCOORD                 2   xyzw        3     NONE   float   xyzw
                //
                // Tessellation Domain   # of control points
                // -------------------- --------------------
                // Quadrilateral                           4
                //
                ds_5_0
                dcl_input_control_point_count 4
                dcl_tessellator_domain domain_quad
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[26], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input vDomain.xy
                dcl_input vicp[4][0].xz
                dcl_input vicp[4][1].xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o2.zw
                dcl_output o3.xyzw
                dcl_temps 4
                //
                // Initial variable locations:
                //   vpc0.x <- patchTess.EdgeTess[0]; 
                //   vpc1.x <- patchTess.EdgeTess[1]; 
                //   vpc2.x <- patchTess.EdgeTess[2]; 
                //   vpc3.x <- patchTess.EdgeTess[3]; 
                //   vpc4.x <- patchTess.InsideTess[0]; 
                //   vpc5.x <- patchTess.InsideTess[1]; 
                //   vDomain.x <- uv.x; vDomain.y <- uv.y; 
                //   o3.x <- <DS return value>.ShadowPosH.x; o3.y <- <DS return value>.ShadowPosH.y; o3.z <- <DS return value>.ShadowPosH.z; o3.w <- <DS return value>.ShadowPosH.w; 
                //   o2.x <- <DS return value>.Tex.x; o2.y <- <DS return value>.Tex.y; o2.z <- <DS return value>.TiledTex.x; o2.w <- <DS return value>.TiledTex.y; 
                //   o1.x <- <DS return value>.PosW.x; o1.y <- <DS return value>.PosW.y; o1.z <- <DS return value>.PosW.z; 
                //   o0.x <- <DS return value>.PosH.x; o0.y <- <DS return value>.PosH.y; o0.z <- <DS return value>.PosH.z; o0.w <- <DS return value>.PosH.w; 
                //   vicp[0][0].x <- quad[0].PosW.x; vicp[0][0].y <- quad[0].PosW.y; vicp[0][0].z <- quad[0].PosW.z; 
                //   vicp[0][1].x <- quad[0].Tex.x; vicp[0][1].y <- quad[0].Tex.y; 
                //   vicp[1][0].x <- quad[1].PosW.x; vicp[1][0].y <- quad[1].PosW.y; vicp[1][0].z <- quad[1].PosW.z; 
                //   vicp[1][1].x <- quad[1].Tex.x; vicp[1][1].y <- quad[1].Tex.y; 
                //   vicp[2][0].x <- quad[2].PosW.x; vicp[2][0].y <- quad[2].PosW.y; vicp[2][0].z <- quad[2].PosW.z; 
                //   vicp[2][1].x <- quad[2].Tex.x; vicp[2][1].y <- quad[2].Tex.y; 
                //   vicp[3][0].x <- quad[3].PosW.x; vicp[3][0].y <- quad[3].PosW.y; vicp[3][0].z <- quad[3].PosW.z; 
                //   vicp[3][1].x <- quad[3].Tex.x; vicp[3][1].y <- quad[3].Tex.y
                //
                #line 257 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r0.xy, -vicp[0][0].xzxx
                add r0.xy, r0.xyxx, vicp[1][0].xzxx
                mul r0.xy, r0.xyxx, vDomain.xxxx
                add r0.xy, r0.xyxx, vicp[0][0].xzxx
                mov r0.zw, -vicp[2][0].xxxz
                add r0.zw, r0.zzzw, vicp[3][0].xxxz
                mul r0.zw, r0.zzzw, vDomain.xxxx
                add r0.zw, r0.zzzw, vicp[2][0].xxxz
                mov r1.xy, -r0.xyxx
                add r0.zw, r0.zzzw, r1.xxxy
                mul r0.zw, r0.zzzw, vDomain.yyyy
                add r0.xz, r0.zzwz, r0.xxyx  // r0.x <- dout.PosW.x; r0.z <- dout.PosW.z
                
                #line 262
                mov r1.xy, -vicp[0][1].xyxx
                add r1.xy, r1.xyxx, vicp[1][1].xyxx
                mul r1.xy, r1.xyxx, vDomain.xxxx
                add r1.xy, r1.xyxx, vicp[0][1].xyxx
                mov r1.zw, -vicp[2][1].xxxy
                add r1.zw, r1.zzzw, vicp[3][1].xxxy
                mul r1.zw, r1.zzzw, vDomain.xxxx
                add r1.zw, r1.zzzw, vicp[2][1].xxxy
                mov r2.xy, -r1.xyxx
                add r1.zw, r1.zzzw, r2.xxxy
                mul r1.zw, r1.zzzw, vDomain.yyyy
                add r1.xy, r1.zwzz, r1.xyxx  // r1.x <- dout.Tex.x; r1.y <- dout.Tex.y
                
                #line 268
                mul r1.zw, r1.xxxy, cb0[17].xxxy  // r1.z <- dout.TiledTex.x; r1.w <- dout.TiledTex.y
                
                #line 271
                itof r2.x, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r0.y, r1.xyxx, t0.yxzw, s0, r2.x
                mov r0.y, r0.y  // r0.y <- dout.PosW.y
                
                #line 279
                mov r0.w, l(1.000000)
                dp4 r2.x, r0.xyzw, cb0[18].xyzw  // r2.x <- dout.PosH.x
                dp4 r2.y, r0.xyzw, cb0[19].xyzw  // r2.y <- dout.PosH.y
                dp4 r2.z, r0.xyzw, cb0[20].xyzw  // r2.z <- dout.PosH.z
                dp4 r2.w, r0.xyzw, cb0[21].xyzw  // r2.w <- dout.PosH.w
                
                #line 282
                dp4 r3.x, r0.xyzw, cb0[22].xyzw  // r3.x <- dout.ShadowPosH.x
                dp4 r3.y, r0.xyzw, cb0[23].xyzw  // r3.y <- dout.ShadowPosH.y
                dp4 r3.z, r0.xyzw, cb0[24].xyzw  // r3.z <- dout.ShadowPosH.z
                dp4 r3.w, r0.xyzw, cb0[25].xyzw  // r3.w <- dout.ShadowPosH.w
                mov o0.xyzw, r2.xyzw
                mov o2.xy, r1.xyxx
                mov o2.zw, r1.zzzw
                mov o3.xyzw, r3.xyzw
                mov o1.xyz, r0.xyzx
                ret 
                // Approximately 43 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //   float gMinDist;                    // Offset:  240 Size:     4 [unused]
                //   float gMaxDist;                    // Offset:  244 Size:     4 [unused]
                //   float gMinTess;                    // Offset:  248 Size:     4 [unused]
                //   float gMaxTess;                    // Offset:  252 Size:     4 [unused]
                //   float gTexelCellSpaceU;            // Offset:  256 Size:     4
                //   float gTexelCellSpaceV;            // Offset:  260 Size:     4
                //   float gWorldCellSpace;             // Offset:  264 Size:     4
                //   float2 gTexScale;                  // Offset:  272 Size:     8 [unused]
                //      = 0x42480000 0x42480000 
                //   float4x4 gViewProj;                // Offset:  288 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  352 Size:    64 [unused]
                //   float4 gWorldFrustumPlanes[6];     // Offset:  416 Size:    96 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  512
                //       float4 Diffuse;                // Offset:  528
                //       float4 Specular;               // Offset:  544
                //       float4 Reflect;                // Offset:  560
                //
                //   } gMaterial;                       // Offset:  512 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samHeightmap                      sampler      NA          NA    1        1
                // samShadow                       sampler_c      NA          NA    2        1
                // gLayerMapArray                    texture  float4     2darray    0        1
                // gBlendMap                         texture  float4          2d    1        1
                // gHeightMap                        texture  float4          2d    2        1
                // gShadowMap                        texture  float4          2d    3        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                // TEXCOORD                 1     zw        2     NONE   float     zw
                // TEXCOORD                 2   xyzw        3     NONE   float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[35], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_default
                dcl_sampler s2, mode_comparison
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_resource_texture2d (float,float,float,float) t3
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xy
                dcl_input_ps linear v2.zw
                dcl_input_ps linear v3.xyzw
                dcl_output o0.xyzw
                dcl_temps 15
                dcl_indexableTemp x0[9], 4
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
                //   v2.x <- pin.Tex.x; v2.y <- pin.Tex.y; v2.z <- pin.TiledTex.x; v2.w <- pin.TiledTex.y; 
                //   v3.x <- pin.ShadowPosH.x; v3.y <- pin.ShadowPosH.y; v3.z <- pin.ShadowPosH.z; v3.w <- pin.ShadowPosH.w; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 226 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\LightHelper.fx"
                mov r0.x, l(0.000488)  // r0.x <- SMAP_DX
                
                #line 294 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r1.x, -cb0[16].x
                mov r1.y, l(0)
                add r1.xy, r1.xyxx, v2.xyxx  // r1.x <- leftTex.x; r1.y <- leftTex.y
                mov r2.x, cb0[16].x
                mov r2.y, l(0)
                add r1.zw, r2.xxxy, v2.xxxy  // r1.z <- rightTex.x; r1.w <- rightTex.y
                mov r2.x, l(0)
                mov r2.y, cb0[16].y
                add r2.xy, r2.xyxx, v2.xyxx  // r2.x <- bottomTex.x; r2.y <- bottomTex.y
                mov r3.y, -cb0[16].y
                mov r3.x, l(0)
                add r2.zw, r3.xxxy, v2.xxxy  // r2.z <- topTex.x; r2.w <- topTex.y
                itof r3.x, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t2.xyzw, s1, r3.x
                mov r1.x, r1.x  // r1.x <- leftY
                itof r1.y, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r1.y, r1.zwzz, t2.yxzw, s1, r1.y
                mov r1.y, r1.y  // r1.y <- rightY
                itof r1.z, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r1.z, r2.xyxx, t2.yzxw, s1, r1.z
                mov r1.z, r1.z  // r1.z <- bottomY
                itof r1.w, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r1.w, r2.zwzz, t2.yzwx, s1, r1.w
                mov r1.w, r1.w  // r1.w <- topY
                mul r2.y, cb0[16].z, l(2.000000)
                mov r1.x, -r1.x
                add r2.z, r1.x, r1.y
                mov r2.x, l(0)
                dp3 r1.x, r2.xyzx, r2.xyzx
                rsq r1.x, r1.x
                mul r2.xyz, r1.xxxx, r2.xyzx  // r2.x <- tangent.z; r2.y <- tangent.x; r2.z <- tangent.y
                
                #line 305
                mov r1.x, -r1.w
                add r1.x, r1.x, r1.z
                mul r1.y, cb0[16].z, l(-2.000000)
                mov r1.z, l(0)
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r1.w, r1.w
                mul r1.xyz, r1.wwww, r1.xyzx  // r1.x <- bitan.y; r1.y <- bitan.z; r1.z <- bitan.x
                mul r3.xyz, r1.yzxy, r2.zxyz
                mul r1.xyz, r1.xyzx, r2.xyzx
                mov r1.xyz, -r1.xyzx
                add r1.xyz, r1.xyzx, r3.xyzx  // r1.x <- normalW.x; r1.y <- normalW.y; r1.z <- normalW.z
                
                #line 310
                mov r2.xyz, -v1.xyzx
                add r2.xyz, r2.xyzx, cb0[12].xyzx  // r2.x <- toEye.x; r2.y <- toEye.y; r2.z <- toEye.z
                
                #line 313
                dp3 r1.w, r2.xyzx, r2.xyzx
                sqrt r1.w, r1.w  // r1.w <- distToEye
                
                #line 316
                div r2.xyz, r2.xyzx, r1.wwww
                
                #line 323
                mov r3.xy, v2.zwzz
                mov r3.z, l(0)
                sample_indexable(texture2darray)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0  // r3.x <- c0.x; r3.y <- c0.y; r3.z <- c0.z; r3.w <- c0.w
                mov r4.xy, v2.zwzz
                mov r4.z, l(1.000000)
                sample_indexable(texture2darray)(float,float,float,float) r4.xyzw, r4.xyzx, t0.xyzw, s0  // r4.x <- c1.x; r4.y <- c1.y; r4.z <- c1.z; r4.w <- c1.w
                mov r5.xy, v2.zwzz
                mov r5.z, l(2.000000)
                sample_indexable(texture2darray)(float,float,float,float) r5.xyzw, r5.xyzx, t0.xyzw, s0  // r5.x <- c2.x; r5.y <- c2.y; r5.z <- c2.z; r5.w <- c2.w
                mov r6.xy, v2.zwzz
                mov r6.z, l(3.000000)
                sample_indexable(texture2darray)(float,float,float,float) r6.xyzw, r6.xyzx, t0.xyzw, s0  // r6.x <- c3.x; r6.y <- c3.y; r6.z <- c3.z; r6.w <- c3.w
                mov r7.xy, v2.zwzz
                mov r7.z, l(4.000000)
                sample_indexable(texture2darray)(float,float,float,float) r7.xyzw, r7.xyzx, t0.xyzw, s0  // r7.x <- c4.x; r7.y <- c4.y; r7.z <- c4.z; r7.w <- c4.w
                
                #line 330
                sample_indexable(texture2d)(float,float,float,float) r8.xyzw, v2.xyxx, t1.xyzw, s0  // r8.x <- t.x; r8.y <- t.y; r8.z <- t.z; r8.w <- t.w
                
                #line 333
                mov r3.xyzw, r3.xyzw  // r3.x <- texColor.x; r3.y <- texColor.y; r3.z <- texColor.z; r3.w <- texColor.w
                mov r9.xyzw, -r3.xyzw
                add r4.xyzw, r4.xyzw, r9.xyzw
                mul r4.xyzw, r4.xyzw, r8.xxxx
                add r3.xyzw, r3.xyzw, r4.xyzw
                mov r4.xyzw, -r3.xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r4.xyzw, r4.xyzw, r8.yyyy
                add r3.xyzw, r3.xyzw, r4.xyzw
                mov r4.xyzw, -r3.xyzw
                add r4.xyzw, r4.xyzw, r6.xyzw
                mul r4.xyzw, r4.xyzw, r8.zzzz
                add r3.xyzw, r3.xyzw, r4.xyzw
                mov r4.xyzw, -r3.xyzw
                add r4.xyzw, r4.xyzw, r7.xyzw
                mul r4.xyzw, r4.xyzw, r8.wwww
                add r3.xyzw, r3.xyzw, r4.xyzw
                
                #line 347
                mov r4.xyzw, l(0,0,0,0)  // r4.x <- ambient.x; r4.y <- ambient.y; r4.z <- ambient.z; r4.w <- ambient.w
                mov r5.xyzw, l(0,0,0,0)  // r5.x <- diffuse.x; r5.y <- diffuse.y; r5.z <- diffuse.z; r5.w <- diffuse.w
                mov r6.xyzw, l(0,0,0,0)  // r6.x <- spec.x; r6.y <- spec.y; r6.z <- spec.z; r6.w <- spec.w
                
                #line 353
                nop 
                nop 
                nop 
                mov r7.xyzw, v3.xyzw
                
                #line 233 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\LightHelper.fx"
                div r7.xyz, r7.zxyz, r7.wwww  // r7.x <- shadowPosH.z; r7.y <- shadowPosH.x; r7.z <- shadowPosH.y
                
                #line 236
                mov r7.x, r7.x  // r7.x <- depth
                
                #line 239
                mov r0.x, r0.x  // r0.x <- dx
                mov r2.w, l(0)  // r2.w <- percentLit
                mov x0[0].xy, l(-0.000488,-0.000488,0,0)
                mov x0[1].xy, l(0,-0.000488,0,0)
                mov r0.y, l(-0.000488)
                mov x0[2].xy, r0.xyxx
                mov x0[3].xy, l(-0.000488,0,0,0)
                mov x0[4].xy, l(0,0,0,0)
                mov r0.z, l(0)
                mov x0[5].xy, r0.xzxx
                mov x0[6].xy, l(-0.000488,0.000488,0,0)
                mov x0[7].xy, l(0,0.000488,0,0)
                mov r0.w, l(0.000488)
                mov x0[8].xy, r0.xwxx
                
                #line 252
                mov r0.xy, x0[0].xyxx
                add r0.xy, r0.xyxx, r7.yzyy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t3.xxxx, s2, r7.x
                add r0.x, r0.x, r2.w  // r0.x <- percentLit
                mov r0.yz, x0[1].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[2].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[3].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[4].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[5].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[6].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[7].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[8].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                
                #line 256
                div r0.x, r0.x, l(9.000000)
                
                #line 360 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                nop 
                mov r7.xyzw, cb0[32].xyzw
                mov r8.xyzw, cb0[33].xyzw
                mov r9.xyzw, cb0[34].xyzw
                mov r10.xyzw, cb0[0].xyzw
                mov r11.xyzw, cb0[1].xyzw
                mov r12.xyzw, cb0[2].xyzw
                mov r0.yzw, cb0[3].xxyz
                mov r1.xyz, r1.xyzx
                mov r2.xyz, r2.xyzx
                
                #line 66 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\LightHelper.fx"
                mov r13.xyzw, l(0,0,0,0)  // r13.x <- diffuse.x; r13.y <- diffuse.y; r13.z <- diffuse.z; r13.w <- diffuse.w
                mov r14.xyzw, l(0,0,0,0)  // r14.x <- spec.x; r14.y <- spec.y; r14.z <- spec.z; r14.w <- spec.w
                
                #line 70
                mov r0.yzw, -r0.yyzw  // r0.y <- lightVec.x; r0.z <- lightVec.y; r0.w <- lightVec.z
                
                #line 73
                mul r7.xyzw, r7.xyzw, r10.xyzw  // r7.x <- ambient.x; r7.y <- ambient.y; r7.z <- ambient.z; r7.w <- ambient.w
                
                #line 78
                dp3 r2.w, r0.yzwy, r1.xyzx  // r2.w <- diffuseFactor
                
                #line 82
                lt r10.x, l(0.000000), r2.w
                mov r0.yzw, -r0.yyzw
                dp3 r10.y, r0.yzwy, r1.xyzx
                add r10.y, r10.y, r10.y
                mov r10.y, -r10.y
                mul r10.yzw, r1.xxyz, r10.yyyy
                add r0.yzw, r0.yyzw, r10.yyzw  // r0.y <- v.x; r0.z <- v.y; r0.w <- v.z
                dp3 r0.y, r0.yzwy, r2.xyzx
                max r0.y, r0.y, l(0.000000)
                log r0.y, r0.y
                mul r0.y, r0.y, r9.w
                exp r0.y, r0.y  // r0.y <- specFactor
                mul r8.xyzw, r8.xyzw, r2.wwww
                mul r8.xyzw, r11.xyzw, r8.xyzw  // r8.x <- diffuse.x; r8.y <- diffuse.y; r8.z <- diffuse.z; r8.w <- diffuse.w
                mul r9.xyzw, r9.xyzw, r0.yyyy
                mul r9.xyzw, r12.xyzw, r9.xyzw  // r9.x <- spec.x; r9.y <- spec.y; r9.z <- spec.z; r9.w <- spec.w
                movc r8.xyzw, r10.xxxx, r8.xyzw, r13.xyzw
                movc r9.xyzw, r10.xxxx, r9.xyzw, r14.xyzw
                
                #line 360 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r7.xyzw, r7.xyzw  // r7.x <- A.x; r7.y <- A.y; r7.z <- A.z; r7.w <- A.w
                mov r8.xyzw, r8.xyzw  // r8.x <- D.x; r8.y <- D.y; r8.z <- D.z; r8.w <- D.w
                mov r9.xyzw, r9.xyzw  // r9.x <- S.x; r9.y <- S.y; r9.z <- S.z; r9.w <- S.w
                
                #line 363
                add r4.xyzw, r4.xyzw, r7.xyzw
                mul r7.xyzw, r0.xxxx, r8.xyzw
                add r5.xyzw, r5.xyzw, r7.xyzw
                mul r0.xyzw, r0.xxxx, r9.xyzw
                add r0.xyzw, r0.xyzw, r6.xyzw  // r0.x <- spec.x; r0.y <- spec.y; r0.z <- spec.z; r0.w <- spec.w
                
                #line 360
                nop 
                mov r6.xyzw, cb0[32].xyzw  // r6.x <- mat.Ambient.x; r6.y <- mat.Ambient.y; r6.z <- mat.Ambient.z; r6.w <- mat.Ambient.w
                mov r7.xyzw, cb0[33].xyzw  // r7.x <- mat.Diffuse.x; r7.y <- mat.Diffuse.y; r7.z <- mat.Diffuse.z; r7.w <- mat.Diffuse.w
                mov r8.xyzw, cb0[34].xyzw  // r8.x <- mat.Specular.x; r8.y <- mat.Specular.y; r8.z <- mat.Specular.z; r8.w <- mat.Specular.w
                mov r9.xyzw, cb0[4].xyzw  // r9.x <- L.Ambient.x; r9.y <- L.Ambient.y; r9.z <- L.Ambient.z; r9.w <- L.Ambient.w
                mov r10.xyzw, cb0[5].xyzw  // r10.x <- L.Diffuse.x; r10.y <- L.Diffuse.y; r10.z <- L.Diffuse.z; r10.w <- L.Diffuse.w
                mov r11.xyzw, cb0[6].xyzw  // r11.x <- L.Specular.x; r11.y <- L.Specular.y; r11.z <- L.Specular.z; r11.w <- L.Specular.w
                mov r12.xyz, cb0[7].xyzx  // r12.x <- L.Direction.x; r12.y <- L.Direction.y; r12.z <- L.Direction.z
                
                #line 66 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\LightHelper.fx"
                mov r13.xyzw, l(0,0,0,0)  // r13.x <- diffuse.x; r13.y <- diffuse.y; r13.z <- diffuse.z; r13.w <- diffuse.w
                mov r14.xyzw, l(0,0,0,0)  // r14.x <- spec.x; r14.y <- spec.y; r14.z <- spec.z; r14.w <- spec.w
                
                #line 70
                mov r12.xyz, -r12.xyzx  // r12.x <- lightVec.x; r12.y <- lightVec.y; r12.z <- lightVec.z
                
                #line 73
                mul r6.xyzw, r6.xyzw, r9.xyzw  // r6.x <- ambient.x; r6.y <- ambient.y; r6.z <- ambient.z; r6.w <- ambient.w
                
                #line 78
                dp3 r2.w, r12.xyzx, r1.xyzx
                
                #line 82
                lt r9.x, l(0.000000), r2.w
                mov r9.yzw, -r12.xxyz
                dp3 r12.x, r9.yzwy, r1.xyzx
                add r12.x, r12.x, r12.x
                mov r12.x, -r12.x
                mul r1.xyz, r1.xyzx, r12.xxxx
                add r1.xyz, r9.yzwy, r1.xyzx  // r1.x <- v.x; r1.y <- v.y; r1.z <- v.z
                dp3 r1.x, r1.xyzx, r2.xyzx
                max r1.x, r1.x, l(0.000000)
                log r1.x, r1.x
                mul r1.x, r1.x, r8.w
                exp r1.x, r1.x  // r1.x <- specFactor
                mul r2.xyzw, r7.xyzw, r2.wwww
                mul r2.xyzw, r10.xyzw, r2.xyzw  // r2.x <- diffuse.x; r2.y <- diffuse.y; r2.z <- diffuse.z; r2.w <- diffuse.w
                mul r7.xyzw, r8.xyzw, r1.xxxx
                mul r7.xyzw, r11.xyzw, r7.xyzw  // r7.x <- spec.x; r7.y <- spec.y; r7.z <- spec.z; r7.w <- spec.w
                movc r2.xyzw, r9.xxxx, r2.xyzw, r13.xyzw
                movc r7.xyzw, r9.xxxx, r7.xyzw, r14.xyzw
                
                #line 360 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r6.xyzw, r6.xyzw  // r6.x <- A.x; r6.y <- A.y; r6.z <- A.z; r6.w <- A.w
                mov r2.xyzw, r2.xyzw  // r2.x <- D.x; r2.y <- D.y; r2.z <- D.z; r2.w <- D.w
                mov r7.xyzw, r7.xyzw  // r7.x <- S.x; r7.y <- S.y; r7.z <- S.z; r7.w <- S.w
                
                #line 363
                add r4.xyzw, r4.xyzw, r6.xyzw
                mul r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
                add r2.xyzw, r2.xyzw, r5.xyzw  // r2.x <- diffuse.x; r2.y <- diffuse.y; r2.z <- diffuse.z; r2.w <- diffuse.w
                mul r5.xyzw, r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
                add r0.xyzw, r0.xyzw, r5.xyzw
                
                #line 368
                add r2.xyzw, r2.xyzw, r4.xyzw
                mul r2.xyzw, r2.xyzw, r3.xyzw
                add r0.xyzw, r0.xyzw, r2.xyzw  // r0.x <- litColor.x; r0.y <- litColor.y; r0.z <- litColor.z; r0.w <- litColor.w
                
                #line 377
                mov r1.x, -cb0[12].w
                add r1.x, r1.x, r1.w
                div r1.x, r1.x, cb0[13].x
                max r1.x, r1.x, l(0.000000)
                min r1.x, r1.x, l(1.000000)  // r1.x <- fogLerp
                
                #line 380
                mov r2.xyzw, -r0.xyzw
                add r2.xyzw, r2.xyzw, cb0[14].xyzw
                mul r1.xyzw, r1.xxxx, r2.xyzw
                add r0.xyzw, r0.xyzw, r1.xyzw
                
                #line 383
                mov o0.xyzw, r0.xyzw
                ret 
                // Approximately 235 instruction slots used
                            
            };
        }

    }

    technique11 Light3Fog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samHeightmap                      sampler      NA          NA    0        1
                // gHeightMap                        texture  float4          2d    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   x z 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                // TEXCOORD                 1   xy          2     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                // TEXCOORD                 1     zw        1     NONE   float     zw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input v0.xz
                dcl_input v1.xy
                dcl_input v2.xy
                dcl_output o0.xyz
                dcl_output o1.xy
                dcl_output o1.zw
                dcl_temps 2
                //
                // Initial variable locations:
                //   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
                //   v1.x <- vin.Tex.x; v1.y <- vin.Tex.y; 
                //   v2.x <- vin.BoundsY.x; v2.y <- vin.BoundsY.y; 
                //   o1.x <- <VS return value>.Tex.x; o1.y <- <VS return value>.Tex.y; o1.z <- <VS return value>.BoundsY.x; o1.w <- <VS return value>.BoundsY.y; 
                //   o0.x <- <VS return value>.PosW.x; o0.y <- <VS return value>.PosW.y; o0.z <- <VS return value>.PosW.z
                //
                #line 90 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r0.xy, v0.xzxx  // r0.x <- vout.PosW.x; r0.y <- vout.PosW.z
                
                #line 94
                itof r0.z, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r0.z, v1.xyxx, t0.yzxw, s0, r0.z
                mov r0.z, r0.z  // r0.z <- vout.PosW.y
                
                #line 97
                mov r1.xy, v1.xyxx  // r1.x <- vout.Tex.x; r1.y <- vout.Tex.y
                mov r1.zw, v2.xxxy  // r1.z <- vout.BoundsY.x; r1.w <- vout.BoundsY.y
                mov o1.xy, r1.xyxx
                mov o1.zw, r1.zzzw
                mov o0.xz, r0.xxyx
                mov o0.y, r0.z
                ret 
                // Approximately 11 instruction slots used
                            
            };
            HullShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //   float gMinDist;                    // Offset:  240 Size:     4
                //   float gMaxDist;                    // Offset:  244 Size:     4
                //   float gMinTess;                    // Offset:  248 Size:     4
                //   float gMaxTess;                    // Offset:  252 Size:     4
                //   float gTexelCellSpaceU;            // Offset:  256 Size:     4 [unused]
                //   float gTexelCellSpaceV;            // Offset:  260 Size:     4 [unused]
                //   float gWorldCellSpace;             // Offset:  264 Size:     4 [unused]
                //   float2 gTexScale;                  // Offset:  272 Size:     8 [unused]
                //      = 0x42480000 0x42480000 
                //   float4x4 gViewProj;                // Offset:  288 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  352 Size:    64 [unused]
                //   float4 gWorldFrustumPlanes[6];     // Offset:  416 Size:    96
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  512
                //       float4 Diffuse;                // Offset:  528
                //       float4 Specular;               // Offset:  544
                //       float4 Reflect;                // Offset:  560
                //
                //   } gMaterial;                       // Offset:  512 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Patch Constant signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_TessFactor            0   x           0 QUADEDGE   float   x   
                // SV_TessFactor            1   x           1 QUADEDGE   float   x   
                // SV_TessFactor            2   x           2 QUADEDGE   float   x   
                // SV_TessFactor            3   x           3 QUADEDGE   float   x   
                // SV_InsideTessFactor      0   x           4  QUADINT   float   x   
                // SV_InsideTessFactor      1   x           5  QUADINT   float   x   
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                // TEXCOORD                 1     zw        1     NONE   float     zw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                // Tessellation Domain   # of control points
                // -------------------- --------------------
                // Quadrilateral                           4
                //
                // Tessellation Output Primitive  Partitioning Type 
                // ------------------------------ ------------------
                // Clockwise Triangles            Even Fractional   
                //
                hs_5_0
                hs_decls 
                dcl_input_control_point_count 4
                dcl_output_control_point_count 4
                dcl_tessellator_domain domain_quad
                dcl_tessellator_partitioning partitioning_fractional_even
                dcl_tessellator_output_primitive output_triangle_cw
                dcl_hs_max_tessfactor l(64.000000)
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[32], immediateIndexed
                hs_control_point_phase 
                dcl_input vOutputControlPointID
                dcl_input v[4][0].xyz
                dcl_input v[4][1].xy
                dcl_output o0.xyz
                dcl_output o1.xy
                dcl_temps 2
                //
                // Initial variable locations:
                //   vOutputControlPointID.x <- i; 
                //   vPrim.x <- patchId; 
                //   o1.x <- <HS return value>.Tex.x; o1.y <- <HS return value>.Tex.y; 
                //   o0.x <- <HS return value>.PosW.x; o0.y <- <HS return value>.PosW.y; o0.z <- <HS return value>.PosW.z; 
                //   v[0][0].x <- p[0].PosW.x; v[0][0].y <- p[0].PosW.y; v[0][0].z <- p[0].PosW.z; 
                //   v[0][1].x <- p[0].Tex.x; v[0][1].y <- p[0].Tex.y; v[0][1].z <- p[0].BoundsY.x; v[0][1].w <- p[0].BoundsY.y; 
                //   v[1][0].x <- p[1].PosW.x; v[1][0].y <- p[1].PosW.y; v[1][0].z <- p[1].PosW.z; 
                //   v[1][1].x <- p[1].Tex.x; v[1][1].y <- p[1].Tex.y; v[1][1].z <- p[1].BoundsY.x; v[1][1].w <- p[1].BoundsY.y; 
                //   v[2][0].x <- p[2].PosW.x; v[2][0].y <- p[2].PosW.y; v[2][0].z <- p[2].PosW.z; 
                //   v[2][1].x <- p[2].Tex.x; v[2][1].y <- p[2].Tex.y; v[2][1].z <- p[2].BoundsY.x; v[2][1].w <- p[2].BoundsY.y; 
                //   v[3][0].x <- p[3].PosW.x; v[3][0].y <- p[3].PosW.y; v[3][0].z <- p[3].PosW.z; 
                //   v[3][1].x <- p[3].Tex.x; v[3][1].y <- p[3].Tex.y; v[3][1].z <- p[3].BoundsY.x; v[3][1].w <- p[3].BoundsY.y
                //
                #line 232 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r0.x, vOutputControlPointID
                mov r0.yzw, v[r0.x + 0][0].xxyz  // r0.y <- hout.PosW.x; r0.z <- hout.PosW.y; r0.w <- hout.PosW.z
                mov r1.xy, v[r0.x + 0][1].xyxx  // r1.x <- hout.Tex.x; r1.y <- hout.Tex.y
                mov o0.xyz, r0.yzwy
                mov o1.xy, r1.xyxx
                ret 
                hs_join_phase 
                dcl_input vicp[4][0].xyz
                dcl_input vicp[4][1].zw
                dcl_output_siv o0.x, finalQuadUeq0EdgeTessFactor
                dcl_output_siv o1.x, finalQuadVeq0EdgeTessFactor
                dcl_output_siv o2.x, finalQuadUeq1EdgeTessFactor
                dcl_output_siv o3.x, finalQuadVeq1EdgeTessFactor
                dcl_output_siv o4.x, finalQuadUInsideTessFactor
                dcl_output_siv o5.x, finalQuadVInsideTessFactor
                dcl_temps 7
                dcl_indexableTemp x0[6], 4
                
                #line 163
                mov r0.y, vicp[0][1].z  // r0.y <- minY
                mov r1.y, vicp[0][1].w  // r1.y <- maxY
                
                #line 168
                mov r0.xz, vicp[2][0].xxzx  // r0.x <- vMin.x; r0.z <- vMin.z
                mov r0.y, r0.y  // r0.y <- vMin.y
                mov r1.xz, vicp[1][0].xxzx  // r1.x <- vMax.x; r1.z <- vMax.z
                mov r1.y, r1.y  // r1.y <- vMax.y
                add r2.xyz, r0.xyzx, r1.xyzx
                mul r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r2.x <- boxCenter.x; r2.y <- boxCenter.y; r2.z <- boxCenter.z
                mov r0.xyz, -r0.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx
                mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r0.x <- boxExtents.x; r0.y <- boxExtents.y; r0.z <- boxExtents.z
                nop 
                mov r2.xyz, r2.xyzx
                mov r0.xyz, r0.xyzx
                mov x0[0].xyzw, cb0[26].xyzw
                mov x0[1].xyzw, cb0[27].xyzw
                mov x0[2].xyzw, cb0[28].xyzw
                mov x0[3].xyzw, cb0[29].xyzw
                mov x0[4].xyzw, cb0[30].xyzw
                mov x0[5].xyzw, cb0[31].xyzw
                
                #line 135
                mov r0.w, l(0)  // r0.w <- i
                mov r1.y, l(0)  // r1.y <- <AabbOutsideFrustumTest return value>
                mov r1.x, r0.w  // r1.x <- i
                mov r1.z, l(0)
                loop 
                  ilt r1.w, r1.x, l(6)
                  mov r1.z, l(0)
                  breakc_z r1.w
                
                #line 139
                  nop 
                  mov r3.xyz, r2.xyzx
                  mov r4.xyz, r0.xyzx
                  mov r5.xyzw, x0[r1.x + 0].xyzw
                
                #line 118
                  mov r6.xyz, -r5.xyzx
                  max r6.xyz, r5.xyzx, r6.xyzx  // r6.x <- n.x; r6.y <- n.y; r6.z <- n.z
                
                #line 121
                  dp3 r1.w, r4.xyzx, r6.xyzx  // r1.w <- r
                
                #line 124
                  mov r3.w, l(1.000000)
                  dp4 r2.w, r3.xyzw, r5.xyzw  // r2.w <- s
                
                #line 129
                  add r1.w, r1.w, r2.w
                  lt r1.w, r1.w, l(0.000000)  // r1.w <- <AabbBehindPlaneTest return value>
                
                #line 139
                  if_nz r1.w
                    mov r1.y, l(-1)
                    mov r1.z, l(-1)
                    break 
                  endif 
                
                #line 135
                  iadd r1.x, r1.x, l(1)
                
                #line 143
                  mov r1.z, r1.w
                endloop 
                if_z r1.z
                  mov r1.y, l(0)
                endif 
                
                #line 173
                if_nz r1.y
                  mov r0.x, l(0)  // r0.x <- pt.EdgeTess[0]
                  mov r0.y, l(0)  // r0.y <- pt.EdgeTess[1]
                  mov r1.x, l(0)  // r1.x <- pt.EdgeTess[2]
                  mov r1.y, l(0)  // r1.y <- pt.EdgeTess[3]
                  mov r1.z, l(0)  // r1.z <- pt.InsideTess[0]
                  mov r1.w, l(0)  // r1.w <- pt.InsideTess[1]
                  mov r1.x, r1.x  // r1.x <- <ConstantHS return value>.EdgeTess[2]
                  mov r1.y, r1.y  // r1.y <- <ConstantHS return value>.EdgeTess[3]
                  mov r1.z, r1.z  // r1.z <- <ConstantHS return value>.InsideTess[0]
                  mov r1.w, r1.w  // r1.w <- <ConstantHS return value>.InsideTess[1]
                  mov r0.x, r0.x  // r0.x <- <ConstantHS return value>.EdgeTess[0]
                  mov r0.y, r0.y  // r0.y <- <ConstantHS return value>.EdgeTess[1]
                  min o0.x, r0.x, l(64.000000)
                  min o1.x, r0.y, l(64.000000)
                  min r0.xyzw, r1.xyzw, l(64.000000, 64.000000, 64.000000, 64.000000)  // r0.x <- <ConstantHS return value>.EdgeTess[2]; r0.y <- <ConstantHS return value>.EdgeTess[3]; r0.z <- <ConstantHS return value>.InsideTess[0]; r0.w <- <ConstantHS return value>.InsideTess[1]
                  mov o2.x, r0.x
                  mov o3.x, r0.y
                  mov o4.x, r0.z
                  mov o5.x, r0.w
                  ret 
                
                #line 184
                else   // Prior locations: r0.x <- boxExtents.x; r0.y <- boxExtents.y; r0.z <- boxExtents.z
                
                #line 195
                  add r0.xyz, vicp[2][0].xyzx, vicp[0][0].xyzx
                  mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r0.x <- e0.x; r0.y <- e0.y; r0.z <- e0.z
                  add r1.xyz, vicp[1][0].xyzx, vicp[0][0].xyzx
                  mul r1.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r1.x <- e1.x; r1.y <- e1.y; r1.z <- e1.z
                  add r2.xyz, vicp[3][0].xyzx, vicp[1][0].xyzx
                  mul r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r2.x <- e2.x; r2.y <- e2.y; r2.z <- e2.z
                  add r3.xyz, vicp[3][0].xyzx, vicp[2][0].xyzx
                  mul r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r3.x <- e3.x; r3.y <- e3.y; r3.z <- e3.z
                  add r4.xyz, vicp[1][0].xyzx, vicp[0][0].xyzx
                  add r4.xyz, r4.xyzx, vicp[2][0].xyzx
                  add r4.xyz, r4.xyzx, vicp[3][0].xyzx
                  mul r4.xyz, r4.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)  // r4.x <- c.x; r4.y <- c.y; r4.z <- c.z
                  nop 
                  mov r0.xyz, r0.xyzx
                
                #line 105
                  mov r5.xyz, -cb0[12].xyzx
                  add r0.xyz, r0.xyzx, r5.xyzx
                  dp3 r0.x, r0.xyzx, r0.xyzx
                  sqrt r0.x, r0.x  // r0.x <- d
                
                #line 110
                  mov r0.y, -cb0[15].x
                  add r0.x, r0.y, r0.x
                  mov r0.y, -cb0[15].x
                  add r0.y, r0.y, cb0[15].y
                  div r0.x, r0.x, r0.y
                  max r0.x, r0.x, l(0.000000)
                  min r0.x, r0.x, l(1.000000)  // r0.x <- s
                  itof r0.y, l(2)
                  mov r0.z, -cb0[15].w
                  add r0.z, r0.z, cb0[15].z
                  mul r0.x, r0.z, r0.x
                  add r0.x, r0.x, cb0[15].w
                  log r0.y, r0.y
                  mul r0.x, r0.y, r0.x
                  exp r0.x, r0.x  // r0.x <- <CalcTessFactor return value>
                
                #line 201
                  mov r0.x, r0.x  // r0.x <- pt.EdgeTess[0]
                  nop 
                  mov r1.xyz, r1.xyzx
                
                #line 105
                  mov r0.yzw, -cb0[12].xxyz
                  add r0.yzw, r0.yyzw, r1.xxyz
                  dp3 r0.y, r0.yzwy, r0.yzwy
                  sqrt r0.y, r0.y  // r0.y <- d
                
                #line 110
                  mov r0.z, -cb0[15].x
                  add r0.y, r0.z, r0.y
                  mov r0.z, -cb0[15].x
                  add r0.z, r0.z, cb0[15].y
                  div r0.y, r0.y, r0.z
                  max r0.y, r0.y, l(0.000000)
                  min r0.y, r0.y, l(1.000000)  // r0.y <- s
                  itof r0.z, l(2)
                  mov r0.w, -cb0[15].w
                  add r0.w, r0.w, cb0[15].z
                  mul r0.y, r0.w, r0.y
                  add r0.y, r0.y, cb0[15].w
                  log r0.z, r0.z
                  mul r0.y, r0.z, r0.y
                  exp r0.y, r0.y  // r0.y <- <CalcTessFactor return value>
                
                #line 202
                  mov r0.y, r0.y  // r0.y <- pt.EdgeTess[1]
                  nop 
                  mov r2.xyz, r2.xyzx
                
                #line 105
                  mov r1.xyz, -cb0[12].xyzx
                  add r1.xyz, r1.xyzx, r2.xyzx
                  dp3 r0.z, r1.xyzx, r1.xyzx
                  sqrt r0.z, r0.z  // r0.z <- d
                
                #line 110
                  mov r0.w, -cb0[15].x
                  add r0.z, r0.w, r0.z
                  mov r0.w, -cb0[15].x
                  add r0.w, r0.w, cb0[15].y
                  div r0.z, r0.z, r0.w
                  max r0.z, r0.z, l(0.000000)
                  min r0.z, r0.z, l(1.000000)  // r0.z <- s
                  itof r0.w, l(2)
                  mov r1.x, -cb0[15].w
                  add r1.x, r1.x, cb0[15].z
                  mul r0.z, r0.z, r1.x
                  add r0.z, r0.z, cb0[15].w
                  log r0.w, r0.w
                  mul r0.z, r0.w, r0.z
                  exp r1.x, r0.z  // r1.x <- <CalcTessFactor return value>
                
                #line 203
                  mov r1.x, r1.x  // r1.x <- pt.EdgeTess[2]
                  nop 
                  mov r3.xyz, r3.xyzx
                
                #line 105
                  mov r2.xyz, -cb0[12].xyzx
                  add r2.xyz, r2.xyzx, r3.xyzx
                  dp3 r0.z, r2.xyzx, r2.xyzx
                  sqrt r0.z, r0.z  // r0.z <- d
                
                #line 110
                  mov r0.w, -cb0[15].x
                  add r0.z, r0.w, r0.z
                  mov r0.w, -cb0[15].x
                  add r0.w, r0.w, cb0[15].y
                  div r0.z, r0.z, r0.w
                  max r0.z, r0.z, l(0.000000)
                  min r0.z, r0.z, l(1.000000)  // r0.z <- s
                  itof r0.w, l(2)
                  mov r2.x, -cb0[15].w
                  add r2.x, r2.x, cb0[15].z
                  mul r0.z, r0.z, r2.x
                  add r0.z, r0.z, cb0[15].w
                  log r0.w, r0.w
                  mul r0.z, r0.w, r0.z
                  exp r1.y, r0.z  // r1.y <- <CalcTessFactor return value>
                
                #line 204
                  mov r1.y, r1.y  // r1.y <- pt.EdgeTess[3]
                  nop 
                  mov r4.xyz, r4.xyzx
                
                #line 105
                  mov r2.xyz, -cb0[12].xyzx
                  add r2.xyz, r2.xyzx, r4.xyzx
                  dp3 r0.z, r2.xyzx, r2.xyzx
                  sqrt r0.z, r0.z  // r0.z <- d
                
                #line 110
                  mov r0.w, -cb0[15].x
                  add r0.z, r0.w, r0.z
                  mov r0.w, -cb0[15].x
                  add r0.w, r0.w, cb0[15].y
                  div r0.z, r0.z, r0.w
                  max r0.z, r0.z, l(0.000000)
                  min r0.z, r0.z, l(1.000000)  // r0.z <- s
                  itof r0.w, l(2)
                  mov r2.x, -cb0[15].w
                  add r2.x, r2.x, cb0[15].z
                  mul r0.z, r0.z, r2.x
                  add r0.z, r0.z, cb0[15].w
                  log r0.w, r0.w
                  mul r0.z, r0.w, r0.z
                  exp r1.w, r0.z  // r1.w <- <CalcTessFactor return value>
                  mov r1.z, r1.w  // r1.z <- <CalcTessFactor return value>
                
                #line 206
                  mov r1.z, r1.z  // r1.z <- pt.InsideTess[0]
                  mov r1.w, r1.w  // r1.w <- pt.InsideTess[1]
                  mov r1.x, r1.x  // r1.x <- <ConstantHS return value>.EdgeTess[2]
                  mov r1.y, r1.y  // r1.y <- <ConstantHS return value>.EdgeTess[3]
                  mov r1.z, r1.z  // r1.z <- <ConstantHS return value>.InsideTess[0]
                  mov r1.w, r1.w  // r1.w <- <ConstantHS return value>.InsideTess[1]
                  mov r0.x, r0.x  // r0.x <- <ConstantHS return value>.EdgeTess[0]
                  mov r0.y, r0.y  // r0.y <- <ConstantHS return value>.EdgeTess[1]
                  min o0.x, r0.x, l(64.000000)  // o0.x <- <ConstantHS return value>.EdgeTess[0]
                  min o1.x, r0.y, l(64.000000)  // o1.x <- <ConstantHS return value>.EdgeTess[1]
                  min r0.xyzw, r1.xyzw, l(64.000000, 64.000000, 64.000000, 64.000000)  // r0.x <- <ConstantHS return value>.EdgeTess[2]; r0.y <- <ConstantHS return value>.EdgeTess[3]; r0.z <- <ConstantHS return value>.InsideTess[0]; r0.w <- <ConstantHS return value>.InsideTess[1]
                  mov o2.x, r0.x  // o2.x <- <ConstantHS return value>.EdgeTess[2]
                  mov o3.x, r0.y  // o3.x <- <ConstantHS return value>.EdgeTess[3]
                  mov o4.x, r0.z  // o4.x <- <ConstantHS return value>.InsideTess[0]
                  mov o5.x, r0.w  // o5.x <- <ConstantHS return value>.InsideTess[1]
                  ret 
                endif 
                ret 
                // Approximately 218 instruction slots used
                            
            };
            DomainShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   float3 gEyePosW;                   // Offset:  192 Size:    12 [unused]
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //   float gMinDist;                    // Offset:  240 Size:     4 [unused]
                //   float gMaxDist;                    // Offset:  244 Size:     4 [unused]
                //   float gMinTess;                    // Offset:  248 Size:     4 [unused]
                //   float gMaxTess;                    // Offset:  252 Size:     4 [unused]
                //   float gTexelCellSpaceU;            // Offset:  256 Size:     4 [unused]
                //   float gTexelCellSpaceV;            // Offset:  260 Size:     4 [unused]
                //   float gWorldCellSpace;             // Offset:  264 Size:     4 [unused]
                //   float2 gTexScale;                  // Offset:  272 Size:     8
                //      = 0x42480000 0x42480000 
                //   float4x4 gViewProj;                // Offset:  288 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  352 Size:    64
                //   float4 gWorldFrustumPlanes[6];     // Offset:  416 Size:    96 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  512
                //       float4 Diffuse;                // Offset:  528
                //       float4 Specular;               // Offset:  544
                //       float4 Reflect;                // Offset:  560
                //
                //   } gMaterial;                       // Offset:  512 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samHeightmap                      sampler      NA          NA    0        1
                // gHeightMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Patch Constant signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_TessFactor            0   x           0 QUADEDGE   float       
                // SV_TessFactor            1   x           1 QUADEDGE   float       
                // SV_TessFactor            2   x           2 QUADEDGE   float       
                // SV_TessFactor            3   x           3 QUADEDGE   float       
                // SV_InsideTessFactor      0   x           4  QUADINT   float       
                // SV_InsideTessFactor      1   x           5  QUADINT   float       
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   x z 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                // TEXCOORD                 1     zw        2     NONE   float     zw
                // TEXCOORD                 2   xyzw        3     NONE   float   xyzw
                //
                // Tessellation Domain   # of control points
                // -------------------- --------------------
                // Quadrilateral                           4
                //
                ds_5_0
                dcl_input_control_point_count 4
                dcl_tessellator_domain domain_quad
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[26], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input vDomain.xy
                dcl_input vicp[4][0].xz
                dcl_input vicp[4][1].xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o2.zw
                dcl_output o3.xyzw
                dcl_temps 4
                //
                // Initial variable locations:
                //   vpc0.x <- patchTess.EdgeTess[0]; 
                //   vpc1.x <- patchTess.EdgeTess[1]; 
                //   vpc2.x <- patchTess.EdgeTess[2]; 
                //   vpc3.x <- patchTess.EdgeTess[3]; 
                //   vpc4.x <- patchTess.InsideTess[0]; 
                //   vpc5.x <- patchTess.InsideTess[1]; 
                //   vDomain.x <- uv.x; vDomain.y <- uv.y; 
                //   o3.x <- <DS return value>.ShadowPosH.x; o3.y <- <DS return value>.ShadowPosH.y; o3.z <- <DS return value>.ShadowPosH.z; o3.w <- <DS return value>.ShadowPosH.w; 
                //   o2.x <- <DS return value>.Tex.x; o2.y <- <DS return value>.Tex.y; o2.z <- <DS return value>.TiledTex.x; o2.w <- <DS return value>.TiledTex.y; 
                //   o1.x <- <DS return value>.PosW.x; o1.y <- <DS return value>.PosW.y; o1.z <- <DS return value>.PosW.z; 
                //   o0.x <- <DS return value>.PosH.x; o0.y <- <DS return value>.PosH.y; o0.z <- <DS return value>.PosH.z; o0.w <- <DS return value>.PosH.w; 
                //   vicp[0][0].x <- quad[0].PosW.x; vicp[0][0].y <- quad[0].PosW.y; vicp[0][0].z <- quad[0].PosW.z; 
                //   vicp[0][1].x <- quad[0].Tex.x; vicp[0][1].y <- quad[0].Tex.y; 
                //   vicp[1][0].x <- quad[1].PosW.x; vicp[1][0].y <- quad[1].PosW.y; vicp[1][0].z <- quad[1].PosW.z; 
                //   vicp[1][1].x <- quad[1].Tex.x; vicp[1][1].y <- quad[1].Tex.y; 
                //   vicp[2][0].x <- quad[2].PosW.x; vicp[2][0].y <- quad[2].PosW.y; vicp[2][0].z <- quad[2].PosW.z; 
                //   vicp[2][1].x <- quad[2].Tex.x; vicp[2][1].y <- quad[2].Tex.y; 
                //   vicp[3][0].x <- quad[3].PosW.x; vicp[3][0].y <- quad[3].PosW.y; vicp[3][0].z <- quad[3].PosW.z; 
                //   vicp[3][1].x <- quad[3].Tex.x; vicp[3][1].y <- quad[3].Tex.y
                //
                #line 257 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r0.xy, -vicp[0][0].xzxx
                add r0.xy, r0.xyxx, vicp[1][0].xzxx
                mul r0.xy, r0.xyxx, vDomain.xxxx
                add r0.xy, r0.xyxx, vicp[0][0].xzxx
                mov r0.zw, -vicp[2][0].xxxz
                add r0.zw, r0.zzzw, vicp[3][0].xxxz
                mul r0.zw, r0.zzzw, vDomain.xxxx
                add r0.zw, r0.zzzw, vicp[2][0].xxxz
                mov r1.xy, -r0.xyxx
                add r0.zw, r0.zzzw, r1.xxxy
                mul r0.zw, r0.zzzw, vDomain.yyyy
                add r0.xz, r0.zzwz, r0.xxyx  // r0.x <- dout.PosW.x; r0.z <- dout.PosW.z
                
                #line 262
                mov r1.xy, -vicp[0][1].xyxx
                add r1.xy, r1.xyxx, vicp[1][1].xyxx
                mul r1.xy, r1.xyxx, vDomain.xxxx
                add r1.xy, r1.xyxx, vicp[0][1].xyxx
                mov r1.zw, -vicp[2][1].xxxy
                add r1.zw, r1.zzzw, vicp[3][1].xxxy
                mul r1.zw, r1.zzzw, vDomain.xxxx
                add r1.zw, r1.zzzw, vicp[2][1].xxxy
                mov r2.xy, -r1.xyxx
                add r1.zw, r1.zzzw, r2.xxxy
                mul r1.zw, r1.zzzw, vDomain.yyyy
                add r1.xy, r1.zwzz, r1.xyxx  // r1.x <- dout.Tex.x; r1.y <- dout.Tex.y
                
                #line 268
                mul r1.zw, r1.xxxy, cb0[17].xxxy  // r1.z <- dout.TiledTex.x; r1.w <- dout.TiledTex.y
                
                #line 271
                itof r2.x, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r0.y, r1.xyxx, t0.yxzw, s0, r2.x
                mov r0.y, r0.y  // r0.y <- dout.PosW.y
                
                #line 279
                mov r0.w, l(1.000000)
                dp4 r2.x, r0.xyzw, cb0[18].xyzw  // r2.x <- dout.PosH.x
                dp4 r2.y, r0.xyzw, cb0[19].xyzw  // r2.y <- dout.PosH.y
                dp4 r2.z, r0.xyzw, cb0[20].xyzw  // r2.z <- dout.PosH.z
                dp4 r2.w, r0.xyzw, cb0[21].xyzw  // r2.w <- dout.PosH.w
                
                #line 282
                dp4 r3.x, r0.xyzw, cb0[22].xyzw  // r3.x <- dout.ShadowPosH.x
                dp4 r3.y, r0.xyzw, cb0[23].xyzw  // r3.y <- dout.ShadowPosH.y
                dp4 r3.z, r0.xyzw, cb0[24].xyzw  // r3.z <- dout.ShadowPosH.z
                dp4 r3.w, r0.xyzw, cb0[25].xyzw  // r3.w <- dout.ShadowPosH.w
                mov o0.xyzw, r2.xyzw
                mov o2.xy, r1.xyxx
                mov o2.zw, r1.zzzw
                mov o3.xyzw, r3.xyzw
                mov o1.xyz, r0.xyzx
                ret 
                // Approximately 43 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //   float gMinDist;                    // Offset:  240 Size:     4 [unused]
                //   float gMaxDist;                    // Offset:  244 Size:     4 [unused]
                //   float gMinTess;                    // Offset:  248 Size:     4 [unused]
                //   float gMaxTess;                    // Offset:  252 Size:     4 [unused]
                //   float gTexelCellSpaceU;            // Offset:  256 Size:     4
                //   float gTexelCellSpaceV;            // Offset:  260 Size:     4
                //   float gWorldCellSpace;             // Offset:  264 Size:     4
                //   float2 gTexScale;                  // Offset:  272 Size:     8 [unused]
                //      = 0x42480000 0x42480000 
                //   float4x4 gViewProj;                // Offset:  288 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  352 Size:    64 [unused]
                //   float4 gWorldFrustumPlanes[6];     // Offset:  416 Size:    96 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  512
                //       float4 Diffuse;                // Offset:  528
                //       float4 Specular;               // Offset:  544
                //       float4 Reflect;                // Offset:  560
                //
                //   } gMaterial;                       // Offset:  512 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samHeightmap                      sampler      NA          NA    1        1
                // samShadow                       sampler_c      NA          NA    2        1
                // gLayerMapArray                    texture  float4     2darray    0        1
                // gBlendMap                         texture  float4          2d    1        1
                // gHeightMap                        texture  float4          2d    2        1
                // gShadowMap                        texture  float4          2d    3        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                // TEXCOORD                 1     zw        2     NONE   float     zw
                // TEXCOORD                 2   xyzw        3     NONE   float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[35], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_default
                dcl_sampler s2, mode_comparison
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_resource_texture2d (float,float,float,float) t3
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xy
                dcl_input_ps linear v2.zw
                dcl_input_ps linear v3.xyzw
                dcl_output o0.xyzw
                dcl_temps 15
                dcl_indexableTemp x0[9], 4
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
                //   v2.x <- pin.Tex.x; v2.y <- pin.Tex.y; v2.z <- pin.TiledTex.x; v2.w <- pin.TiledTex.y; 
                //   v3.x <- pin.ShadowPosH.x; v3.y <- pin.ShadowPosH.y; v3.z <- pin.ShadowPosH.z; v3.w <- pin.ShadowPosH.w; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 226 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\LightHelper.fx"
                mov r0.x, l(0.000488)  // r0.x <- SMAP_DX
                
                #line 294 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r1.x, -cb0[16].x
                mov r1.y, l(0)
                add r1.xy, r1.xyxx, v2.xyxx  // r1.x <- leftTex.x; r1.y <- leftTex.y
                mov r2.x, cb0[16].x
                mov r2.y, l(0)
                add r1.zw, r2.xxxy, v2.xxxy  // r1.z <- rightTex.x; r1.w <- rightTex.y
                mov r2.x, l(0)
                mov r2.y, cb0[16].y
                add r2.xy, r2.xyxx, v2.xyxx  // r2.x <- bottomTex.x; r2.y <- bottomTex.y
                mov r3.y, -cb0[16].y
                mov r3.x, l(0)
                add r2.zw, r3.xxxy, v2.xxxy  // r2.z <- topTex.x; r2.w <- topTex.y
                itof r3.x, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t2.xyzw, s1, r3.x
                mov r1.x, r1.x  // r1.x <- leftY
                itof r1.y, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r1.y, r1.zwzz, t2.yxzw, s1, r1.y
                mov r1.y, r1.y  // r1.y <- rightY
                itof r1.z, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r1.z, r2.xyxx, t2.yzxw, s1, r1.z
                mov r1.z, r1.z  // r1.z <- bottomY
                itof r1.w, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r1.w, r2.zwzz, t2.yzwx, s1, r1.w
                mov r1.w, r1.w  // r1.w <- topY
                mul r2.y, cb0[16].z, l(2.000000)
                mov r1.x, -r1.x
                add r2.z, r1.x, r1.y
                mov r2.x, l(0)
                dp3 r1.x, r2.xyzx, r2.xyzx
                rsq r1.x, r1.x
                mul r2.xyz, r1.xxxx, r2.xyzx  // r2.x <- tangent.z; r2.y <- tangent.x; r2.z <- tangent.y
                
                #line 305
                mov r1.x, -r1.w
                add r1.x, r1.x, r1.z
                mul r1.y, cb0[16].z, l(-2.000000)
                mov r1.z, l(0)
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r1.w, r1.w
                mul r1.xyz, r1.wwww, r1.xyzx  // r1.x <- bitan.y; r1.y <- bitan.z; r1.z <- bitan.x
                mul r3.xyz, r1.yzxy, r2.zxyz
                mul r1.xyz, r1.xyzx, r2.xyzx
                mov r1.xyz, -r1.xyzx
                add r1.xyz, r1.xyzx, r3.xyzx  // r1.x <- normalW.x; r1.y <- normalW.y; r1.z <- normalW.z
                
                #line 310
                mov r2.xyz, -v1.xyzx
                add r2.xyz, r2.xyzx, cb0[12].xyzx  // r2.x <- toEye.x; r2.y <- toEye.y; r2.z <- toEye.z
                
                #line 313
                dp3 r1.w, r2.xyzx, r2.xyzx
                sqrt r1.w, r1.w  // r1.w <- distToEye
                
                #line 316
                div r2.xyz, r2.xyzx, r1.wwww
                
                #line 323
                mov r3.xy, v2.zwzz
                mov r3.z, l(0)
                sample_indexable(texture2darray)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0  // r3.x <- c0.x; r3.y <- c0.y; r3.z <- c0.z; r3.w <- c0.w
                mov r4.xy, v2.zwzz
                mov r4.z, l(1.000000)
                sample_indexable(texture2darray)(float,float,float,float) r4.xyzw, r4.xyzx, t0.xyzw, s0  // r4.x <- c1.x; r4.y <- c1.y; r4.z <- c1.z; r4.w <- c1.w
                mov r5.xy, v2.zwzz
                mov r5.z, l(2.000000)
                sample_indexable(texture2darray)(float,float,float,float) r5.xyzw, r5.xyzx, t0.xyzw, s0  // r5.x <- c2.x; r5.y <- c2.y; r5.z <- c2.z; r5.w <- c2.w
                mov r6.xy, v2.zwzz
                mov r6.z, l(3.000000)
                sample_indexable(texture2darray)(float,float,float,float) r6.xyzw, r6.xyzx, t0.xyzw, s0  // r6.x <- c3.x; r6.y <- c3.y; r6.z <- c3.z; r6.w <- c3.w
                mov r7.xy, v2.zwzz
                mov r7.z, l(4.000000)
                sample_indexable(texture2darray)(float,float,float,float) r7.xyzw, r7.xyzx, t0.xyzw, s0  // r7.x <- c4.x; r7.y <- c4.y; r7.z <- c4.z; r7.w <- c4.w
                
                #line 330
                sample_indexable(texture2d)(float,float,float,float) r8.xyzw, v2.xyxx, t1.xyzw, s0  // r8.x <- t.x; r8.y <- t.y; r8.z <- t.z; r8.w <- t.w
                
                #line 333
                mov r3.xyzw, r3.xyzw  // r3.x <- texColor.x; r3.y <- texColor.y; r3.z <- texColor.z; r3.w <- texColor.w
                mov r9.xyzw, -r3.xyzw
                add r4.xyzw, r4.xyzw, r9.xyzw
                mul r4.xyzw, r4.xyzw, r8.xxxx
                add r3.xyzw, r3.xyzw, r4.xyzw
                mov r4.xyzw, -r3.xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r4.xyzw, r4.xyzw, r8.yyyy
                add r3.xyzw, r3.xyzw, r4.xyzw
                mov r4.xyzw, -r3.xyzw
                add r4.xyzw, r4.xyzw, r6.xyzw
                mul r4.xyzw, r4.xyzw, r8.zzzz
                add r3.xyzw, r3.xyzw, r4.xyzw
                mov r4.xyzw, -r3.xyzw
                add r4.xyzw, r4.xyzw, r7.xyzw
                mul r4.xyzw, r4.xyzw, r8.wwww
                add r3.xyzw, r3.xyzw, r4.xyzw
                
                #line 347
                mov r4.xyzw, l(0,0,0,0)  // r4.x <- ambient.x; r4.y <- ambient.y; r4.z <- ambient.z; r4.w <- ambient.w
                mov r5.xyzw, l(0,0,0,0)  // r5.x <- diffuse.x; r5.y <- diffuse.y; r5.z <- diffuse.z; r5.w <- diffuse.w
                mov r6.xyzw, l(0,0,0,0)  // r6.x <- spec.x; r6.y <- spec.y; r6.z <- spec.z; r6.w <- spec.w
                
                #line 353
                nop 
                nop 
                nop 
                mov r7.xyzw, v3.xyzw
                
                #line 233 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\LightHelper.fx"
                div r7.xyz, r7.zxyz, r7.wwww  // r7.x <- shadowPosH.z; r7.y <- shadowPosH.x; r7.z <- shadowPosH.y
                
                #line 236
                mov r7.x, r7.x  // r7.x <- depth
                
                #line 239
                mov r0.x, r0.x  // r0.x <- dx
                mov r2.w, l(0)  // r2.w <- percentLit
                mov x0[0].xy, l(-0.000488,-0.000488,0,0)
                mov x0[1].xy, l(0,-0.000488,0,0)
                mov r0.y, l(-0.000488)
                mov x0[2].xy, r0.xyxx
                mov x0[3].xy, l(-0.000488,0,0,0)
                mov x0[4].xy, l(0,0,0,0)
                mov r0.z, l(0)
                mov x0[5].xy, r0.xzxx
                mov x0[6].xy, l(-0.000488,0.000488,0,0)
                mov x0[7].xy, l(0,0.000488,0,0)
                mov r0.w, l(0.000488)
                mov x0[8].xy, r0.xwxx
                
                #line 252
                mov r0.xy, x0[0].xyxx
                add r0.xy, r0.xyxx, r7.yzyy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t3.xxxx, s2, r7.x
                add r0.x, r0.x, r2.w  // r0.x <- percentLit
                mov r0.yz, x0[1].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[2].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[3].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[4].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[5].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[6].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[7].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                mov r0.yz, x0[8].xxyx
                add r0.yz, r0.yyzy, r7.yyzy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xxxx, s2, r7.x
                add r0.x, r0.y, r0.x
                
                #line 256
                div r0.x, r0.x, l(9.000000)
                
                #line 360 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                nop 
                mov r7.xyzw, cb0[32].xyzw
                mov r8.xyzw, cb0[33].xyzw
                mov r9.xyzw, cb0[34].xyzw
                mov r10.xyzw, cb0[0].xyzw
                mov r11.xyzw, cb0[1].xyzw
                mov r12.xyzw, cb0[2].xyzw
                mov r0.yzw, cb0[3].xxyz
                mov r1.xyz, r1.xyzx
                mov r2.xyz, r2.xyzx
                
                #line 66 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\LightHelper.fx"
                mov r13.xyzw, l(0,0,0,0)  // r13.x <- diffuse.x; r13.y <- diffuse.y; r13.z <- diffuse.z; r13.w <- diffuse.w
                mov r14.xyzw, l(0,0,0,0)  // r14.x <- spec.x; r14.y <- spec.y; r14.z <- spec.z; r14.w <- spec.w
                
                #line 70
                mov r0.yzw, -r0.yyzw  // r0.y <- lightVec.x; r0.z <- lightVec.y; r0.w <- lightVec.z
                
                #line 73
                mul r7.xyzw, r7.xyzw, r10.xyzw  // r7.x <- ambient.x; r7.y <- ambient.y; r7.z <- ambient.z; r7.w <- ambient.w
                
                #line 78
                dp3 r2.w, r0.yzwy, r1.xyzx  // r2.w <- diffuseFactor
                
                #line 82
                lt r10.x, l(0.000000), r2.w
                mov r0.yzw, -r0.yyzw
                dp3 r10.y, r0.yzwy, r1.xyzx
                add r10.y, r10.y, r10.y
                mov r10.y, -r10.y
                mul r10.yzw, r1.xxyz, r10.yyyy
                add r0.yzw, r0.yyzw, r10.yyzw  // r0.y <- v.x; r0.z <- v.y; r0.w <- v.z
                dp3 r0.y, r0.yzwy, r2.xyzx
                max r0.y, r0.y, l(0.000000)
                log r0.y, r0.y
                mul r0.y, r0.y, r9.w
                exp r0.y, r0.y  // r0.y <- specFactor
                mul r8.xyzw, r8.xyzw, r2.wwww
                mul r8.xyzw, r11.xyzw, r8.xyzw  // r8.x <- diffuse.x; r8.y <- diffuse.y; r8.z <- diffuse.z; r8.w <- diffuse.w
                mul r9.xyzw, r9.xyzw, r0.yyyy
                mul r9.xyzw, r12.xyzw, r9.xyzw  // r9.x <- spec.x; r9.y <- spec.y; r9.z <- spec.z; r9.w <- spec.w
                movc r8.xyzw, r10.xxxx, r8.xyzw, r13.xyzw
                movc r9.xyzw, r10.xxxx, r9.xyzw, r14.xyzw
                
                #line 360 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r7.xyzw, r7.xyzw  // r7.x <- A.x; r7.y <- A.y; r7.z <- A.z; r7.w <- A.w
                mov r8.xyzw, r8.xyzw  // r8.x <- D.x; r8.y <- D.y; r8.z <- D.z; r8.w <- D.w
                mov r9.xyzw, r9.xyzw  // r9.x <- S.x; r9.y <- S.y; r9.z <- S.z; r9.w <- S.w
                
                #line 363
                add r4.xyzw, r4.xyzw, r7.xyzw
                mul r7.xyzw, r0.xxxx, r8.xyzw
                add r5.xyzw, r5.xyzw, r7.xyzw
                mul r0.xyzw, r0.xxxx, r9.xyzw
                add r0.xyzw, r0.xyzw, r6.xyzw  // r0.x <- spec.x; r0.y <- spec.y; r0.z <- spec.z; r0.w <- spec.w
                
                #line 360
                nop 
                mov r6.xyzw, cb0[32].xyzw  // r6.x <- mat.Ambient.x; r6.y <- mat.Ambient.y; r6.z <- mat.Ambient.z; r6.w <- mat.Ambient.w
                mov r7.xyzw, cb0[33].xyzw  // r7.x <- mat.Diffuse.x; r7.y <- mat.Diffuse.y; r7.z <- mat.Diffuse.z; r7.w <- mat.Diffuse.w
                mov r8.xyzw, cb0[34].xyzw  // r8.x <- mat.Specular.x; r8.y <- mat.Specular.y; r8.z <- mat.Specular.z; r8.w <- mat.Specular.w
                mov r9.xyzw, cb0[4].xyzw  // r9.x <- L.Ambient.x; r9.y <- L.Ambient.y; r9.z <- L.Ambient.z; r9.w <- L.Ambient.w
                mov r10.xyzw, cb0[5].xyzw  // r10.x <- L.Diffuse.x; r10.y <- L.Diffuse.y; r10.z <- L.Diffuse.z; r10.w <- L.Diffuse.w
                mov r11.xyzw, cb0[6].xyzw  // r11.x <- L.Specular.x; r11.y <- L.Specular.y; r11.z <- L.Specular.z; r11.w <- L.Specular.w
                mov r12.xyz, cb0[7].xyzx  // r12.x <- L.Direction.x; r12.y <- L.Direction.y; r12.z <- L.Direction.z
                
                #line 66 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\LightHelper.fx"
                mov r13.xyzw, l(0,0,0,0)  // r13.x <- diffuse.x; r13.y <- diffuse.y; r13.z <- diffuse.z; r13.w <- diffuse.w
                mov r14.xyzw, l(0,0,0,0)  // r14.x <- spec.x; r14.y <- spec.y; r14.z <- spec.z; r14.w <- spec.w
                
                #line 70
                mov r12.xyz, -r12.xyzx  // r12.x <- lightVec.x; r12.y <- lightVec.y; r12.z <- lightVec.z
                
                #line 73
                mul r6.xyzw, r6.xyzw, r9.xyzw  // r6.x <- ambient.x; r6.y <- ambient.y; r6.z <- ambient.z; r6.w <- ambient.w
                
                #line 78
                dp3 r2.w, r12.xyzx, r1.xyzx
                
                #line 82
                lt r9.x, l(0.000000), r2.w
                mov r9.yzw, -r12.xxyz
                dp3 r12.x, r9.yzwy, r1.xyzx
                add r12.x, r12.x, r12.x
                mov r12.x, -r12.x
                mul r12.xyz, r1.xyzx, r12.xxxx
                add r9.yzw, r9.yyzw, r12.xxyz  // r9.y <- v.x; r9.z <- v.y; r9.w <- v.z
                dp3 r9.y, r9.yzwy, r2.xyzx
                max r9.y, r9.y, l(0.000000)
                log r9.y, r9.y
                mul r9.y, r8.w, r9.y
                exp r9.y, r9.y  // r9.y <- specFactor
                mul r7.xyzw, r7.xyzw, r2.wwww
                mul r7.xyzw, r10.xyzw, r7.xyzw  // r7.x <- diffuse.x; r7.y <- diffuse.y; r7.z <- diffuse.z; r7.w <- diffuse.w
                mul r8.xyzw, r8.xyzw, r9.yyyy
                mul r8.xyzw, r11.xyzw, r8.xyzw  // r8.x <- spec.x; r8.y <- spec.y; r8.z <- spec.z; r8.w <- spec.w
                movc r7.xyzw, r9.xxxx, r7.xyzw, r13.xyzw
                movc r8.xyzw, r9.xxxx, r8.xyzw, r14.xyzw
                
                #line 360 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r6.xyzw, r6.xyzw  // r6.x <- A.x; r6.y <- A.y; r6.z <- A.z; r6.w <- A.w
                mov r7.xyzw, r7.xyzw  // r7.x <- D.x; r7.y <- D.y; r7.z <- D.z; r7.w <- D.w
                mov r8.xyzw, r8.xyzw  // r8.x <- S.x; r8.y <- S.y; r8.z <- S.z; r8.w <- S.w
                
                #line 363
                add r4.xyzw, r4.xyzw, r6.xyzw
                mul r6.xyzw, r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
                add r5.xyzw, r5.xyzw, r6.xyzw
                mul r6.xyzw, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
                add r0.xyzw, r0.xyzw, r6.xyzw
                
                #line 360
                nop 
                mov r6.xyzw, cb0[32].xyzw  // r6.x <- mat.Ambient.x; r6.y <- mat.Ambient.y; r6.z <- mat.Ambient.z; r6.w <- mat.Ambient.w
                mov r7.xyzw, cb0[33].xyzw  // r7.x <- mat.Diffuse.x; r7.y <- mat.Diffuse.y; r7.z <- mat.Diffuse.z; r7.w <- mat.Diffuse.w
                mov r8.xyzw, cb0[34].xyzw  // r8.x <- mat.Specular.x; r8.y <- mat.Specular.y; r8.z <- mat.Specular.z; r8.w <- mat.Specular.w
                mov r9.xyzw, cb0[8].xyzw  // r9.x <- L.Ambient.x; r9.y <- L.Ambient.y; r9.z <- L.Ambient.z; r9.w <- L.Ambient.w
                mov r10.xyzw, cb0[9].xyzw
                mov r11.xyzw, cb0[10].xyzw
                mov r12.xyz, cb0[11].xyzx  // r12.x <- L.Direction.x; r12.y <- L.Direction.y; r12.z <- L.Direction.z
                
                #line 66 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\LightHelper.fx"
                mov r13.xyzw, l(0,0,0,0)  // r13.x <- diffuse.x; r13.y <- diffuse.y; r13.z <- diffuse.z; r13.w <- diffuse.w
                mov r14.xyzw, l(0,0,0,0)  // r14.x <- spec.x; r14.y <- spec.y; r14.z <- spec.z; r14.w <- spec.w
                
                #line 70
                mov r12.xyz, -r12.xyzx  // r12.x <- lightVec.x; r12.y <- lightVec.y; r12.z <- lightVec.z
                
                #line 73
                mul r6.xyzw, r6.xyzw, r9.xyzw  // r6.x <- ambient.x; r6.y <- ambient.y; r6.z <- ambient.z; r6.w <- ambient.w
                
                #line 78
                dp3 r2.w, r12.xyzx, r1.xyzx
                
                #line 82
                lt r9.x, l(0.000000), r2.w
                mov r9.yzw, -r12.xxyz
                dp3 r12.x, r9.yzwy, r1.xyzx
                add r12.x, r12.x, r12.x
                mov r12.x, -r12.x
                mul r1.xyz, r1.xyzx, r12.xxxx
                add r1.xyz, r9.yzwy, r1.xyzx  // r1.x <- v.x; r1.y <- v.y; r1.z <- v.z
                dp3 r1.x, r1.xyzx, r2.xyzx
                max r1.x, r1.x, l(0.000000)
                log r1.x, r1.x
                mul r1.x, r1.x, r8.w
                exp r1.x, r1.x  // r1.x <- specFactor
                mul r2.xyzw, r7.xyzw, r2.wwww
                mul r2.xyzw, r10.xyzw, r2.xyzw  // r2.x <- diffuse.x; r2.y <- diffuse.y; r2.z <- diffuse.z; r2.w <- diffuse.w
                mul r7.xyzw, r8.xyzw, r1.xxxx
                mul r7.xyzw, r11.xyzw, r7.xyzw  // r7.x <- spec.x; r7.y <- spec.y; r7.z <- spec.z; r7.w <- spec.w
                movc r2.xyzw, r9.xxxx, r2.xyzw, r13.xyzw
                movc r7.xyzw, r9.xxxx, r7.xyzw, r14.xyzw
                
                #line 360 "C:\Users\Park\Source\Repos\ZollJak-Test\Scatus Defence\Scatus Defence\FX\Terrain.fx"
                mov r6.xyzw, r6.xyzw  // r6.x <- A.x; r6.y <- A.y; r6.z <- A.z; r6.w <- A.w
                mov r2.xyzw, r2.xyzw  // r2.x <- D.x; r2.y <- D.y; r2.z <- D.z; r2.w <- D.w
                mov r7.xyzw, r7.xyzw  // r7.x <- S.x; r7.y <- S.y; r7.z <- S.z; r7.w <- S.w
                
                #line 363
                add r4.xyzw, r4.xyzw, r6.xyzw
                mul r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
                add r2.xyzw, r2.xyzw, r5.xyzw  // r2.x <- diffuse.x; r2.y <- diffuse.y; r2.z <- diffuse.z; r2.w <- diffuse.w
                mul r5.xyzw, r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
                add r0.xyzw, r0.xyzw, r5.xyzw
                
                #line 368
                add r2.xyzw, r2.xyzw, r4.xyzw
                mul r2.xyzw, r2.xyzw, r3.xyzw
                add r0.xyzw, r0.xyzw, r2.xyzw  // r0.x <- litColor.x; r0.y <- litColor.y; r0.z <- litColor.z; r0.w <- litColor.w
                
                #line 377
                mov r1.x, -cb0[12].w
                add r1.x, r1.x, r1.w
                div r1.x, r1.x, cb0[13].x
                max r1.x, r1.x, l(0.000000)
                min r1.x, r1.x, l(1.000000)  // r1.x <- fogLerp
                
                #line 380
                mov r2.xyzw, -r0.xyzw
                add r2.xyzw, r2.xyzw, cb0[14].xyzw
                mul r1.xyzw, r1.xxxx, r2.xyzw
                add r0.xyzw, r0.xyzw, r1.xyzw
                
                #line 383
                mov o0.xyzw, r0.xyzw
                ret 
                // Approximately 274 instruction slots used
                            
            };
        }

    }

}

